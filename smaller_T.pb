node {
  name: "Variable/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "Variable/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable_1/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Assign"
  op: "Assign"
  input: "Variable_1"
  input: "Variable_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Variable_2/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Variable_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Assign"
  op: "Assign"
  input: "Variable_2"
  input: "Variable_2/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/read"
  op: "Identity"
  input: "Variable_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "Variable_2/read"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "Variable_2"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "Variable/read"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "Variable/read"
  input: "mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "PiecewiseConstant/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 80
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 120
      }
    }
  }
}
node {
  name: "PiecewiseConstant/LessEqual"
  op: "LessEqual"
  input: "Variable_2/read"
  input: "PiecewiseConstant/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "PiecewiseConstant/Greater"
  op: "Greater"
  input: "Variable_2/read"
  input: "PiecewiseConstant/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "PiecewiseConstant/Greater_1"
  op: "Greater"
  input: "Variable_2/read"
  input: "PiecewiseConstant/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "PiecewiseConstant/LessEqual_1"
  op: "LessEqual"
  input: "Variable_2/read"
  input: "PiecewiseConstant/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "PiecewiseConstant/and"
  op: "LogicalAnd"
  input: "PiecewiseConstant/Greater_1"
  input: "PiecewiseConstant/LessEqual_1"
}
node {
  name: "PiecewiseConstant/case/preds_c"
  op: "Pack"
  input: "PiecewiseConstant/LessEqual"
  input: "PiecewiseConstant/Greater"
  input: "PiecewiseConstant/and"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "PiecewiseConstant/case/Cast"
  op: "Cast"
  input: "PiecewiseConstant/case/preds_c"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/num_true_conds"
  op: "Sum"
  input: "PiecewiseConstant/case/Cast"
  input: "PiecewiseConstant/case/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "PiecewiseConstant/case/n_true_conds"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/LessEqual"
  op: "LessEqual"
  input: "PiecewiseConstant/case/num_true_conds"
  input: "PiecewiseConstant/case/n_true_conds"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (PiecewiseConstant/LessEqual:0, PiecewiseConstant/Greater:0, PiecewiseConstant/and:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "PiecewiseConstant/case/LessEqual"
  input: "PiecewiseConstant/case/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "PiecewiseConstant/case/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/switch_t"
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "PiecewiseConstant/case/Assert/AssertGuard/switch_t"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/case/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (PiecewiseConstant/LessEqual:0, PiecewiseConstant/Greater:0, PiecewiseConstant/and:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Assert/Switch"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Assert/data_0"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "PiecewiseConstant/case/LessEqual"
  input: "PiecewiseConstant/case/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/case/LessEqual"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "PiecewiseConstant/case/preds_c"
  input: "PiecewiseConstant/case/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/case/preds_c"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "PiecewiseConstant/case/Assert/AssertGuard/switch_f"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/case/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "PiecewiseConstant/case/Assert/AssertGuard/control_dependency_1"
  input: "PiecewiseConstant/case/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/Switch"
  op: "Switch"
  input: "PiecewiseConstant/LessEqual"
  input: "PiecewiseConstant/LessEqual"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/switch_t"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/switch_f"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/pred_id"
  op: "Identity"
  input: "PiecewiseConstant/LessEqual"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/Switch_1"
  op: "Switch"
  input: "Variable/read"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Switch"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/Switch/Switch"
  input: "PiecewiseConstant/case/cond/cond/Switch/Switch"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Switch/Switch"
  op: "Switch"
  input: "PiecewiseConstant/Greater"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Greater"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/switch_t"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/switch_f"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/pred_id"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/Switch/Switch"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Switch_1"
  op: "Switch"
  input: "mul_1"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Switch_2"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/Switch_1"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch_1"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch_1"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch"
  op: "Switch"
  input: "PiecewiseConstant/and"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/and"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch_1"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/and"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/switch_t"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/switch_f"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/pred_id"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch_1"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch_1"
  op: "Switch"
  input: "mul"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch_2"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch_1"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch_3"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch_2"
  input: "PiecewiseConstant/case/cond/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch_4"
  op: "Switch"
  input: "Variable/read"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch_5"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch_4"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch_6"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch_5"
  input: "PiecewiseConstant/case/cond/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Merge"
  op: "Merge"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch_6"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch_3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Merge"
  op: "Merge"
  input: "PiecewiseConstant/case/cond/cond/cond/Merge"
  input: "PiecewiseConstant/case/cond/cond/Switch_2:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/Merge"
  op: "Merge"
  input: "PiecewiseConstant/case/cond/cond/Merge"
  input: "PiecewiseConstant/case/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/feature"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
        dim {
          size: 7
        }
      }
    }
  }
}
node {
  name: "gpu_0/number"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "gpu_0/coordinate"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "gpu_0/Max/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/Max"
  op: "Max"
  input: "gpu_0/feature"
  input: "gpu_0/Max/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/NotEqual/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gpu_0/NotEqual"
  op: "NotEqual"
  input: "gpu_0/Max"
  input: "gpu_0/NotEqual/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "VFE-1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5107539296150208
      }
    }
  }
}
node {
  name: "VFE-1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5107539296150208
      }
    }
  }
}
node {
  name: "VFE-1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VFE-1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "VFE-1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "VFE-1/kernel/Initializer/random_uniform/max"
  input: "VFE-1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
}
node {
  name: "VFE-1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "VFE-1/kernel/Initializer/random_uniform/RandomUniform"
  input: "VFE-1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
}
node {
  name: "VFE-1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "VFE-1/kernel/Initializer/random_uniform/mul"
  input: "VFE-1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
}
node {
  name: "VFE-1/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/kernel/Assign"
  op: "Assign"
  input: "VFE-1/kernel"
  input: "VFE-1/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/kernel/read"
  op: "Identity"
  input: "VFE-1/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
}
node {
  name: "VFE-1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/bias/Assign"
  op: "Assign"
  input: "VFE-1/bias"
  input: "VFE-1/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/bias/read"
  op: "Identity"
  input: "VFE-1/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Shape"
  op: "Shape"
  input: "gpu_0/feature"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/axes"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/GreaterEqual/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "gpu_0/VFE-1/Tensordot/axes"
  input: "gpu_0/VFE-1/Tensordot/GreaterEqual/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Cast"
  op: "Cast"
  input: "gpu_0/VFE-1/Tensordot/GreaterEqual"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/mul"
  op: "Mul"
  input: "gpu_0/VFE-1/Tensordot/Cast"
  input: "gpu_0/VFE-1/Tensordot/axes"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Less/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Less"
  op: "Less"
  input: "gpu_0/VFE-1/Tensordot/axes"
  input: "gpu_0/VFE-1/Tensordot/Less/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Cast_1"
  op: "Cast"
  input: "gpu_0/VFE-1/Tensordot/Less"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/add"
  op: "Add"
  input: "gpu_0/VFE-1/Tensordot/axes"
  input: "gpu_0/VFE-1/Tensordot/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/mul_1"
  op: "Mul"
  input: "gpu_0/VFE-1/Tensordot/Cast_1"
  input: "gpu_0/VFE-1/Tensordot/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/add_1"
  op: "Add"
  input: "gpu_0/VFE-1/Tensordot/mul"
  input: "gpu_0/VFE-1/Tensordot/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/range"
  op: "Range"
  input: "gpu_0/VFE-1/Tensordot/range/start"
  input: "gpu_0/VFE-1/Tensordot/Rank"
  input: "gpu_0/VFE-1/Tensordot/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/ListDiff"
  op: "ListDiff"
  input: "gpu_0/VFE-1/Tensordot/range"
  input: "gpu_0/VFE-1/Tensordot/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Gather"
  op: "Gather"
  input: "gpu_0/VFE-1/Tensordot/Shape"
  input: "gpu_0/VFE-1/Tensordot/ListDiff"
  device: "/device:GPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Gather_1"
  op: "Gather"
  input: "gpu_0/VFE-1/Tensordot/Shape"
  input: "gpu_0/VFE-1/Tensordot/add_1"
  device: "/device:GPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Prod"
  op: "Prod"
  input: "gpu_0/VFE-1/Tensordot/Gather"
  input: "gpu_0/VFE-1/Tensordot/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Prod_1"
  op: "Prod"
  input: "gpu_0/VFE-1/Tensordot/Gather_1"
  input: "gpu_0/VFE-1/Tensordot/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/concat"
  op: "ConcatV2"
  input: "gpu_0/VFE-1/Tensordot/Gather_1"
  input: "gpu_0/VFE-1/Tensordot/Gather"
  input: "gpu_0/VFE-1/Tensordot/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "gpu_0/VFE-1/Tensordot/ListDiff"
  input: "gpu_0/VFE-1/Tensordot/add_1"
  input: "gpu_0/VFE-1/Tensordot/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/stack"
  op: "Pack"
  input: "gpu_0/VFE-1/Tensordot/Prod"
  input: "gpu_0/VFE-1/Tensordot/Prod_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/transpose"
  op: "Transpose"
  input: "gpu_0/feature"
  input: "gpu_0/VFE-1/Tensordot/concat_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Reshape"
  op: "Reshape"
  input: "gpu_0/VFE-1/Tensordot/transpose"
  input: "gpu_0/VFE-1/Tensordot/stack"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/transpose_1/perm"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/transpose_1"
  op: "Transpose"
  input: "VFE-1/kernel/read"
  input: "gpu_0/VFE-1/Tensordot/transpose_1/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Reshape_1/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "gpu_0/VFE-1/Tensordot/transpose_1"
  input: "gpu_0/VFE-1/Tensordot/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/MatMul"
  op: "MatMul"
  input: "gpu_0/VFE-1/Tensordot/Reshape"
  input: "gpu_0/VFE-1/Tensordot/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/concat_2/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot/concat_2"
  op: "ConcatV2"
  input: "gpu_0/VFE-1/Tensordot/Gather"
  input: "gpu_0/VFE-1/Tensordot/Const_2"
  input: "gpu_0/VFE-1/Tensordot/concat_2/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/Tensordot"
  op: "Reshape"
  input: "gpu_0/VFE-1/Tensordot/MatMul"
  input: "gpu_0/VFE-1/Tensordot/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-1/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/VFE-1/Tensordot"
  input: "VFE-1/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/VFE-1/Relu"
  op: "Relu"
  input: "gpu_0/VFE-1/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VFE-1/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/gamma/Assign"
  op: "Assign"
  input: "VFE-1/gamma"
  input: "VFE-1/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/gamma/read"
  op: "Identity"
  input: "VFE-1/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
}
node {
  name: "VFE-1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/beta/Assign"
  op: "Assign"
  input: "VFE-1/beta"
  input: "VFE-1/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/beta/read"
  op: "Identity"
  input: "VFE-1/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
}
node {
  name: "VFE-1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/moving_mean/Assign"
  op: "Assign"
  input: "VFE-1/moving_mean"
  input: "VFE-1/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/moving_mean/read"
  op: "Identity"
  input: "VFE-1/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_mean"
      }
    }
  }
}
node {
  name: "VFE-1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VFE-1/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/moving_variance/Assign"
  op: "Assign"
  input: "VFE-1/moving_variance"
  input: "VFE-1/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/moving_variance/read"
  op: "Identity"
  input: "VFE-1/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/moments/mean"
  op: "Mean"
  input: "gpu_0/VFE-1/Relu"
  input: "gpu_0/VFE-1/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/VFE-1/moments/StopGradient"
  op: "StopGradient"
  input: "gpu_0/VFE-1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gpu_0/VFE-1/Relu"
  input: "gpu_0/VFE-1/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-1/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/moments/variance"
  op: "Mean"
  input: "gpu_0/VFE-1/moments/SquaredDifference"
  input: "gpu_0/VFE-1/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/VFE-1/moments/Squeeze"
  op: "Squeeze"
  input: "gpu_0/VFE-1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/moments/Squeeze_1"
  op: "Squeeze"
  input: "gpu_0/VFE-1/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/AssignMovingAvg/sub"
  op: "Sub"
  input: "VFE-1/moving_mean/read"
  input: "gpu_0/VFE-1/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/AssignMovingAvg/mul"
  op: "Mul"
  input: "gpu_0/VFE-1/AssignMovingAvg/sub"
  input: "gpu_0/VFE-1/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/AssignMovingAvg"
  op: "AssignSub"
  input: "VFE-1/moving_mean"
  input: "gpu_0/VFE-1/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-1/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "VFE-1/moving_variance/read"
  input: "gpu_0/VFE-1/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gpu_0/VFE-1/AssignMovingAvg_1/sub"
  input: "gpu_0/VFE-1/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "VFE-1/moving_variance"
  input: "gpu_0/VFE-1/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-1/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gpu_0/VFE-1/batchnorm/add"
  op: "Add"
  input: "gpu_0/VFE-1/moments/Squeeze_1"
  input: "gpu_0/VFE-1/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gpu_0/VFE-1/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-1/batchnorm/mul"
  op: "Mul"
  input: "gpu_0/VFE-1/batchnorm/Rsqrt"
  input: "VFE-1/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-1/batchnorm/mul_1"
  op: "Mul"
  input: "gpu_0/VFE-1/Relu"
  input: "gpu_0/VFE-1/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-1/batchnorm/mul_2"
  op: "Mul"
  input: "gpu_0/VFE-1/moments/Squeeze"
  input: "gpu_0/VFE-1/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-1/batchnorm/sub"
  op: "Sub"
  input: "VFE-1/beta/read"
  input: "gpu_0/VFE-1/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-1/batchnorm/add_1"
  op: "Add"
  input: "gpu_0/VFE-1/batchnorm/mul_1"
  input: "gpu_0/VFE-1/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/Max_1/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/Max_1"
  op: "Max"
  input: "gpu_0/VFE-1/batchnorm/add_1"
  input: "gpu_0/Max_1/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/Tile/multiples"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\024\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/Tile"
  op: "Tile"
  input: "gpu_0/Max_1"
  input: "gpu_0/Tile/multiples"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/concat"
  op: "ConcatV2"
  input: "gpu_0/VFE-1/batchnorm/add_1"
  input: "gpu_0/Tile"
  input: "gpu_0/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/Tile_1/multiples"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/Tile_1"
  op: "Tile"
  input: "gpu_0/NotEqual"
  input: "gpu_0/Tile_1/multiples"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/Cast"
  op: "Cast"
  input: "gpu_0/Tile_1"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/Mul"
  op: "Mul"
  input: "gpu_0/concat"
  input: "gpu_0/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "VFE-2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "VFE-2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "VFE-2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VFE-2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "VFE-2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "VFE-2/kernel/Initializer/random_uniform/max"
  input: "VFE-2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
}
node {
  name: "VFE-2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "VFE-2/kernel/Initializer/random_uniform/RandomUniform"
  input: "VFE-2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
}
node {
  name: "VFE-2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "VFE-2/kernel/Initializer/random_uniform/mul"
  input: "VFE-2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
}
node {
  name: "VFE-2/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/kernel/Assign"
  op: "Assign"
  input: "VFE-2/kernel"
  input: "VFE-2/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/kernel/read"
  op: "Identity"
  input: "VFE-2/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
}
node {
  name: "VFE-2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/bias/Assign"
  op: "Assign"
  input: "VFE-2/bias"
  input: "VFE-2/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/bias/read"
  op: "Identity"
  input: "VFE-2/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Shape"
  op: "Shape"
  input: "gpu_0/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/axes"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/GreaterEqual/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "gpu_0/VFE-2/Tensordot/axes"
  input: "gpu_0/VFE-2/Tensordot/GreaterEqual/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Cast"
  op: "Cast"
  input: "gpu_0/VFE-2/Tensordot/GreaterEqual"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/mul"
  op: "Mul"
  input: "gpu_0/VFE-2/Tensordot/Cast"
  input: "gpu_0/VFE-2/Tensordot/axes"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Less/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Less"
  op: "Less"
  input: "gpu_0/VFE-2/Tensordot/axes"
  input: "gpu_0/VFE-2/Tensordot/Less/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Cast_1"
  op: "Cast"
  input: "gpu_0/VFE-2/Tensordot/Less"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/add"
  op: "Add"
  input: "gpu_0/VFE-2/Tensordot/axes"
  input: "gpu_0/VFE-2/Tensordot/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/mul_1"
  op: "Mul"
  input: "gpu_0/VFE-2/Tensordot/Cast_1"
  input: "gpu_0/VFE-2/Tensordot/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/add_1"
  op: "Add"
  input: "gpu_0/VFE-2/Tensordot/mul"
  input: "gpu_0/VFE-2/Tensordot/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/range"
  op: "Range"
  input: "gpu_0/VFE-2/Tensordot/range/start"
  input: "gpu_0/VFE-2/Tensordot/Rank"
  input: "gpu_0/VFE-2/Tensordot/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "gpu_0/VFE-2/Tensordot/range"
  input: "gpu_0/VFE-2/Tensordot/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Gather"
  op: "Gather"
  input: "gpu_0/VFE-2/Tensordot/Shape"
  input: "gpu_0/VFE-2/Tensordot/ListDiff"
  device: "/device:GPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Gather_1"
  op: "Gather"
  input: "gpu_0/VFE-2/Tensordot/Shape"
  input: "gpu_0/VFE-2/Tensordot/add_1"
  device: "/device:GPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Prod"
  op: "Prod"
  input: "gpu_0/VFE-2/Tensordot/Gather"
  input: "gpu_0/VFE-2/Tensordot/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Prod_1"
  op: "Prod"
  input: "gpu_0/VFE-2/Tensordot/Gather_1"
  input: "gpu_0/VFE-2/Tensordot/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/concat"
  op: "ConcatV2"
  input: "gpu_0/VFE-2/Tensordot/Gather_1"
  input: "gpu_0/VFE-2/Tensordot/Gather"
  input: "gpu_0/VFE-2/Tensordot/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "gpu_0/VFE-2/Tensordot/ListDiff"
  input: "gpu_0/VFE-2/Tensordot/add_1"
  input: "gpu_0/VFE-2/Tensordot/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/stack"
  op: "Pack"
  input: "gpu_0/VFE-2/Tensordot/Prod"
  input: "gpu_0/VFE-2/Tensordot/Prod_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/transpose"
  op: "Transpose"
  input: "gpu_0/Mul"
  input: "gpu_0/VFE-2/Tensordot/concat_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Reshape"
  op: "Reshape"
  input: "gpu_0/VFE-2/Tensordot/transpose"
  input: "gpu_0/VFE-2/Tensordot/stack"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/transpose_1/perm"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/transpose_1"
  op: "Transpose"
  input: "VFE-2/kernel/read"
  input: "gpu_0/VFE-2/Tensordot/transpose_1/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Reshape_1/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "gpu_0/VFE-2/Tensordot/transpose_1"
  input: "gpu_0/VFE-2/Tensordot/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/MatMul"
  op: "MatMul"
  input: "gpu_0/VFE-2/Tensordot/Reshape"
  input: "gpu_0/VFE-2/Tensordot/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/concat_2/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "gpu_0/VFE-2/Tensordot/Gather"
  input: "gpu_0/VFE-2/Tensordot/Const_2"
  input: "gpu_0/VFE-2/Tensordot/concat_2/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/Tensordot"
  op: "Reshape"
  input: "gpu_0/VFE-2/Tensordot/MatMul"
  input: "gpu_0/VFE-2/Tensordot/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/VFE-2/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/VFE-2/Tensordot"
  input: "VFE-2/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/VFE-2/Relu"
  op: "Relu"
  input: "gpu_0/VFE-2/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VFE-2/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/gamma/Assign"
  op: "Assign"
  input: "VFE-2/gamma"
  input: "VFE-2/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/gamma/read"
  op: "Identity"
  input: "VFE-2/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
}
node {
  name: "VFE-2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/beta/Assign"
  op: "Assign"
  input: "VFE-2/beta"
  input: "VFE-2/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/beta/read"
  op: "Identity"
  input: "VFE-2/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
}
node {
  name: "VFE-2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/moving_mean/Assign"
  op: "Assign"
  input: "VFE-2/moving_mean"
  input: "VFE-2/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/moving_mean/read"
  op: "Identity"
  input: "VFE-2/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_mean"
      }
    }
  }
}
node {
  name: "VFE-2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VFE-2/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/moving_variance/Assign"
  op: "Assign"
  input: "VFE-2/moving_variance"
  input: "VFE-2/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/moving_variance/read"
  op: "Identity"
  input: "VFE-2/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/moments/mean"
  op: "Mean"
  input: "gpu_0/VFE-2/Relu"
  input: "gpu_0/VFE-2/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/VFE-2/moments/StopGradient"
  op: "StopGradient"
  input: "gpu_0/VFE-2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gpu_0/VFE-2/Relu"
  input: "gpu_0/VFE-2/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-2/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/moments/variance"
  op: "Mean"
  input: "gpu_0/VFE-2/moments/SquaredDifference"
  input: "gpu_0/VFE-2/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/VFE-2/moments/Squeeze"
  op: "Squeeze"
  input: "gpu_0/VFE-2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/moments/Squeeze_1"
  op: "Squeeze"
  input: "gpu_0/VFE-2/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/AssignMovingAvg/sub"
  op: "Sub"
  input: "VFE-2/moving_mean/read"
  input: "gpu_0/VFE-2/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/AssignMovingAvg/mul"
  op: "Mul"
  input: "gpu_0/VFE-2/AssignMovingAvg/sub"
  input: "gpu_0/VFE-2/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/AssignMovingAvg"
  op: "AssignSub"
  input: "VFE-2/moving_mean"
  input: "gpu_0/VFE-2/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-2/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "VFE-2/moving_variance/read"
  input: "gpu_0/VFE-2/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gpu_0/VFE-2/AssignMovingAvg_1/sub"
  input: "gpu_0/VFE-2/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "VFE-2/moving_variance"
  input: "gpu_0/VFE-2/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/VFE-2/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gpu_0/VFE-2/batchnorm/add"
  op: "Add"
  input: "gpu_0/VFE-2/moments/Squeeze_1"
  input: "gpu_0/VFE-2/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gpu_0/VFE-2/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-2/batchnorm/mul"
  op: "Mul"
  input: "gpu_0/VFE-2/batchnorm/Rsqrt"
  input: "VFE-2/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-2/batchnorm/mul_1"
  op: "Mul"
  input: "gpu_0/VFE-2/Relu"
  input: "gpu_0/VFE-2/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-2/batchnorm/mul_2"
  op: "Mul"
  input: "gpu_0/VFE-2/moments/Squeeze"
  input: "gpu_0/VFE-2/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-2/batchnorm/sub"
  op: "Sub"
  input: "VFE-2/beta/read"
  input: "gpu_0/VFE-2/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/VFE-2/batchnorm/add_1"
  op: "Add"
  input: "gpu_0/VFE-2/batchnorm/mul_1"
  input: "gpu_0/VFE-2/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/Max_2/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/Max_2"
  op: "Max"
  input: "gpu_0/VFE-2/batchnorm/add_1"
  input: "gpu_0/Max_2/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/Tile_2/multiples"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\024\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/Tile_2"
  op: "Tile"
  input: "gpu_0/Max_2"
  input: "gpu_0/Tile_2/multiples"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/concat_1"
  op: "ConcatV2"
  input: "gpu_0/VFE-2/batchnorm/add_1"
  input: "gpu_0/Tile_2"
  input: "gpu_0/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/Tile_3/multiples"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/Tile_3"
  op: "Tile"
  input: "gpu_0/NotEqual"
  input: "gpu_0/Tile_3/multiples"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/Cast_1"
  op: "Cast"
  input: "gpu_0/Tile_3"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/Mul_1"
  op: "Mul"
  input: "gpu_0/concat_1"
  input: "gpu_0/Cast_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/Max_3/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/Max_3"
  op: "Max"
  input: "gpu_0/Mul_1"
  input: "gpu_0/Max_3/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/ScatterNd/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\220\001\000\000\000\000\000\000`\001\000\000\000\000\000\000\200\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/ScatterNd"
  op: "ScatterNd"
  input: "gpu_0/coordinate"
  input: "gpu_0/Max_3"
  input: "gpu_0/ScatterNd/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gpu_0/Placeholder"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 200
        }
        dim {
          size: 176
        }
        dim {
          size: 14
        }
      }
    }
  }
}
node {
  name: "gpu_0/Placeholder_1"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 200
        }
        dim {
          size: 176
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "gpu_0/Placeholder_2"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "gpu_0/Placeholder_3"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 200
        }
        dim {
          size: 176
        }
        dim {
          size: 14
        }
      }
    }
  }
}
node {
  name: "gpu_0/Placeholder_4"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 200
        }
        dim {
          size: 176
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "gpu_0/Placeholder_5"
  op: "Placeholder"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/Pad"
  op: "Pad"
  input: "gpu_0/ScatterNd"
  input: "gpu_0/MiddleAndRPN_/conv1/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.034020692110061646
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.034020692110061646
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/kernel"
  input: "MiddleAndRPN_/conv1/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/bias"
  input: "MiddleAndRPN_/conv1/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/Conv3D"
  op: "Conv3D"
  input: "gpu_0/MiddleAndRPN_/conv1/Pad"
  input: "MiddleAndRPN_/conv1/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv1/Conv3D"
  input: "MiddleAndRPN_/conv1/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/gamma"
  input: "MiddleAndRPN_/conv1/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/beta"
  input: "MiddleAndRPN_/conv1/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/moving_mean"
  input: "MiddleAndRPN_/conv1/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/moving_variance"
  input: "MiddleAndRPN_/conv1/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/moments/mean"
  op: "Mean"
  input: "gpu_0/MiddleAndRPN_/conv1/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/moments/StopGradient"
  op: "StopGradient"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gpu_0/MiddleAndRPN_/conv1/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/moments/variance"
  op: "Mean"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/moments/Squeeze"
  op: "Squeeze"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_1"
  op: "Squeeze"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv1/moving_mean/read"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg/sub"
  input: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv1/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv1/moving_variance/read"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg_1/sub"
  input: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv1/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv1/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/batchnorm/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_1"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/batchnorm/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/Rsqrt"
  input: "MiddleAndRPN_/conv1/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv1/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_2"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/Squeeze"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/batchnorm/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv1/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv1/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv1/Relu"
  input: "gpu_0/MiddleAndRPN_/conv2/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/kernel"
  input: "MiddleAndRPN_/conv2/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/bias"
  input: "MiddleAndRPN_/conv2/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/Conv3D"
  op: "Conv3D"
  input: "gpu_0/MiddleAndRPN_/conv2/Pad"
  input: "MiddleAndRPN_/conv2/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv2/Conv3D"
  input: "MiddleAndRPN_/conv2/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/gamma"
  input: "MiddleAndRPN_/conv2/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/beta"
  input: "MiddleAndRPN_/conv2/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/moving_mean"
  input: "MiddleAndRPN_/conv2/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/moving_variance"
  input: "MiddleAndRPN_/conv2/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/moments/mean"
  op: "Mean"
  input: "gpu_0/MiddleAndRPN_/conv2/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/moments/StopGradient"
  op: "StopGradient"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gpu_0/MiddleAndRPN_/conv2/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/moments/variance"
  op: "Mean"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/moments/Squeeze"
  op: "Squeeze"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_1"
  op: "Squeeze"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv2/moving_mean/read"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg/sub"
  input: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv2/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv2/moving_variance/read"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg_1/sub"
  input: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv2/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv2/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/batchnorm/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_1"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/batchnorm/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/Rsqrt"
  input: "MiddleAndRPN_/conv2/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv2/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_2"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/Squeeze"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/batchnorm/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv2/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv2/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv2/Relu"
  input: "gpu_0/MiddleAndRPN_/conv3/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/kernel"
  input: "MiddleAndRPN_/conv3/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/bias"
  input: "MiddleAndRPN_/conv3/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/Conv3D"
  op: "Conv3D"
  input: "gpu_0/MiddleAndRPN_/conv3/Pad"
  input: "MiddleAndRPN_/conv3/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv3/Conv3D"
  input: "MiddleAndRPN_/conv3/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/gamma"
  input: "MiddleAndRPN_/conv3/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/beta"
  input: "MiddleAndRPN_/conv3/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/moving_mean"
  input: "MiddleAndRPN_/conv3/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/moving_variance"
  input: "MiddleAndRPN_/conv3/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/moments/mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/moments/mean"
  op: "Mean"
  input: "gpu_0/MiddleAndRPN_/conv3/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/moments/StopGradient"
  op: "StopGradient"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gpu_0/MiddleAndRPN_/conv3/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/StopGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/moments/variance/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/moments/variance"
  op: "Mean"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/variance/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/moments/Squeeze"
  op: "Squeeze"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_1"
  op: "Squeeze"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv3/moving_mean/read"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg/sub"
  input: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv3/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv3/moving_variance/read"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg_1/sub"
  input: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg_1/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv3/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv3/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/batchnorm/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/batchnorm/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_1"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/batchnorm/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/Rsqrt"
  input: "MiddleAndRPN_/conv3/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv3/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_2"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/Squeeze"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/batchnorm/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv3/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv3/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/transpose/perm"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/transpose"
  op: "Transpose"
  input: "gpu_0/MiddleAndRPN_/conv3/Relu"
  input: "gpu_0/MiddleAndRPN_/transpose/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\220\001\000\000`\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Reshape"
  op: "Reshape"
  input: "gpu_0/MiddleAndRPN_/transpose"
  input: "gpu_0/MiddleAndRPN_/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/Reshape"
  input: "gpu_0/MiddleAndRPN_/conv4/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/kernel"
  input: "MiddleAndRPN_/conv4/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/bias"
  input: "MiddleAndRPN_/conv4/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv4/Pad"
  input: "MiddleAndRPN_/conv4/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv4/Conv2D"
  input: "MiddleAndRPN_/conv4/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/gamma"
  input: "MiddleAndRPN_/conv4/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/beta"
  input: "MiddleAndRPN_/conv4/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/moving_mean"
  input: "MiddleAndRPN_/conv4/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/moving_variance"
  input: "MiddleAndRPN_/conv4/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv4/BiasAdd"
  input: "MiddleAndRPN_/conv4/gamma/read"
  input: "MiddleAndRPN_/conv4/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv4/Const"
  input: "gpu_0/MiddleAndRPN_/conv4/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv4/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv4/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv4/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv4/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv4/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv4/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv4/Relu"
  input: "gpu_0/MiddleAndRPN_/conv5/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/kernel"
  input: "MiddleAndRPN_/conv5/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/bias"
  input: "MiddleAndRPN_/conv5/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv5/Pad"
  input: "MiddleAndRPN_/conv5/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv5/Conv2D"
  input: "MiddleAndRPN_/conv5/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/gamma"
  input: "MiddleAndRPN_/conv5/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/beta"
  input: "MiddleAndRPN_/conv5/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/moving_mean"
  input: "MiddleAndRPN_/conv5/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/moving_variance"
  input: "MiddleAndRPN_/conv5/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv5/BiasAdd"
  input: "MiddleAndRPN_/conv5/gamma/read"
  input: "MiddleAndRPN_/conv5/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv5/Const"
  input: "gpu_0/MiddleAndRPN_/conv5/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv5/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv5/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv5/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv5/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv5/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv5/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv5/Relu"
  input: "gpu_0/MiddleAndRPN_/conv6/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/kernel"
  input: "MiddleAndRPN_/conv6/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/bias"
  input: "MiddleAndRPN_/conv6/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv6/Pad"
  input: "MiddleAndRPN_/conv6/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv6/Conv2D"
  input: "MiddleAndRPN_/conv6/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/gamma"
  input: "MiddleAndRPN_/conv6/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/beta"
  input: "MiddleAndRPN_/conv6/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/moving_mean"
  input: "MiddleAndRPN_/conv6/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/moving_variance"
  input: "MiddleAndRPN_/conv6/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv6/BiasAdd"
  input: "MiddleAndRPN_/conv6/gamma/read"
  input: "MiddleAndRPN_/conv6/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv6/Const"
  input: "gpu_0/MiddleAndRPN_/conv6/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv6/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv6/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv6/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv6/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv6/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv6/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv6/Relu"
  input: "gpu_0/MiddleAndRPN_/conv7/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/kernel"
  input: "MiddleAndRPN_/conv7/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/bias"
  input: "MiddleAndRPN_/conv7/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv7/Pad"
  input: "MiddleAndRPN_/conv7/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv7/Conv2D"
  input: "MiddleAndRPN_/conv7/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/gamma"
  input: "MiddleAndRPN_/conv7/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/beta"
  input: "MiddleAndRPN_/conv7/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/moving_mean"
  input: "MiddleAndRPN_/conv7/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/moving_variance"
  input: "MiddleAndRPN_/conv7/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv7/BiasAdd"
  input: "MiddleAndRPN_/conv7/gamma/read"
  input: "MiddleAndRPN_/conv7/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv7/Const"
  input: "gpu_0/MiddleAndRPN_/conv7/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv7/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv7/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv7/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv7/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv7/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv7/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv7/Relu"
  input: "gpu_0/MiddleAndRPN_/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/kernel"
  input: "MiddleAndRPN_/deconv1/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/bias"
  input: "MiddleAndRPN_/deconv1/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice"
  op: "StridedSlice"
  input: "gpu_0/MiddleAndRPN_/deconv1/Shape"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice/stack"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice/stack_1"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_1"
  op: "StridedSlice"
  input: "gpu_0/MiddleAndRPN_/deconv1/Shape"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_1/stack"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_1/stack_1"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_2"
  op: "StridedSlice"
  input: "gpu_0/MiddleAndRPN_/deconv1/Shape"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_2/stack"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_2/stack_1"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/mul/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_1"
  input: "gpu_0/MiddleAndRPN_/deconv1/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice_2"
  input: "gpu_0/MiddleAndRPN_/deconv1/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/stack/3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/stack"
  op: "Pack"
  input: "gpu_0/MiddleAndRPN_/deconv1/strided_slice"
  input: "gpu_0/MiddleAndRPN_/deconv1/mul"
  input: "gpu_0/MiddleAndRPN_/deconv1/mul_1"
  input: "gpu_0/MiddleAndRPN_/deconv1/stack/3"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "gpu_0/MiddleAndRPN_/deconv1/stack"
  input: "MiddleAndRPN_/deconv1/kernel/read"
  input: "gpu_0/MiddleAndRPN_/Pad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose"
  input: "MiddleAndRPN_/deconv1/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/gamma"
  input: "MiddleAndRPN_/deconv1/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/beta"
  input: "MiddleAndRPN_/deconv1/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/moving_mean"
  input: "MiddleAndRPN_/deconv1/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/moving_variance"
  input: "MiddleAndRPN_/deconv1/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/deconv1/BiasAdd"
  input: "MiddleAndRPN_/deconv1/gamma/read"
  input: "MiddleAndRPN_/deconv1/beta/read"
  input: "gpu_0/MiddleAndRPN_/deconv1/Const"
  input: "gpu_0/MiddleAndRPN_/deconv1/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/deconv1/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/deconv1/moving_mean"
  input: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/deconv1/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/deconv1/moving_variance"
  input: "gpu_0/MiddleAndRPN_/deconv1/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv1/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv7/Relu"
  input: "gpu_0/MiddleAndRPN_/conv8/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/kernel"
  input: "MiddleAndRPN_/conv8/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/bias"
  input: "MiddleAndRPN_/conv8/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv8/Pad"
  input: "MiddleAndRPN_/conv8/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv8/Conv2D"
  input: "MiddleAndRPN_/conv8/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/gamma"
  input: "MiddleAndRPN_/conv8/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/beta"
  input: "MiddleAndRPN_/conv8/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/moving_mean"
  input: "MiddleAndRPN_/conv8/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/moving_variance"
  input: "MiddleAndRPN_/conv8/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv8/BiasAdd"
  input: "MiddleAndRPN_/conv8/gamma/read"
  input: "MiddleAndRPN_/conv8/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv8/Const"
  input: "gpu_0/MiddleAndRPN_/conv8/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv8/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv8/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv8/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv8/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv8/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv8/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv8/Relu"
  input: "gpu_0/MiddleAndRPN_/conv9/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/kernel"
  input: "MiddleAndRPN_/conv9/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/bias"
  input: "MiddleAndRPN_/conv9/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv9/Pad"
  input: "MiddleAndRPN_/conv9/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv9/Conv2D"
  input: "MiddleAndRPN_/conv9/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/gamma"
  input: "MiddleAndRPN_/conv9/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/beta"
  input: "MiddleAndRPN_/conv9/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/moving_mean"
  input: "MiddleAndRPN_/conv9/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/moving_variance"
  input: "MiddleAndRPN_/conv9/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv9/BiasAdd"
  input: "MiddleAndRPN_/conv9/gamma/read"
  input: "MiddleAndRPN_/conv9/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv9/Const"
  input: "gpu_0/MiddleAndRPN_/conv9/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv9/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv9/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv9/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv9/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv9/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv9/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv9/Relu"
  input: "gpu_0/MiddleAndRPN_/conv10/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/kernel"
  input: "MiddleAndRPN_/conv10/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/bias"
  input: "MiddleAndRPN_/conv10/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv10/Pad"
  input: "MiddleAndRPN_/conv10/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv10/Conv2D"
  input: "MiddleAndRPN_/conv10/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/gamma"
  input: "MiddleAndRPN_/conv10/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/beta"
  input: "MiddleAndRPN_/conv10/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/moving_mean"
  input: "MiddleAndRPN_/conv10/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/moving_variance"
  input: "MiddleAndRPN_/conv10/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv10/BiasAdd"
  input: "MiddleAndRPN_/conv10/gamma/read"
  input: "MiddleAndRPN_/conv10/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv10/Const"
  input: "gpu_0/MiddleAndRPN_/conv10/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv10/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv10/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv10/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv10/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv10/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv10/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv10/Relu"
  input: "gpu_0/MiddleAndRPN_/conv11/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/kernel"
  input: "MiddleAndRPN_/conv11/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/bias"
  input: "MiddleAndRPN_/conv11/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv11/Pad"
  input: "MiddleAndRPN_/conv11/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv11/Conv2D"
  input: "MiddleAndRPN_/conv11/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/gamma"
  input: "MiddleAndRPN_/conv11/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/beta"
  input: "MiddleAndRPN_/conv11/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/moving_mean"
  input: "MiddleAndRPN_/conv11/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/moving_variance"
  input: "MiddleAndRPN_/conv11/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv11/BiasAdd"
  input: "MiddleAndRPN_/conv11/gamma/read"
  input: "MiddleAndRPN_/conv11/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv11/Const"
  input: "gpu_0/MiddleAndRPN_/conv11/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv11/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv11/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv11/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv11/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv11/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv11/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv11/Relu"
  input: "gpu_0/MiddleAndRPN_/conv12/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/kernel"
  input: "MiddleAndRPN_/conv12/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/bias"
  input: "MiddleAndRPN_/conv12/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv12/Pad"
  input: "MiddleAndRPN_/conv12/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv12/Conv2D"
  input: "MiddleAndRPN_/conv12/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/gamma"
  input: "MiddleAndRPN_/conv12/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/beta"
  input: "MiddleAndRPN_/conv12/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/moving_mean"
  input: "MiddleAndRPN_/conv12/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/moving_variance"
  input: "MiddleAndRPN_/conv12/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv12/BiasAdd"
  input: "MiddleAndRPN_/conv12/gamma/read"
  input: "MiddleAndRPN_/conv12/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv12/Const"
  input: "gpu_0/MiddleAndRPN_/conv12/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv12/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv12/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv12/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv12/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv12/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv12/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv12/Relu"
  input: "gpu_0/MiddleAndRPN_/conv13/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/kernel"
  input: "MiddleAndRPN_/conv13/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/bias"
  input: "MiddleAndRPN_/conv13/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv13/Pad"
  input: "MiddleAndRPN_/conv13/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv13/Conv2D"
  input: "MiddleAndRPN_/conv13/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/gamma"
  input: "MiddleAndRPN_/conv13/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/beta"
  input: "MiddleAndRPN_/conv13/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/moving_mean"
  input: "MiddleAndRPN_/conv13/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/moving_variance"
  input: "MiddleAndRPN_/conv13/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv13/BiasAdd"
  input: "MiddleAndRPN_/conv13/gamma/read"
  input: "MiddleAndRPN_/conv13/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv13/Const"
  input: "gpu_0/MiddleAndRPN_/conv13/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv13/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv13/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv13/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv13/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv13/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv13/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Pad_1/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Pad_1"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv13/Relu"
  input: "gpu_0/MiddleAndRPN_/Pad_1/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/kernel"
  input: "MiddleAndRPN_/deconv2/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/bias"
  input: "MiddleAndRPN_/deconv2/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000d\000\000\000X\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice"
  op: "StridedSlice"
  input: "gpu_0/MiddleAndRPN_/deconv2/Shape"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice/stack"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice/stack_1"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_1"
  op: "StridedSlice"
  input: "gpu_0/MiddleAndRPN_/deconv2/Shape"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_1/stack"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_1/stack_1"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_2"
  op: "StridedSlice"
  input: "gpu_0/MiddleAndRPN_/deconv2/Shape"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_2/stack"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_2/stack_1"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/mul/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_1"
  input: "gpu_0/MiddleAndRPN_/deconv2/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice_2"
  input: "gpu_0/MiddleAndRPN_/deconv2/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/stack/3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/stack"
  op: "Pack"
  input: "gpu_0/MiddleAndRPN_/deconv2/strided_slice"
  input: "gpu_0/MiddleAndRPN_/deconv2/mul"
  input: "gpu_0/MiddleAndRPN_/deconv2/mul_1"
  input: "gpu_0/MiddleAndRPN_/deconv2/stack/3"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "gpu_0/MiddleAndRPN_/deconv2/stack"
  input: "MiddleAndRPN_/deconv2/kernel/read"
  input: "gpu_0/MiddleAndRPN_/Pad_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose"
  input: "MiddleAndRPN_/deconv2/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/gamma"
  input: "MiddleAndRPN_/deconv2/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/beta"
  input: "MiddleAndRPN_/deconv2/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/moving_mean"
  input: "MiddleAndRPN_/deconv2/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/moving_variance"
  input: "MiddleAndRPN_/deconv2/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/deconv2/BiasAdd"
  input: "MiddleAndRPN_/deconv2/gamma/read"
  input: "MiddleAndRPN_/deconv2/beta/read"
  input: "gpu_0/MiddleAndRPN_/deconv2/Const"
  input: "gpu_0/MiddleAndRPN_/deconv2/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/deconv2/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/deconv2/moving_mean"
  input: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/deconv2/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/deconv2/moving_variance"
  input: "gpu_0/MiddleAndRPN_/deconv2/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv2/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv13/Relu"
  input: "gpu_0/MiddleAndRPN_/conv14/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/kernel"
  input: "MiddleAndRPN_/conv14/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/bias"
  input: "MiddleAndRPN_/conv14/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv14/Pad"
  input: "MiddleAndRPN_/conv14/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv14/Conv2D"
  input: "MiddleAndRPN_/conv14/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/gamma"
  input: "MiddleAndRPN_/conv14/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/beta"
  input: "MiddleAndRPN_/conv14/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/moving_mean"
  input: "MiddleAndRPN_/conv14/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/moving_variance"
  input: "MiddleAndRPN_/conv14/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv14/BiasAdd"
  input: "MiddleAndRPN_/conv14/gamma/read"
  input: "MiddleAndRPN_/conv14/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv14/Const"
  input: "gpu_0/MiddleAndRPN_/conv14/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv14/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv14/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv14/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv14/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv14/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv14/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv14/Relu"
  input: "gpu_0/MiddleAndRPN_/conv15/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/kernel"
  input: "MiddleAndRPN_/conv15/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/bias"
  input: "MiddleAndRPN_/conv15/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv15/Pad"
  input: "MiddleAndRPN_/conv15/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv15/Conv2D"
  input: "MiddleAndRPN_/conv15/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/gamma"
  input: "MiddleAndRPN_/conv15/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/beta"
  input: "MiddleAndRPN_/conv15/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/moving_mean"
  input: "MiddleAndRPN_/conv15/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/moving_variance"
  input: "MiddleAndRPN_/conv15/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv15/BiasAdd"
  input: "MiddleAndRPN_/conv15/gamma/read"
  input: "MiddleAndRPN_/conv15/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv15/Const"
  input: "gpu_0/MiddleAndRPN_/conv15/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv15/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv15/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv15/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv15/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv15/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv15/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv15/Relu"
  input: "gpu_0/MiddleAndRPN_/conv16/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/kernel"
  input: "MiddleAndRPN_/conv16/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/bias"
  input: "MiddleAndRPN_/conv16/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv16/Pad"
  input: "MiddleAndRPN_/conv16/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv16/Conv2D"
  input: "MiddleAndRPN_/conv16/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/gamma"
  input: "MiddleAndRPN_/conv16/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/beta"
  input: "MiddleAndRPN_/conv16/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/moving_mean"
  input: "MiddleAndRPN_/conv16/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/moving_variance"
  input: "MiddleAndRPN_/conv16/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv16/BiasAdd"
  input: "MiddleAndRPN_/conv16/gamma/read"
  input: "MiddleAndRPN_/conv16/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv16/Const"
  input: "gpu_0/MiddleAndRPN_/conv16/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv16/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv16/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv16/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv16/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv16/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv16/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv16/Relu"
  input: "gpu_0/MiddleAndRPN_/conv17/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/kernel"
  input: "MiddleAndRPN_/conv17/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/bias"
  input: "MiddleAndRPN_/conv17/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv17/Pad"
  input: "MiddleAndRPN_/conv17/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv17/Conv2D"
  input: "MiddleAndRPN_/conv17/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/gamma"
  input: "MiddleAndRPN_/conv17/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/beta"
  input: "MiddleAndRPN_/conv17/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/moving_mean"
  input: "MiddleAndRPN_/conv17/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/moving_variance"
  input: "MiddleAndRPN_/conv17/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv17/BiasAdd"
  input: "MiddleAndRPN_/conv17/gamma/read"
  input: "MiddleAndRPN_/conv17/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv17/Const"
  input: "gpu_0/MiddleAndRPN_/conv17/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv17/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv17/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv17/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv17/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv17/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv17/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv17/Relu"
  input: "gpu_0/MiddleAndRPN_/conv18/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/kernel"
  input: "MiddleAndRPN_/conv18/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/bias"
  input: "MiddleAndRPN_/conv18/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv18/Pad"
  input: "MiddleAndRPN_/conv18/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv18/Conv2D"
  input: "MiddleAndRPN_/conv18/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/gamma"
  input: "MiddleAndRPN_/conv18/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/beta"
  input: "MiddleAndRPN_/conv18/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/moving_mean"
  input: "MiddleAndRPN_/conv18/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/moving_variance"
  input: "MiddleAndRPN_/conv18/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv18/BiasAdd"
  input: "MiddleAndRPN_/conv18/gamma/read"
  input: "MiddleAndRPN_/conv18/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv18/Const"
  input: "gpu_0/MiddleAndRPN_/conv18/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv18/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv18/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv18/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv18/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv18/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv18/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv18/Relu"
  input: "gpu_0/MiddleAndRPN_/conv19/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/kernel"
  input: "MiddleAndRPN_/conv19/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/bias"
  input: "MiddleAndRPN_/conv19/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv19/Pad"
  input: "MiddleAndRPN_/conv19/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv19/Conv2D"
  input: "MiddleAndRPN_/conv19/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/gamma"
  input: "MiddleAndRPN_/conv19/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/beta"
  input: "MiddleAndRPN_/conv19/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/moving_mean"
  input: "MiddleAndRPN_/conv19/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/moving_variance"
  input: "MiddleAndRPN_/conv19/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv19/BiasAdd"
  input: "MiddleAndRPN_/conv19/gamma/read"
  input: "MiddleAndRPN_/conv19/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv19/Const"
  input: "gpu_0/MiddleAndRPN_/conv19/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv19/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv19/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv19/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv19/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv19/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv19/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Pad_2/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Pad_2"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/conv19/Relu"
  input: "gpu_0/MiddleAndRPN_/Pad_2/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.027063293382525444
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.027063293382525444
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/kernel"
  input: "MiddleAndRPN_/deconv3/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/bias"
  input: "MiddleAndRPN_/deconv3/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0002\000\000\000,\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice"
  op: "StridedSlice"
  input: "gpu_0/MiddleAndRPN_/deconv3/Shape"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice/stack"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice/stack_1"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_1"
  op: "StridedSlice"
  input: "gpu_0/MiddleAndRPN_/deconv3/Shape"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_1/stack"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_1/stack_1"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_2"
  op: "StridedSlice"
  input: "gpu_0/MiddleAndRPN_/deconv3/Shape"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_2/stack"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_2/stack_1"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/mul/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_1"
  input: "gpu_0/MiddleAndRPN_/deconv3/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice_2"
  input: "gpu_0/MiddleAndRPN_/deconv3/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/stack/3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/stack"
  op: "Pack"
  input: "gpu_0/MiddleAndRPN_/deconv3/strided_slice"
  input: "gpu_0/MiddleAndRPN_/deconv3/mul"
  input: "gpu_0/MiddleAndRPN_/deconv3/mul_1"
  input: "gpu_0/MiddleAndRPN_/deconv3/stack/3"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "gpu_0/MiddleAndRPN_/deconv3/stack"
  input: "MiddleAndRPN_/deconv3/kernel/read"
  input: "gpu_0/MiddleAndRPN_/Pad_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose"
  input: "MiddleAndRPN_/deconv3/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/gamma"
  input: "MiddleAndRPN_/deconv3/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/beta"
  input: "MiddleAndRPN_/deconv3/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/moving_mean"
  input: "MiddleAndRPN_/deconv3/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/moving_variance"
  input: "MiddleAndRPN_/deconv3/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/deconv3/BiasAdd"
  input: "MiddleAndRPN_/deconv3/gamma/read"
  input: "MiddleAndRPN_/deconv3/beta/read"
  input: "gpu_0/MiddleAndRPN_/deconv3/Const"
  input: "gpu_0/MiddleAndRPN_/deconv3/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/deconv3/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/deconv3/moving_mean"
  input: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/deconv3/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/deconv3/moving_variance"
  input: "gpu_0/MiddleAndRPN_/deconv3/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/deconv3/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/concat"
  op: "ConcatV2"
  input: "gpu_0/MiddleAndRPN_/deconv3/Relu"
  input: "gpu_0/MiddleAndRPN_/deconv2/Relu"
  input: "gpu_0/MiddleAndRPN_/deconv1/Relu"
  input: "gpu_0/MiddleAndRPN_/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/concat"
  input: "gpu_0/MiddleAndRPN_/conv20/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08827348053455353
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08827348053455353
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 768
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/kernel"
  input: "MiddleAndRPN_/conv20/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/bias"
  input: "MiddleAndRPN_/conv20/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv20/Pad"
  input: "MiddleAndRPN_/conv20/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv20/Conv2D"
  input: "MiddleAndRPN_/conv20/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/gamma"
  input: "MiddleAndRPN_/conv20/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/beta"
  input: "MiddleAndRPN_/conv20/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/moving_mean"
  input: "MiddleAndRPN_/conv20/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/moving_variance"
  input: "MiddleAndRPN_/conv20/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv20/BiasAdd"
  input: "MiddleAndRPN_/conv20/gamma/read"
  input: "MiddleAndRPN_/conv20/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv20/Const"
  input: "gpu_0/MiddleAndRPN_/conv20/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv20/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv20/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv20/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv20/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv20/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv20/Relu"
  op: "Relu"
  input: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/Pad/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/Pad"
  op: "Pad"
  input: "gpu_0/MiddleAndRPN_/concat"
  input: "gpu_0/MiddleAndRPN_/conv21/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000\016\000\000\000"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08759357780218124
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08759357780218124
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/max"
  input: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/RandomUniform"
  input: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform"
  op: "Add"
  input: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/mul"
  input: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 768
        }
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/kernel"
  input: "MiddleAndRPN_/conv21/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/bias"
  input: "MiddleAndRPN_/conv21/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/Conv2D"
  op: "Conv2D"
  input: "gpu_0/MiddleAndRPN_/conv21/Pad"
  input: "MiddleAndRPN_/conv21/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/BiasAdd"
  op: "BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv21/Conv2D"
  input: "MiddleAndRPN_/conv21/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/gamma"
  input: "MiddleAndRPN_/conv21/gamma/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/gamma"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/beta"
  input: "MiddleAndRPN_/conv21/beta/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/beta"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/moving_mean/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/moving_mean"
  input: "MiddleAndRPN_/conv21/moving_mean/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/moving_mean/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/moving_variance/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/moving_variance"
  input: "MiddleAndRPN_/conv21/moving_variance/Initializer/ones"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/moving_variance/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "gpu_0/MiddleAndRPN_/conv21/BiasAdd"
  input: "MiddleAndRPN_/conv21/gamma/read"
  input: "MiddleAndRPN_/conv21/beta/read"
  input: "gpu_0/MiddleAndRPN_/conv21/Const"
  input: "gpu_0/MiddleAndRPN_/conv21/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/moving_mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg/read"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg/Sub"
  input: "gpu_0/MiddleAndRPN_/conv21/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv21/moving_mean"
  input: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/moving_variance"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg_1/read"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg_1/Sub"
  input: "gpu_0/MiddleAndRPN_/conv21/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MiddleAndRPN_/conv21/moving_variance"
  input: "gpu_0/MiddleAndRPN_/conv21/AssignMovingAvg_1/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Sigmoid"
  op: "Sigmoid"
  input: "gpu_0/MiddleAndRPN_/conv20/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Neg"
  op: "Neg"
  input: "gpu_0/Placeholder_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/Sigmoid"
  input: "gpu_0/MiddleAndRPN_/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Log"
  op: "Log"
  input: "gpu_0/MiddleAndRPN_/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/Neg"
  input: "gpu_0/MiddleAndRPN_/Log"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/truediv"
  op: "RealDiv"
  input: "gpu_0/MiddleAndRPN_/mul"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Neg_1"
  op: "Neg"
  input: "gpu_0/Placeholder_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/sub/x"
  input: "gpu_0/MiddleAndRPN_/Sigmoid"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/add_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/add_1"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/sub"
  input: "gpu_0/MiddleAndRPN_/add_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Log_1"
  op: "Log"
  input: "gpu_0/MiddleAndRPN_/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/Neg_1"
  input: "gpu_0/MiddleAndRPN_/Log_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/truediv_1"
  op: "RealDiv"
  input: "gpu_0/MiddleAndRPN_/mul_1"
  input: "gpu_0/Placeholder_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_2/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_2"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/mul_2/x"
  input: "gpu_0/MiddleAndRPN_/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_3/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_3"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/mul_3/x"
  input: "gpu_0/MiddleAndRPN_/truediv_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/add_2"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/mul_2"
  input: "gpu_0/MiddleAndRPN_/mul_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Sum"
  op: "Sum"
  input: "gpu_0/MiddleAndRPN_/add_2"
  input: "gpu_0/MiddleAndRPN_/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Sum_1"
  op: "Sum"
  input: "gpu_0/MiddleAndRPN_/truediv"
  input: "gpu_0/MiddleAndRPN_/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Sum_2"
  op: "Sum"
  input: "gpu_0/MiddleAndRPN_/truediv_1"
  input: "gpu_0/MiddleAndRPN_/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_4"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm"
  input: "gpu_0/Placeholder_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_5"
  op: "Mul"
  input: "gpu_0/Placeholder"
  input: "gpu_0/Placeholder_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/mul_4"
  input: "gpu_0/MiddleAndRPN_/mul_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Abs"
  op: "Abs"
  input: "gpu_0/MiddleAndRPN_/Sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Less/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1111111119389534
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Less"
  op: "Less"
  input: "gpu_0/MiddleAndRPN_/Abs"
  input: "gpu_0/MiddleAndRPN_/Less/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Cast"
  op: "Cast"
  input: "gpu_0/MiddleAndRPN_/Less"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Mul"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/Sub"
  input: "gpu_0/MiddleAndRPN_/Sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_6/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_6"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/Mul"
  input: "gpu_0/MiddleAndRPN_/mul_6/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_7/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.0
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/mul_7"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/mul_6"
  input: "gpu_0/MiddleAndRPN_/mul_7/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Abs_1"
  op: "Abs"
  input: "gpu_0/MiddleAndRPN_/Sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/sub_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0555555559694767
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/sub_1"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/Abs_1"
  input: "gpu_0/MiddleAndRPN_/sub_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/mul_7"
  input: "gpu_0/MiddleAndRPN_/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/sub_2/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/sub_2"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/sub_2/x"
  input: "gpu_0/MiddleAndRPN_/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Mul_2"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/sub_1"
  input: "gpu_0/MiddleAndRPN_/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/add_3"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/Mul_1"
  input: "gpu_0/MiddleAndRPN_/Mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/truediv_2"
  op: "RealDiv"
  input: "gpu_0/MiddleAndRPN_/add_3"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Sum_3"
  op: "Sum"
  input: "gpu_0/MiddleAndRPN_/truediv_2"
  input: "gpu_0/MiddleAndRPN_/Const_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/add_4"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/Sum"
  input: "gpu_0/MiddleAndRPN_/Sum_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Const_4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/MiddleAndRPN_/Sum_4"
  op: "Sum"
  input: "gpu_0/MiddleAndRPN_/add_4"
  input: "gpu_0/MiddleAndRPN_/Const_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/grad_ys_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/Fill"
  op: "Fill"
  input: "gpu_0/gradients/Shape"
  input: "gpu_0/gradients/grad_ys_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_4_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_4_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/Fill"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_4_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_4_grad/Tile/multiples"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_4_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_4_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_4_grad/Tile/multiples"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_4_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/add_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_3_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_4_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_3_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_3_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/truediv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_3_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_3_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_3_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/mul_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/add_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/RealDiv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_3_grad/Tile"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Neg"
  op: "Neg"
  input: "gpu_0/MiddleAndRPN_/add_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/RealDiv_1"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Neg"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/RealDiv_2"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/RealDiv_1"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sum_3_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/mul_2/x"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/truediv_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Reshape_1"
  input: "gpu_0/MiddleAndRPN_/truediv_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/mul_3/x"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_2_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_2_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Reshape_1"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Neg"
  op: "Neg"
  input: "gpu_0/MiddleAndRPN_/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Neg"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/RealDiv_1"
  input: "gpu_0/Placeholder_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_2_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/Placeholder_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Reshape_1"
  input: "gpu_0/Placeholder_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Neg"
  op: "Neg"
  input: "gpu_0/MiddleAndRPN_/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Neg"
  input: "gpu_0/Placeholder_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/RealDiv_1"
  input: "gpu_0/Placeholder_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_3_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/mul_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/mul_7"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/sub_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Reshape_1"
  input: "gpu_0/MiddleAndRPN_/sub_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/sub_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_3_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Neg"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/Log"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/Log_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/Neg_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/truediv_1_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/mul_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/mul_7/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/mul_6"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Abs_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_2_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "gpu_0/MiddleAndRPN_/add"
  input: "^gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_grad/Reciprocal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_1_grad/Reciprocal"
  op: "Reciprocal"
  input: "gpu_0/MiddleAndRPN_/add_1"
  input: "^gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_1_grad/Reciprocal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/mul_6/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_7_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Abs_1_grad/Sign"
  op: "Sign"
  input: "gpu_0/MiddleAndRPN_/Sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Abs_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Abs_1_grad/Sign"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_2_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Log_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/Sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/Sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/Sub"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_6_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_1"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/sub_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gpu_0/MiddleAndRPN_/Sigmoid"
  input: "gpu_0/gradients/AddN_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_2"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Abs_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Mul_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/Abs_1_grad/mul"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Shape"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/mul_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/MiddleAndRPN_/mul_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/AddN_2"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/AddN_2"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sigmoid_grad/SigmoidGrad"
  input: "gpu_0/MiddleAndRPN_/conv20/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\016\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/Placeholder_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Reshape"
  input: "gpu_0/Placeholder_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Sub_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv20/BiasAdd"
  input: "MiddleAndRPN_/conv20/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/mul_4_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/conv21/BiasAdd"
  input: "MiddleAndRPN_/conv21/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv20/Pad"
  input: "MiddleAndRPN_/conv20/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv20/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv20/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv21/Pad"
  input: "MiddleAndRPN_/conv21/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000\016\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv21/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv21/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv20/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv21/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_3"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Slice_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Pad_grad/Slice_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Pad_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/mod"
  op: "FloorMod"
  input: "gpu_0/MiddleAndRPN_/concat/axis"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/mod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Shape_2"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Slice"
  op: "Slice"
  input: "gpu_0/gradients/AddN_3"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/ConcatOffset"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/AddN_3"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/ConcatOffset:1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Slice_2"
  op: "Slice"
  input: "gpu_0/gradients/AddN_3"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/ConcatOffset:2"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Shape_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Slice"
  input: "gpu_0/MiddleAndRPN_/deconv3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/deconv2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/concat_grad/Slice_2"
  input: "gpu_0/MiddleAndRPN_/deconv1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/deconv3/BiasAdd"
  input: "MiddleAndRPN_/deconv3/gamma/read"
  input: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/deconv2/BiasAdd"
  input: "MiddleAndRPN_/deconv2/gamma/read"
  input: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/deconv1/BiasAdd"
  input: "MiddleAndRPN_/deconv1/gamma/read"
  input: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Shape"
  input: "gpu_0/MiddleAndRPN_/Pad_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "MiddleAndRPN_/deconv3/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Shape"
  input: "gpu_0/MiddleAndRPN_/Pad_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "MiddleAndRPN_/deconv2/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Shape"
  input: "gpu_0/MiddleAndRPN_/Pad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "MiddleAndRPN_/deconv1/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/Pad_2/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0002\000\000\000,\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Conv2D"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/Pad_1/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000d\000\000\000X\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Conv2D"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Conv2D"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_2_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv19/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv19/BiasAdd"
  input: "MiddleAndRPN_/conv19/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv19/Pad"
  input: "MiddleAndRPN_/conv19/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0004\000\000\000.\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv19/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv19/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv19/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0002\000\000\000,\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv18/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv18/BiasAdd"
  input: "MiddleAndRPN_/conv18/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv18/Pad"
  input: "MiddleAndRPN_/conv18/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0004\000\000\000.\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv18/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv18/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv18/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0002\000\000\000,\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv17/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv17/BiasAdd"
  input: "MiddleAndRPN_/conv17/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv17/Pad"
  input: "MiddleAndRPN_/conv17/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0004\000\000\000.\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv17/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv17/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv17/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0002\000\000\000,\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv16/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_32"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_33"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_34"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_35"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv16/BiasAdd"
  input: "MiddleAndRPN_/conv16/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv16/Pad"
  input: "MiddleAndRPN_/conv16/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0004\000\000\000.\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv16/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv16/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv16/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0002\000\000\000,\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv15/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_36"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_37"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_38"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_39"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv15/BiasAdd"
  input: "MiddleAndRPN_/conv15/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv15/Pad"
  input: "MiddleAndRPN_/conv15/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0004\000\000\000.\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv15/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv15/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv15/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0002\000\000\000,\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv14/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_40"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_41"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_42"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_43"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv14/BiasAdd"
  input: "MiddleAndRPN_/conv14/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv14/Pad"
  input: "MiddleAndRPN_/conv14/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000f\000\000\000Z\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv14/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv14/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv14/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000d\000\000\000X\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_4"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Slice_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Pad_grad/Slice_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_1_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/AddN_4"
  input: "gpu_0/MiddleAndRPN_/conv13/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_44"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_45"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_46"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_47"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv13/BiasAdd"
  input: "MiddleAndRPN_/conv13/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv13/Pad"
  input: "MiddleAndRPN_/conv13/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000f\000\000\000Z\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv13/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv13/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv13/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000d\000\000\000X\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv12/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_48"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_49"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_50"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_51"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv12/BiasAdd"
  input: "MiddleAndRPN_/conv12/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv12/Pad"
  input: "MiddleAndRPN_/conv12/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000f\000\000\000Z\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv12/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv12/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv12/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000d\000\000\000X\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv11/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_52"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_53"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_54"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_55"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv11/BiasAdd"
  input: "MiddleAndRPN_/conv11/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv11/Pad"
  input: "MiddleAndRPN_/conv11/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000f\000\000\000Z\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv11/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv11/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv11/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000d\000\000\000X\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv10/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_56"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_57"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_58"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_59"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv10/BiasAdd"
  input: "MiddleAndRPN_/conv10/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv10/Pad"
  input: "MiddleAndRPN_/conv10/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000f\000\000\000Z\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv10/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv10/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv10/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000d\000\000\000X\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv9/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_60"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_61"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_62"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_63"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv9/BiasAdd"
  input: "MiddleAndRPN_/conv9/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv9/Pad"
  input: "MiddleAndRPN_/conv9/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000f\000\000\000Z\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv9/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv9/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv9/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000d\000\000\000X\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv8/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_64"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_65"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_66"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_67"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv8/BiasAdd"
  input: "MiddleAndRPN_/conv8/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv8/Pad"
  input: "MiddleAndRPN_/conv8/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\312\000\000\000\262\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv8/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv8/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv8/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_5"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Slice_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Pad_grad/Slice_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/Pad_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/AddN_5"
  input: "gpu_0/MiddleAndRPN_/conv7/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_68"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_69"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_70"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_71"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv7/BiasAdd"
  input: "MiddleAndRPN_/conv7/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv7/Pad"
  input: "MiddleAndRPN_/conv7/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\312\000\000\000\262\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv7/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv7/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv7/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv6/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_72"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_73"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_74"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_75"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv6/BiasAdd"
  input: "MiddleAndRPN_/conv6/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv6/Pad"
  input: "MiddleAndRPN_/conv6/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\312\000\000\000\262\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv6/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv6/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv6/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv5/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_76"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_77"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_78"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_79"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv5/BiasAdd"
  input: "MiddleAndRPN_/conv5/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv5/Pad"
  input: "MiddleAndRPN_/conv5/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\312\000\000\000\262\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv5/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv5/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv5/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\310\000\000\000\260\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv4/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_80"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_81"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_82"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/zeros_like_83"
  op: "ZerosLike"
  input: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Relu_grad/ReluGrad"
  input: "gpu_0/MiddleAndRPN_/conv4/BiasAdd"
  input: "MiddleAndRPN_/conv4/gamma/read"
  input: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm:3"
  input: "gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/MiddleAndRPN_/conv4/Pad"
  input: "MiddleAndRPN_/conv4/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\222\001\000\000b\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Const"
  input: "MiddleAndRPN_/conv4/kernel/read"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gpu_0/MiddleAndRPN_/conv4/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Const_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv4/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\220\001\000\000`\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Reshape_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\220\001\000\000`\001\000\000@\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Pad_grad/Slice_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gpu_0/MiddleAndRPN_/transpose/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/transpose_grad/transpose"
  op: "Transpose"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/Reshape_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/transpose_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/transpose_grad/transpose"
  input: "gpu_0/MiddleAndRPN_/conv3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Relu_grad/ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Relu_grad/ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv3/BiasAdd"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_2_grad/Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_6"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/AddN_6"
  input: "MiddleAndRPN_/conv3/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/AddN_6"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "gpu_0/MiddleAndRPN_/conv3/batchnorm/Rsqrt"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_grad/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/add_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/variance/reduction_indices"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/add"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/range/start"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Size"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/mod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 281600.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/scalar"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv3/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/StopGradient"
  input: "^gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv3/moments/mean/reduction_indices"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/add"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/range/start"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Size"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/mod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/Squeeze_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 281600.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_7"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/SquaredDifference_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/AddN_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\222\001\000\000b\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Shape"
  input: "MiddleAndRPN_/conv3/kernel/read"
  input: "gpu_0/gradients/AddN_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gpu_0/MiddleAndRPN_/conv3/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Shape_1"
  input: "gpu_0/gradients/AddN_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv3/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Conv3DBackpropInputV2"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Relu_grad/ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Relu_grad/ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv2/BiasAdd"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_2_grad/Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_8"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/AddN_8"
  input: "MiddleAndRPN_/conv2/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/AddN_8"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "gpu_0/MiddleAndRPN_/conv2/batchnorm/Rsqrt"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_grad/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/add_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/variance/reduction_indices"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/add"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/range/start"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Size"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/mod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 422400.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/scalar"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv2/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/StopGradient"
  input: "^gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv2/moments/mean/reduction_indices"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/add"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/range/start"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Size"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/mod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/Squeeze_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 422400.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_9"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/SquaredDifference_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/AddN_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\222\001\000\000b\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Shape"
  input: "MiddleAndRPN_/conv2/kernel/read"
  input: "gpu_0/gradients/AddN_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gpu_0/MiddleAndRPN_/conv2/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Shape_1"
  input: "gpu_0/gradients/AddN_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv2/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Conv3DBackpropInputV2"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Pad_grad/Slice_1"
  input: "gpu_0/MiddleAndRPN_/conv1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Relu_grad/ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Relu_grad/ReluGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Reshape"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "gpu_0/MiddleAndRPN_/conv1/BiasAdd"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_2_grad/Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_10"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/AddN_10"
  input: "MiddleAndRPN_/conv1/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/AddN_10"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "gpu_0/MiddleAndRPN_/conv1/batchnorm/Rsqrt"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_grad/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/add_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/variance/reduction_indices"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/add"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/range/start"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Size"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/mod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 704000.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/scalar"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "gpu_0/MiddleAndRPN_/conv1/BiasAdd"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/StopGradient"
  input: "^gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\220\001\000\000`\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/add"
  op: "Add"
  input: "gpu_0/MiddleAndRPN_/conv1/moments/mean/reduction_indices"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/add"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/range/start"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Size"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/range"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/mod"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/Squeeze_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 704000.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Tile"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_11"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/SquaredDifference_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/AddN_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\014\000\000\000\222\001\000\000b\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Shape"
  input: "MiddleAndRPN_/conv1/kernel/read"
  input: "gpu_0/gradients/AddN_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "gpu_0/MiddleAndRPN_/conv1/Pad"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Shape_1"
  input: "gpu_0/gradients/AddN_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/stack"
  op: "Pack"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Rank"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Slice"
  op: "Slice"
  input: "gpu_0/MiddleAndRPN_/conv1/Pad/paddings"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Slice/begin"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\n\000\000\000\220\001\000\000`\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Conv3DBackpropInputV2"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/ScatterNd_grad/GatherNd"
  op: "GatherNd"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Pad_grad/Slice_1"
  input: "gpu_0/coordinate"
  device: "/device:GPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Shape"
  op: "Shape"
  input: "gpu_0/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/add"
  op: "Add"
  input: "gpu_0/Max_3/reduction_indices"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/add"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/range/start"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Size"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/range"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/mod"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Shape"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/Max_3"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/ScatterNd_grad/GatherNd"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Equal"
  op: "Equal"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Reshape"
  input: "gpu_0/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Cast"
  op: "Cast"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Cast"
  input: "gpu_0/Max_3/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/Reshape_2"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Sum"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/div"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Cast"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Reshape_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_3_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/div"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/concat_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/Cast_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/mul"
  input: "gpu_0/Cast_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_1_grad/mul_1"
  op: "Mul"
  input: "gpu_0/concat_1"
  input: "gpu_0/gradients/gpu_0/Max_3_grad/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_1_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_1_grad/mod"
  op: "FloorMod"
  input: "gpu_0/concat_1/axis"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-2/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/VFE-2/batchnorm/add_1"
  input: "gpu_0/Tile_2"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/mod"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/ShapeN"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_1_grad/Slice"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/ConcatOffset"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/ShapeN"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/Mul_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/ConcatOffset:1"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/Shape"
  op: "Shape"
  input: "gpu_0/Max_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/stack"
  op: "Pack"
  input: "gpu_0/Tile_2/multiples"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/Rank"
  op: "Rank"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/sub/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/sub"
  op: "Sub"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/Rank"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/sub/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/Range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/Range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/Range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/Range/start"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/Rank"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/Range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/sub_1"
  op: "Sub"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/sub"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/Range"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose"
  op: "Transpose"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/stack"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose/sub_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/transpose"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/range/start"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/Size"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/Slice_1"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_2_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/range"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-2/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/add"
  op: "Add"
  input: "gpu_0/Max_2/reduction_indices"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/add"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/range/start"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Size"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/range"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/mod"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Shape"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/Max_2"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Tile_2_grad/Sum"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Equal"
  op: "Equal"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Reshape"
  input: "gpu_0/VFE-2/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Cast"
  op: "Cast"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Cast"
  input: "gpu_0/Max_2/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/Reshape_2"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Sum"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/div"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Cast"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Reshape_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_2_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/div"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_12"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/concat_1_grad/Slice"
  input: "gpu_0/gradients/gpu_0/Max_2_grad/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-2/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/AddN_12"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/AddN_12"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Reshape"
  input: "gpu_0/VFE-2/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "gpu_0/VFE-2/Relu"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Neg"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/VFE-2/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/VFE-2/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_2_grad/Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_13"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/AddN_13"
  input: "VFE-2/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/AddN_13"
  input: "gpu_0/VFE-2/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "gpu_0/VFE-2/batchnorm/Rsqrt"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_grad/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/add_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-2/moments/SquaredDifference"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/add"
  op: "Add"
  input: "gpu_0/VFE-2/moments/variance/reduction_indices"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/add"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/range/start"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Size"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/range"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/mod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/Squeeze_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "gpu_0/VFE-2/moments/SquaredDifference"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Prod"
  op: "Prod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape_2"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Shape_3"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Maximum_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Prod_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Maximum_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Prod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Maximum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Cast"
  op: "Cast"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/floordiv_1"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Tile"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/scalar"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "gpu_0/VFE-2/Relu"
  input: "gpu_0/VFE-2/moments/StopGradient"
  input: "^gpu_0/gradients/gpu_0/VFE-2/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/add"
  op: "Add"
  input: "gpu_0/VFE-2/moments/mean/reduction_indices"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/add"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/range/start"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Size"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/range"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/mod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/Squeeze_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "gpu_0/VFE-2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Prod"
  op: "Prod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape_2"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Shape_3"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Maximum_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Prod_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Maximum_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Prod"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Maximum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Cast"
  op: "Cast"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/floordiv_1"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Tile"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_14"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/SquaredDifference_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/AddN_14"
  input: "gpu_0/VFE-2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/VFE-2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-2/Tensordot/MatMul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/Relu_grad/ReluGrad"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot_grad/Reshape"
  input: "gpu_0/VFE-2/Tensordot/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gpu_0/VFE-2/Tensordot/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-2/Tensordot/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/MatMul_grad/MatMul"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/MatMul_grad/MatMul_1"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/Reshape_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gpu_0/VFE-2/Tensordot/concat_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/Reshape_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gpu_0/VFE-2/Tensordot/transpose_1/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/Reshape_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_1_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_grad/Shape"
  op: "Shape"
  input: "gpu_0/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_grad/Shape_1"
  op: "Shape"
  input: "gpu_0/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/Mul_grad/Shape"
  input: "gpu_0/gradients/gpu_0/Mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_grad/transpose"
  input: "gpu_0/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/Mul_grad/mul"
  input: "gpu_0/gradients/gpu_0/Mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Mul_grad/Sum"
  input: "gpu_0/gradients/gpu_0/Mul_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_grad/mul_1"
  op: "Mul"
  input: "gpu_0/concat"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_grad/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/Mul_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/Mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Mul_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/Mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_grad/mod"
  op: "FloorMod"
  input: "gpu_0/concat/axis"
  input: "gpu_0/gradients/gpu_0/concat_grad/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-1/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gpu_0/VFE-1/batchnorm/add_1"
  input: "gpu_0/Tile"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gpu_0/gradients/gpu_0/concat_grad/mod"
  input: "gpu_0/gradients/gpu_0/concat_grad/ShapeN"
  input: "gpu_0/gradients/gpu_0/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_grad/Slice"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/Mul_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/concat_grad/ConcatOffset"
  input: "gpu_0/gradients/gpu_0/concat_grad/ShapeN"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/concat_grad/Slice_1"
  op: "Slice"
  input: "gpu_0/gradients/gpu_0/Mul_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/concat_grad/ConcatOffset:1"
  input: "gpu_0/gradients/gpu_0/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/Shape"
  op: "Shape"
  input: "gpu_0/Max_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/stack"
  op: "Pack"
  input: "gpu_0/Tile/multiples"
  input: "gpu_0/gradients/gpu_0/Tile_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/transpose/Rank"
  op: "Rank"
  input: "gpu_0/gradients/gpu_0/Tile_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/transpose/sub/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/transpose/sub"
  op: "Sub"
  input: "gpu_0/gradients/gpu_0/Tile_grad/transpose/Rank"
  input: "gpu_0/gradients/gpu_0/Tile_grad/transpose/sub/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/transpose/Range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/transpose/Range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/transpose/Range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/Tile_grad/transpose/Range/start"
  input: "gpu_0/gradients/gpu_0/Tile_grad/transpose/Rank"
  input: "gpu_0/gradients/gpu_0/Tile_grad/transpose/Range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/transpose/sub_1"
  op: "Sub"
  input: "gpu_0/gradients/gpu_0/Tile_grad/transpose/sub"
  input: "gpu_0/gradients/gpu_0/Tile_grad/transpose/Range"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/transpose"
  op: "Transpose"
  input: "gpu_0/gradients/gpu_0/Tile_grad/stack"
  input: "gpu_0/gradients/gpu_0/Tile_grad/transpose/sub_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Tile_grad/transpose"
  input: "gpu_0/gradients/gpu_0/Tile_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/Tile_grad/range/start"
  input: "gpu_0/gradients/gpu_0/Tile_grad/Size"
  input: "gpu_0/gradients/gpu_0/Tile_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/concat_grad/Slice_1"
  input: "gpu_0/gradients/gpu_0/Tile_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Tile_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/Tile_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/Tile_grad/range"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-1/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/add"
  op: "Add"
  input: "gpu_0/Max_1/reduction_indices"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/add"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/range/start"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Size"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/range"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/mod"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/Max_1"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Tile_grad/Sum"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Equal"
  op: "Equal"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Reshape"
  input: "gpu_0/VFE-1/batchnorm/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Cast"
  op: "Cast"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Cast"
  input: "gpu_0/Max_1/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/Reshape_2"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/div"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Cast"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Reshape_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/Max_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/div"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_15"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/concat_grad/Slice"
  input: "gpu_0/gradients/gpu_0/Max_1_grad/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-1/batchnorm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/AddN_15"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/AddN_15"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Reshape"
  input: "gpu_0/VFE-1/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "gpu_0/VFE-1/Relu"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Neg"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/VFE-1/batchnorm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Reshape_1"
  input: "gpu_0/VFE-1/moments/Squeeze"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/Squeeze_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_2_grad/Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/Squeeze_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_16"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Reshape_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_2_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gpu_0/gradients/AddN_16"
  input: "VFE-1/gamma/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gpu_0/gradients/AddN_16"
  input: "gpu_0/VFE-1/batchnorm/Rsqrt"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "gpu_0/VFE-1/batchnorm/Rsqrt"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_grad/Mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/Squeeze_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/add_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/Squeeze_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-1/moments/SquaredDifference"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/add"
  op: "Add"
  input: "gpu_0/VFE-1/moments/variance/reduction_indices"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/add"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/range/start"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Size"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/range"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/mod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/Squeeze_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "gpu_0/VFE-1/moments/SquaredDifference"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Prod"
  op: "Prod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape_2"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Shape_3"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Maximum_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Prod_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Maximum_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Prod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Maximum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Cast"
  op: "Cast"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/floordiv_1"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Tile"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/scalar"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "gpu_0/VFE-1/Relu"
  input: "gpu_0/VFE-1/moments/StopGradient"
  input: "^gpu_0/gradients/gpu_0/VFE-1/moments/variance_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/mul_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Sum_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/add"
  op: "Add"
  input: "gpu_0/VFE-1/moments/mean/reduction_indices"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/add"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Size"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/range"
  op: "Range"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/range/start"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Size"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Fill/value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Fill"
  op: "Fill"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Fill/value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/range"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/mod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Fill"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Maximum/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/DynamicStitch"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Maximum/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/Squeeze_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/DynamicStitch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Tile"
  op: "Tile"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/floordiv"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "gpu_0/VFE-1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Prod"
  op: "Prod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape_2"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Shape_3"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Maximum_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Prod_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Maximum_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Prod"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Maximum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Cast"
  op: "Cast"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/floordiv_1"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Tile"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/AddN_17"
  op: "AddN"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/SquaredDifference_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/moments/mean_grad/truediv"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gpu_0/gradients/AddN_17"
  input: "gpu_0/VFE-1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gpu_0/gradients/gpu_0/VFE-1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/Tensordot_grad/Shape"
  op: "Shape"
  input: "gpu_0/VFE-1/Tensordot/MatMul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/Relu_grad/ReluGrad"
  input: "gpu_0/gradients/gpu_0/VFE-1/Tensordot_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gpu_0/gradients/gpu_0/VFE-1/Tensordot_grad/Reshape"
  input: "gpu_0/VFE-1/Tensordot/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gpu_0/VFE-1/Tensordot/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/Tensordot_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/MatMul_grad/MatMul_1"
  input: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/Reshape_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gpu_0/VFE-1/Tensordot/transpose_1/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/Reshape_1_grad/Reshape"
  input: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/transpose_1_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/transpose_1_grad/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/VFE-1/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_1_grad/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/VFE-2/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_8"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Conv3DBackpropFilterV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_9"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_10"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_11"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_12"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Conv3DBackpropFilterV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_13"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_14"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_15"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_16"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Conv3DBackpropFilterV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_17"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_18"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_grad/Mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_19"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_20"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_21"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_22"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_23"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_24"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_25"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_26"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_27"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_28"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_29"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_30"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_31"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_32"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_33"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_34"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_35"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_36"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_37"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_38"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_39"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_40"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_41"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_42"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_43"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_44"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_45"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_46"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_47"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_48"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_49"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_50"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_51"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_52"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_53"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_54"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_55"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_56"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_57"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_58"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_59"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_60"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_61"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_62"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_63"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_64"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_65"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_66"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_67"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_68"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_69"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_70"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_71"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_72"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_73"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_74"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_75"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_76"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_77"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_78"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_79"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_80"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_81"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_82"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_83"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_84"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_85"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_86"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_87"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_88"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_89"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_90"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_91"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_92"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_93"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_94"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_95"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_96"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_97"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_98"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_99"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_100"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Conv2DBackpropFilter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_101"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_102"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/L2Loss_103"
  op: "L2Loss"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/stack"
  op: "Pack"
  input: "gpu_0/global_norm/L2Loss"
  input: "gpu_0/global_norm/L2Loss_1"
  input: "gpu_0/global_norm/L2Loss_2"
  input: "gpu_0/global_norm/L2Loss_3"
  input: "gpu_0/global_norm/L2Loss_4"
  input: "gpu_0/global_norm/L2Loss_5"
  input: "gpu_0/global_norm/L2Loss_6"
  input: "gpu_0/global_norm/L2Loss_7"
  input: "gpu_0/global_norm/L2Loss_8"
  input: "gpu_0/global_norm/L2Loss_9"
  input: "gpu_0/global_norm/L2Loss_10"
  input: "gpu_0/global_norm/L2Loss_11"
  input: "gpu_0/global_norm/L2Loss_12"
  input: "gpu_0/global_norm/L2Loss_13"
  input: "gpu_0/global_norm/L2Loss_14"
  input: "gpu_0/global_norm/L2Loss_15"
  input: "gpu_0/global_norm/L2Loss_16"
  input: "gpu_0/global_norm/L2Loss_17"
  input: "gpu_0/global_norm/L2Loss_18"
  input: "gpu_0/global_norm/L2Loss_19"
  input: "gpu_0/global_norm/L2Loss_20"
  input: "gpu_0/global_norm/L2Loss_21"
  input: "gpu_0/global_norm/L2Loss_22"
  input: "gpu_0/global_norm/L2Loss_23"
  input: "gpu_0/global_norm/L2Loss_24"
  input: "gpu_0/global_norm/L2Loss_25"
  input: "gpu_0/global_norm/L2Loss_26"
  input: "gpu_0/global_norm/L2Loss_27"
  input: "gpu_0/global_norm/L2Loss_28"
  input: "gpu_0/global_norm/L2Loss_29"
  input: "gpu_0/global_norm/L2Loss_30"
  input: "gpu_0/global_norm/L2Loss_31"
  input: "gpu_0/global_norm/L2Loss_32"
  input: "gpu_0/global_norm/L2Loss_33"
  input: "gpu_0/global_norm/L2Loss_34"
  input: "gpu_0/global_norm/L2Loss_35"
  input: "gpu_0/global_norm/L2Loss_36"
  input: "gpu_0/global_norm/L2Loss_37"
  input: "gpu_0/global_norm/L2Loss_38"
  input: "gpu_0/global_norm/L2Loss_39"
  input: "gpu_0/global_norm/L2Loss_40"
  input: "gpu_0/global_norm/L2Loss_41"
  input: "gpu_0/global_norm/L2Loss_42"
  input: "gpu_0/global_norm/L2Loss_43"
  input: "gpu_0/global_norm/L2Loss_44"
  input: "gpu_0/global_norm/L2Loss_45"
  input: "gpu_0/global_norm/L2Loss_46"
  input: "gpu_0/global_norm/L2Loss_47"
  input: "gpu_0/global_norm/L2Loss_48"
  input: "gpu_0/global_norm/L2Loss_49"
  input: "gpu_0/global_norm/L2Loss_50"
  input: "gpu_0/global_norm/L2Loss_51"
  input: "gpu_0/global_norm/L2Loss_52"
  input: "gpu_0/global_norm/L2Loss_53"
  input: "gpu_0/global_norm/L2Loss_54"
  input: "gpu_0/global_norm/L2Loss_55"
  input: "gpu_0/global_norm/L2Loss_56"
  input: "gpu_0/global_norm/L2Loss_57"
  input: "gpu_0/global_norm/L2Loss_58"
  input: "gpu_0/global_norm/L2Loss_59"
  input: "gpu_0/global_norm/L2Loss_60"
  input: "gpu_0/global_norm/L2Loss_61"
  input: "gpu_0/global_norm/L2Loss_62"
  input: "gpu_0/global_norm/L2Loss_63"
  input: "gpu_0/global_norm/L2Loss_64"
  input: "gpu_0/global_norm/L2Loss_65"
  input: "gpu_0/global_norm/L2Loss_66"
  input: "gpu_0/global_norm/L2Loss_67"
  input: "gpu_0/global_norm/L2Loss_68"
  input: "gpu_0/global_norm/L2Loss_69"
  input: "gpu_0/global_norm/L2Loss_70"
  input: "gpu_0/global_norm/L2Loss_71"
  input: "gpu_0/global_norm/L2Loss_72"
  input: "gpu_0/global_norm/L2Loss_73"
  input: "gpu_0/global_norm/L2Loss_74"
  input: "gpu_0/global_norm/L2Loss_75"
  input: "gpu_0/global_norm/L2Loss_76"
  input: "gpu_0/global_norm/L2Loss_77"
  input: "gpu_0/global_norm/L2Loss_78"
  input: "gpu_0/global_norm/L2Loss_79"
  input: "gpu_0/global_norm/L2Loss_80"
  input: "gpu_0/global_norm/L2Loss_81"
  input: "gpu_0/global_norm/L2Loss_82"
  input: "gpu_0/global_norm/L2Loss_83"
  input: "gpu_0/global_norm/L2Loss_84"
  input: "gpu_0/global_norm/L2Loss_85"
  input: "gpu_0/global_norm/L2Loss_86"
  input: "gpu_0/global_norm/L2Loss_87"
  input: "gpu_0/global_norm/L2Loss_88"
  input: "gpu_0/global_norm/L2Loss_89"
  input: "gpu_0/global_norm/L2Loss_90"
  input: "gpu_0/global_norm/L2Loss_91"
  input: "gpu_0/global_norm/L2Loss_92"
  input: "gpu_0/global_norm/L2Loss_93"
  input: "gpu_0/global_norm/L2Loss_94"
  input: "gpu_0/global_norm/L2Loss_95"
  input: "gpu_0/global_norm/L2Loss_96"
  input: "gpu_0/global_norm/L2Loss_97"
  input: "gpu_0/global_norm/L2Loss_98"
  input: "gpu_0/global_norm/L2Loss_99"
  input: "gpu_0/global_norm/L2Loss_100"
  input: "gpu_0/global_norm/L2Loss_101"
  input: "gpu_0/global_norm/L2Loss_102"
  input: "gpu_0/global_norm/L2Loss_103"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 104
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gpu_0/global_norm/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/Sum"
  op: "Sum"
  input: "gpu_0/global_norm/stack"
  input: "gpu_0/global_norm/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gpu_0/global_norm/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gpu_0/global_norm/mul"
  op: "Mul"
  input: "gpu_0/global_norm/Sum"
  input: "gpu_0/global_norm/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/global_norm/global_norm"
  op: "Sqrt"
  input: "gpu_0/global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/truediv/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "gpu_0/clip_by_global_norm/truediv/x"
  input: "gpu_0/global_norm/global_norm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/truediv_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "gpu_0/clip_by_global_norm/Const"
  input: "gpu_0/clip_by_global_norm/truediv_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "gpu_0/clip_by_global_norm/truediv"
  input: "gpu_0/clip_by_global_norm/truediv_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul"
  op: "Mul"
  input: "gpu_0/clip_by_global_norm/mul/x"
  input: "gpu_0/clip_by_global_norm/Minimum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/Tensordot/transpose_1_grad/transpose"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_0"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_1"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_grad/Mul_1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_2"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Reshape"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_3"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-1/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_1_grad/transpose"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_4"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_5"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_7"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_grad/Mul_1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_6"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_8"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Reshape"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_7"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/VFE-2/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_9"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_8"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_10"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_9"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_11"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_grad/Mul_1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_10"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_12"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Reshape"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_11"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv1/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_13"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_12"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_14"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_13"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_15"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_grad/Mul_1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_14"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_16"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Reshape"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_15"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv2/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_17"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_16"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_18"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_17"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_19"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_grad/Mul_1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_18"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_20"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Reshape"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_19"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv3/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_21"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_20"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_22"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_21"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_23"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_22"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_24"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_23"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_24"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_25"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_24"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_25"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_26"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_25"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_26"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_27"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_26"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_27"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_28"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_27"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_28"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_29"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_28"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_30"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_29"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_30"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_31"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_30"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_31"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_32"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_31"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_32"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_33"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_32"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_33"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_34"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_33"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_34"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_35"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_34"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_35"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_36"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_35"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_36"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_37"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_36"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_37"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_38"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_37"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_38"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_39"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_38"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_39"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_40"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_39"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_40"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_41"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_40"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_41"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_42"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_41"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_42"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_43"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_42"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_43"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_44"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_43"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_44"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_45"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_44"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_45"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_46"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_45"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_46"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_47"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_46"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_47"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_48"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_47"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_48"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_49"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_48"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_49"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_50"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_49"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_50"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_51"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_50"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_51"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_52"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_51"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_52"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_53"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_52"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_53"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_54"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_53"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_54"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_55"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_54"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_55"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_56"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_55"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_56"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_57"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_56"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_57"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_58"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_57"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_58"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_59"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_58"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_59"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_60"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_59"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_60"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_61"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_60"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_61"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_62"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_61"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_62"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_63"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_62"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_63"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_64"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_63"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_64"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_65"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_64"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_65"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_66"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_65"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_66"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_67"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_66"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_67"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_68"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_67"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_68"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_69"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_68"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_69"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_70"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_69"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_70"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_71"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_70"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_71"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_72"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_71"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_72"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_73"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_72"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_73"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_74"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_73"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_74"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_75"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_74"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_75"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_76"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_75"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_76"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_77"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_76"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_77"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_78"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_77"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_78"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_79"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_78"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_79"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_80"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_79"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_80"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_81"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_80"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_81"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_82"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_81"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_82"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_83"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_82"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_83"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_84"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_83"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_84"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_85"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_84"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_85"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_86"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_85"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_86"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_87"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_86"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_87"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_88"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_87"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_88"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_89"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_88"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_89"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_90"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_89"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_90"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_91"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_90"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_91"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_92"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_91"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_92"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_93"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_92"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_93"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_94"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_93"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_94"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_95"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_94"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_95"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_96"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_95"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_96"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/deconv3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_97"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_96"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_97"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_98"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_97"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_98"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_99"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_98"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_99"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_100"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_99"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_100"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_101"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Conv2DBackpropFilter"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_100"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_101"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_102"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/BiasAdd_grad/BiasAddGrad"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_101"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_102"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_103"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_102"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_103"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/mul_104"
  op: "Mul"
  input: "gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "gpu_0/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_103"
  op: "Identity"
  input: "gpu_0/clip_by_global_norm/mul_104"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gpu_0/gradients/gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_0"
  input: "ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "Identity"
  input: "ExpandDims"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "concat"
  input: "Mean/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_1/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_1"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_1"
  input: "ExpandDims_1/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "Identity"
  input: "ExpandDims_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_1/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "concat_1"
  input: "Mean_1/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_2/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_2"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_2"
  input: "ExpandDims_2/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_2/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_2"
  op: "Identity"
  input: "ExpandDims_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_2/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_2"
  op: "Mean"
  input: "concat_2"
  input: "Mean_2/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_3/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_3"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_3"
  input: "ExpandDims_3/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_3/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_3"
  op: "Identity"
  input: "ExpandDims_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_3/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_3"
  op: "Mean"
  input: "concat_3"
  input: "Mean_3/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_4/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_4"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_4"
  input: "ExpandDims_4/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_4/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_4"
  op: "Identity"
  input: "ExpandDims_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_4/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_4"
  op: "Mean"
  input: "concat_4"
  input: "Mean_4/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_5/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_5"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_5"
  input: "ExpandDims_5/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_5/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_5"
  op: "Identity"
  input: "ExpandDims_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_5/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_5"
  op: "Mean"
  input: "concat_5"
  input: "Mean_5/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_6/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_6"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_6"
  input: "ExpandDims_6/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_6/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_6"
  op: "Identity"
  input: "ExpandDims_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_6/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_6"
  op: "Mean"
  input: "concat_6"
  input: "Mean_6/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_7/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_7"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_7"
  input: "ExpandDims_7/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_7/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_7"
  op: "Identity"
  input: "ExpandDims_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_7/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_7"
  op: "Mean"
  input: "concat_7"
  input: "Mean_7/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_8/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_8"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_8"
  input: "ExpandDims_8/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_8/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_8"
  op: "Identity"
  input: "ExpandDims_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_8/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_8"
  op: "Mean"
  input: "concat_8"
  input: "Mean_8/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_9/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_9"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_9"
  input: "ExpandDims_9/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_9/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_9"
  op: "Identity"
  input: "ExpandDims_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_9/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_9"
  op: "Mean"
  input: "concat_9"
  input: "Mean_9/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_10/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_10"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_10"
  input: "ExpandDims_10/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_10/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_10"
  op: "Identity"
  input: "ExpandDims_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_10/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_10"
  op: "Mean"
  input: "concat_10"
  input: "Mean_10/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_11/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_11"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_11"
  input: "ExpandDims_11/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_11/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_11"
  op: "Identity"
  input: "ExpandDims_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_11/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_11"
  op: "Mean"
  input: "concat_11"
  input: "Mean_11/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_12/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_12"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_12"
  input: "ExpandDims_12/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_12/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_12"
  op: "Identity"
  input: "ExpandDims_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_12/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_12"
  op: "Mean"
  input: "concat_12"
  input: "Mean_12/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_13/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_13"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_13"
  input: "ExpandDims_13/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_13/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_13"
  op: "Identity"
  input: "ExpandDims_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_13/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_13"
  op: "Mean"
  input: "concat_13"
  input: "Mean_13/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_14/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_14"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_14"
  input: "ExpandDims_14/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_14/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_14"
  op: "Identity"
  input: "ExpandDims_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_14/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_14"
  op: "Mean"
  input: "concat_14"
  input: "Mean_14/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_15/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_15"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_15"
  input: "ExpandDims_15/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_15/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_15"
  op: "Identity"
  input: "ExpandDims_15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_15/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_15"
  op: "Mean"
  input: "concat_15"
  input: "Mean_15/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_16/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_16"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_16"
  input: "ExpandDims_16/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_16/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_16"
  op: "Identity"
  input: "ExpandDims_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_16/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_16"
  op: "Mean"
  input: "concat_16"
  input: "Mean_16/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_17/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_17"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_17"
  input: "ExpandDims_17/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_17/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_17"
  op: "Identity"
  input: "ExpandDims_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_17/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_17"
  op: "Mean"
  input: "concat_17"
  input: "Mean_17/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_18/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_18"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_18"
  input: "ExpandDims_18/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_18/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_18"
  op: "Identity"
  input: "ExpandDims_18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_18/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_18"
  op: "Mean"
  input: "concat_18"
  input: "Mean_18/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_19/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_19"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_19"
  input: "ExpandDims_19/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_19/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_19"
  op: "Identity"
  input: "ExpandDims_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_19/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_19"
  op: "Mean"
  input: "concat_19"
  input: "Mean_19/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_20/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_20"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_20"
  input: "ExpandDims_20/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_20/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_20"
  op: "Identity"
  input: "ExpandDims_20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_20/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_20"
  op: "Mean"
  input: "concat_20"
  input: "Mean_20/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_21/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_21"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_21"
  input: "ExpandDims_21/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_21/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_21"
  op: "Identity"
  input: "ExpandDims_21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_21/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_21"
  op: "Mean"
  input: "concat_21"
  input: "Mean_21/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_22/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_22"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_22"
  input: "ExpandDims_22/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_22/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_22"
  op: "Identity"
  input: "ExpandDims_22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_22/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_22"
  op: "Mean"
  input: "concat_22"
  input: "Mean_22/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_23/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_23"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_23"
  input: "ExpandDims_23/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_23/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_23"
  op: "Identity"
  input: "ExpandDims_23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_23/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_23"
  op: "Mean"
  input: "concat_23"
  input: "Mean_23/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_24/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_24"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_24"
  input: "ExpandDims_24/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_24/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_24"
  op: "Identity"
  input: "ExpandDims_24"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_24/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_24"
  op: "Mean"
  input: "concat_24"
  input: "Mean_24/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_25/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_25"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_25"
  input: "ExpandDims_25/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_25/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_25"
  op: "Identity"
  input: "ExpandDims_25"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_25/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_25"
  op: "Mean"
  input: "concat_25"
  input: "Mean_25/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_26/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_26"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_26"
  input: "ExpandDims_26/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_26/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_26"
  op: "Identity"
  input: "ExpandDims_26"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_26/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_26"
  op: "Mean"
  input: "concat_26"
  input: "Mean_26/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_27/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_27"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_27"
  input: "ExpandDims_27/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_27/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_27"
  op: "Identity"
  input: "ExpandDims_27"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_27/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_27"
  op: "Mean"
  input: "concat_27"
  input: "Mean_27/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_28/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_28"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_28"
  input: "ExpandDims_28/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_28/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_28"
  op: "Identity"
  input: "ExpandDims_28"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_28/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_28"
  op: "Mean"
  input: "concat_28"
  input: "Mean_28/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_29/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_29"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_29"
  input: "ExpandDims_29/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_29/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_29"
  op: "Identity"
  input: "ExpandDims_29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_29/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_29"
  op: "Mean"
  input: "concat_29"
  input: "Mean_29/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_30/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_30"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_30"
  input: "ExpandDims_30/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_30/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_30"
  op: "Identity"
  input: "ExpandDims_30"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_30/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_30"
  op: "Mean"
  input: "concat_30"
  input: "Mean_30/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_31/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_31"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_31"
  input: "ExpandDims_31/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_31/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_31"
  op: "Identity"
  input: "ExpandDims_31"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_31/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_31"
  op: "Mean"
  input: "concat_31"
  input: "Mean_31/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_32/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_32"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_32"
  input: "ExpandDims_32/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_32/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_32"
  op: "Identity"
  input: "ExpandDims_32"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_32/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_32"
  op: "Mean"
  input: "concat_32"
  input: "Mean_32/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_33/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_33"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_33"
  input: "ExpandDims_33/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_33/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_33"
  op: "Identity"
  input: "ExpandDims_33"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_33/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_33"
  op: "Mean"
  input: "concat_33"
  input: "Mean_33/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_34/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_34"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_34"
  input: "ExpandDims_34/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_34/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_34"
  op: "Identity"
  input: "ExpandDims_34"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_34/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_34"
  op: "Mean"
  input: "concat_34"
  input: "Mean_34/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_35/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_35"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_35"
  input: "ExpandDims_35/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_35/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_35"
  op: "Identity"
  input: "ExpandDims_35"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_35/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_35"
  op: "Mean"
  input: "concat_35"
  input: "Mean_35/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_36/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_36"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_36"
  input: "ExpandDims_36/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_36/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_36"
  op: "Identity"
  input: "ExpandDims_36"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_36/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_36"
  op: "Mean"
  input: "concat_36"
  input: "Mean_36/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_37/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_37"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_37"
  input: "ExpandDims_37/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_37/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_37"
  op: "Identity"
  input: "ExpandDims_37"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_37/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_37"
  op: "Mean"
  input: "concat_37"
  input: "Mean_37/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_38/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_38"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_38"
  input: "ExpandDims_38/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_38/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_38"
  op: "Identity"
  input: "ExpandDims_38"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_38/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_38"
  op: "Mean"
  input: "concat_38"
  input: "Mean_38/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_39/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_39"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_39"
  input: "ExpandDims_39/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_39/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_39"
  op: "Identity"
  input: "ExpandDims_39"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_39/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_39"
  op: "Mean"
  input: "concat_39"
  input: "Mean_39/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_40/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_40"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_40"
  input: "ExpandDims_40/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_40/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_40"
  op: "Identity"
  input: "ExpandDims_40"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_40/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_40"
  op: "Mean"
  input: "concat_40"
  input: "Mean_40/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_41/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_41"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_41"
  input: "ExpandDims_41/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_41/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_41"
  op: "Identity"
  input: "ExpandDims_41"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_41/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_41"
  op: "Mean"
  input: "concat_41"
  input: "Mean_41/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_42/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_42"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_42"
  input: "ExpandDims_42/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_42/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_42"
  op: "Identity"
  input: "ExpandDims_42"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_42/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_42"
  op: "Mean"
  input: "concat_42"
  input: "Mean_42/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_43/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_43"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_43"
  input: "ExpandDims_43/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_43/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_43"
  op: "Identity"
  input: "ExpandDims_43"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_43/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_43"
  op: "Mean"
  input: "concat_43"
  input: "Mean_43/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_44/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_44"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_44"
  input: "ExpandDims_44/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_44/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_44"
  op: "Identity"
  input: "ExpandDims_44"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_44/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_44"
  op: "Mean"
  input: "concat_44"
  input: "Mean_44/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_45/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_45"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_45"
  input: "ExpandDims_45/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_45/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_45"
  op: "Identity"
  input: "ExpandDims_45"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_45/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_45"
  op: "Mean"
  input: "concat_45"
  input: "Mean_45/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_46/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_46"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_46"
  input: "ExpandDims_46/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_46/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_46"
  op: "Identity"
  input: "ExpandDims_46"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_46/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_46"
  op: "Mean"
  input: "concat_46"
  input: "Mean_46/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_47/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_47"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_47"
  input: "ExpandDims_47/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_47/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_47"
  op: "Identity"
  input: "ExpandDims_47"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_47/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_47"
  op: "Mean"
  input: "concat_47"
  input: "Mean_47/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_48/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_48"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_48"
  input: "ExpandDims_48/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_48/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_48"
  op: "Identity"
  input: "ExpandDims_48"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_48/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_48"
  op: "Mean"
  input: "concat_48"
  input: "Mean_48/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_49/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_49"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_49"
  input: "ExpandDims_49/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_49/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_49"
  op: "Identity"
  input: "ExpandDims_49"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_49/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_49"
  op: "Mean"
  input: "concat_49"
  input: "Mean_49/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_50/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_50"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_50"
  input: "ExpandDims_50/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_50/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_50"
  op: "Identity"
  input: "ExpandDims_50"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_50/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_50"
  op: "Mean"
  input: "concat_50"
  input: "Mean_50/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_51/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_51"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_51"
  input: "ExpandDims_51/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_51/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_51"
  op: "Identity"
  input: "ExpandDims_51"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_51/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_51"
  op: "Mean"
  input: "concat_51"
  input: "Mean_51/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_52/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_52"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_52"
  input: "ExpandDims_52/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_52/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_52"
  op: "Identity"
  input: "ExpandDims_52"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_52/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_52"
  op: "Mean"
  input: "concat_52"
  input: "Mean_52/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_53/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_53"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_53"
  input: "ExpandDims_53/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_53/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_53"
  op: "Identity"
  input: "ExpandDims_53"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_53/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_53"
  op: "Mean"
  input: "concat_53"
  input: "Mean_53/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_54/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_54"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_54"
  input: "ExpandDims_54/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_54/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_54"
  op: "Identity"
  input: "ExpandDims_54"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_54/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_54"
  op: "Mean"
  input: "concat_54"
  input: "Mean_54/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_55/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_55"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_55"
  input: "ExpandDims_55/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_55/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_55"
  op: "Identity"
  input: "ExpandDims_55"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_55/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_55"
  op: "Mean"
  input: "concat_55"
  input: "Mean_55/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_56/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_56"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_56"
  input: "ExpandDims_56/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_56/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_56"
  op: "Identity"
  input: "ExpandDims_56"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_56/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_56"
  op: "Mean"
  input: "concat_56"
  input: "Mean_56/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_57/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_57"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_57"
  input: "ExpandDims_57/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_57/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_57"
  op: "Identity"
  input: "ExpandDims_57"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_57/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_57"
  op: "Mean"
  input: "concat_57"
  input: "Mean_57/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_58/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_58"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_58"
  input: "ExpandDims_58/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_58/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_58"
  op: "Identity"
  input: "ExpandDims_58"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_58/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_58"
  op: "Mean"
  input: "concat_58"
  input: "Mean_58/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_59/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_59"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_59"
  input: "ExpandDims_59/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_59/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_59"
  op: "Identity"
  input: "ExpandDims_59"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_59/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_59"
  op: "Mean"
  input: "concat_59"
  input: "Mean_59/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_60/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_60"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_60"
  input: "ExpandDims_60/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_60/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_60"
  op: "Identity"
  input: "ExpandDims_60"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_60/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_60"
  op: "Mean"
  input: "concat_60"
  input: "Mean_60/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_61/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_61"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_61"
  input: "ExpandDims_61/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_61/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_61"
  op: "Identity"
  input: "ExpandDims_61"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_61/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_61"
  op: "Mean"
  input: "concat_61"
  input: "Mean_61/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_62/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_62"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_62"
  input: "ExpandDims_62/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_62/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_62"
  op: "Identity"
  input: "ExpandDims_62"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_62/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_62"
  op: "Mean"
  input: "concat_62"
  input: "Mean_62/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_63/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_63"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_63"
  input: "ExpandDims_63/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_63/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_63"
  op: "Identity"
  input: "ExpandDims_63"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_63/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_63"
  op: "Mean"
  input: "concat_63"
  input: "Mean_63/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_64/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_64"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_64"
  input: "ExpandDims_64/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_64/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_64"
  op: "Identity"
  input: "ExpandDims_64"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_64/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_64"
  op: "Mean"
  input: "concat_64"
  input: "Mean_64/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_65/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_65"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_65"
  input: "ExpandDims_65/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_65/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_65"
  op: "Identity"
  input: "ExpandDims_65"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_65/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_65"
  op: "Mean"
  input: "concat_65"
  input: "Mean_65/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_66/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_66"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_66"
  input: "ExpandDims_66/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_66/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_66"
  op: "Identity"
  input: "ExpandDims_66"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_66/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_66"
  op: "Mean"
  input: "concat_66"
  input: "Mean_66/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_67/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_67"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_67"
  input: "ExpandDims_67/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_67/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_67"
  op: "Identity"
  input: "ExpandDims_67"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_67/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_67"
  op: "Mean"
  input: "concat_67"
  input: "Mean_67/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_68/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_68"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_68"
  input: "ExpandDims_68/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_68/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_68"
  op: "Identity"
  input: "ExpandDims_68"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_68/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_68"
  op: "Mean"
  input: "concat_68"
  input: "Mean_68/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_69/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_69"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_69"
  input: "ExpandDims_69/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_69/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_69"
  op: "Identity"
  input: "ExpandDims_69"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_69/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_69"
  op: "Mean"
  input: "concat_69"
  input: "Mean_69/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_70/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_70"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_70"
  input: "ExpandDims_70/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_70/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_70"
  op: "Identity"
  input: "ExpandDims_70"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_70/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_70"
  op: "Mean"
  input: "concat_70"
  input: "Mean_70/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_71/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_71"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_71"
  input: "ExpandDims_71/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_71/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_71"
  op: "Identity"
  input: "ExpandDims_71"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_71/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_71"
  op: "Mean"
  input: "concat_71"
  input: "Mean_71/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_72/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_72"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_72"
  input: "ExpandDims_72/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_72/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_72"
  op: "Identity"
  input: "ExpandDims_72"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_72/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_72"
  op: "Mean"
  input: "concat_72"
  input: "Mean_72/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_73/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_73"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_73"
  input: "ExpandDims_73/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_73/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_73"
  op: "Identity"
  input: "ExpandDims_73"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_73/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_73"
  op: "Mean"
  input: "concat_73"
  input: "Mean_73/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_74/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_74"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_74"
  input: "ExpandDims_74/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_74/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_74"
  op: "Identity"
  input: "ExpandDims_74"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_74/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_74"
  op: "Mean"
  input: "concat_74"
  input: "Mean_74/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_75/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_75"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_75"
  input: "ExpandDims_75/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_75/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_75"
  op: "Identity"
  input: "ExpandDims_75"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_75/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_75"
  op: "Mean"
  input: "concat_75"
  input: "Mean_75/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_76/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_76"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_76"
  input: "ExpandDims_76/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_76/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_76"
  op: "Identity"
  input: "ExpandDims_76"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_76/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_76"
  op: "Mean"
  input: "concat_76"
  input: "Mean_76/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_77/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_77"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_77"
  input: "ExpandDims_77/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_77/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_77"
  op: "Identity"
  input: "ExpandDims_77"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_77/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_77"
  op: "Mean"
  input: "concat_77"
  input: "Mean_77/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_78/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_78"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_78"
  input: "ExpandDims_78/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_78/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_78"
  op: "Identity"
  input: "ExpandDims_78"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_78/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_78"
  op: "Mean"
  input: "concat_78"
  input: "Mean_78/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_79/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_79"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_79"
  input: "ExpandDims_79/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_79/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_79"
  op: "Identity"
  input: "ExpandDims_79"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_79/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_79"
  op: "Mean"
  input: "concat_79"
  input: "Mean_79/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_80/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_80"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_80"
  input: "ExpandDims_80/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_80/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_80"
  op: "Identity"
  input: "ExpandDims_80"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_80/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_80"
  op: "Mean"
  input: "concat_80"
  input: "Mean_80/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_81/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_81"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_81"
  input: "ExpandDims_81/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_81/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_81"
  op: "Identity"
  input: "ExpandDims_81"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_81/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_81"
  op: "Mean"
  input: "concat_81"
  input: "Mean_81/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_82/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_82"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_82"
  input: "ExpandDims_82/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_82/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_82"
  op: "Identity"
  input: "ExpandDims_82"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_82/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_82"
  op: "Mean"
  input: "concat_82"
  input: "Mean_82/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_83/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_83"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_83"
  input: "ExpandDims_83/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_83/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_83"
  op: "Identity"
  input: "ExpandDims_83"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_83/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_83"
  op: "Mean"
  input: "concat_83"
  input: "Mean_83/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_84/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_84"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_84"
  input: "ExpandDims_84/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_84/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_84"
  op: "Identity"
  input: "ExpandDims_84"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_84/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_84"
  op: "Mean"
  input: "concat_84"
  input: "Mean_84/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_85/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_85"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_85"
  input: "ExpandDims_85/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_85/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_85"
  op: "Identity"
  input: "ExpandDims_85"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_85/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_85"
  op: "Mean"
  input: "concat_85"
  input: "Mean_85/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_86/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_86"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_86"
  input: "ExpandDims_86/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_86/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_86"
  op: "Identity"
  input: "ExpandDims_86"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_86/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_86"
  op: "Mean"
  input: "concat_86"
  input: "Mean_86/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_87/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_87"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_87"
  input: "ExpandDims_87/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_87/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_87"
  op: "Identity"
  input: "ExpandDims_87"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_87/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_87"
  op: "Mean"
  input: "concat_87"
  input: "Mean_87/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_88/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_88"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_88"
  input: "ExpandDims_88/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_88/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_88"
  op: "Identity"
  input: "ExpandDims_88"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_88/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_88"
  op: "Mean"
  input: "concat_88"
  input: "Mean_88/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_89/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_89"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_89"
  input: "ExpandDims_89/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_89/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_89"
  op: "Identity"
  input: "ExpandDims_89"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_89/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_89"
  op: "Mean"
  input: "concat_89"
  input: "Mean_89/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_90/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_90"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_90"
  input: "ExpandDims_90/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_90/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_90"
  op: "Identity"
  input: "ExpandDims_90"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_90/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_90"
  op: "Mean"
  input: "concat_90"
  input: "Mean_90/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_91/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_91"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_91"
  input: "ExpandDims_91/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_91/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_91"
  op: "Identity"
  input: "ExpandDims_91"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_91/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_91"
  op: "Mean"
  input: "concat_91"
  input: "Mean_91/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_92/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_92"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_92"
  input: "ExpandDims_92/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_92/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_92"
  op: "Identity"
  input: "ExpandDims_92"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_92/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_92"
  op: "Mean"
  input: "concat_92"
  input: "Mean_92/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_93/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_93"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_93"
  input: "ExpandDims_93/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_93/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_93"
  op: "Identity"
  input: "ExpandDims_93"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_93/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_93"
  op: "Mean"
  input: "concat_93"
  input: "Mean_93/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_94/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_94"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_94"
  input: "ExpandDims_94/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_94/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_94"
  op: "Identity"
  input: "ExpandDims_94"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_94/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_94"
  op: "Mean"
  input: "concat_94"
  input: "Mean_94/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_95/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_95"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_95"
  input: "ExpandDims_95/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_95/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_95"
  op: "Identity"
  input: "ExpandDims_95"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_95/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_95"
  op: "Mean"
  input: "concat_95"
  input: "Mean_95/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_96/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_96"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_96"
  input: "ExpandDims_96/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_96/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_96"
  op: "Identity"
  input: "ExpandDims_96"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_96/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_96"
  op: "Mean"
  input: "concat_96"
  input: "Mean_96/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_97/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_97"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_97"
  input: "ExpandDims_97/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_97/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_97"
  op: "Identity"
  input: "ExpandDims_97"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_97/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_97"
  op: "Mean"
  input: "concat_97"
  input: "Mean_97/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_98/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_98"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_98"
  input: "ExpandDims_98/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_98/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_98"
  op: "Identity"
  input: "ExpandDims_98"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_98/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_98"
  op: "Mean"
  input: "concat_98"
  input: "Mean_98/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_99/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_99"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_99"
  input: "ExpandDims_99/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_99/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_99"
  op: "Identity"
  input: "ExpandDims_99"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_99/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_99"
  op: "Mean"
  input: "concat_99"
  input: "Mean_99/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_100/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_100"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_100"
  input: "ExpandDims_100/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_100/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_100"
  op: "Identity"
  input: "ExpandDims_100"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_100/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_100"
  op: "Mean"
  input: "concat_100"
  input: "Mean_100/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_101/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_101"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_101"
  input: "ExpandDims_101/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_101/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_101"
  op: "Identity"
  input: "ExpandDims_101"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_101/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_101"
  op: "Mean"
  input: "concat_101"
  input: "Mean_101/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_102/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_102"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_102"
  input: "ExpandDims_102/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_102/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_102"
  op: "Identity"
  input: "ExpandDims_102"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_102/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_102"
  op: "Mean"
  input: "concat_102"
  input: "Mean_102/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_103/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ExpandDims_103"
  op: "ExpandDims"
  input: "gpu_0/clip_by_global_norm/gpu_0/clip_by_global_norm/_103"
  input: "ExpandDims_103/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_103/concat_dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_103"
  op: "Identity"
  input: "ExpandDims_103"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean_103/reduction_indices"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_103"
  op: "Mean"
  input: "concat_103"
  input: "Mean_103/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
}
node {
  name: "VFE-1/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/kernel/Adam/Assign"
  op: "Assign"
  input: "VFE-1/kernel/Adam"
  input: "VFE-1/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/kernel/Adam/read"
  op: "Identity"
  input: "VFE-1/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
}
node {
  name: "VFE-1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "VFE-1/kernel/Adam_1"
  input: "VFE-1/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/kernel/Adam_1/read"
  op: "Identity"
  input: "VFE-1/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
}
node {
  name: "VFE-1/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/bias/Adam/Assign"
  op: "Assign"
  input: "VFE-1/bias/Adam"
  input: "VFE-1/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/bias/Adam/read"
  op: "Identity"
  input: "VFE-1/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
}
node {
  name: "VFE-1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/bias/Adam_1/Assign"
  op: "Assign"
  input: "VFE-1/bias/Adam_1"
  input: "VFE-1/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/bias/Adam_1/read"
  op: "Identity"
  input: "VFE-1/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
}
node {
  name: "VFE-1/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/gamma/Adam/Assign"
  op: "Assign"
  input: "VFE-1/gamma/Adam"
  input: "VFE-1/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/gamma/Adam/read"
  op: "Identity"
  input: "VFE-1/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
}
node {
  name: "VFE-1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/gamma/Adam_1/Assign"
  op: "Assign"
  input: "VFE-1/gamma/Adam_1"
  input: "VFE-1/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/gamma/Adam_1/read"
  op: "Identity"
  input: "VFE-1/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
}
node {
  name: "VFE-1/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/beta/Adam/Assign"
  op: "Assign"
  input: "VFE-1/beta/Adam"
  input: "VFE-1/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/beta/Adam/read"
  op: "Identity"
  input: "VFE-1/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
}
node {
  name: "VFE-1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-1/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-1/beta/Adam_1/Assign"
  op: "Assign"
  input: "VFE-1/beta/Adam_1"
  input: "VFE-1/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-1/beta/Adam_1/read"
  op: "Identity"
  input: "VFE-1/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
}
node {
  name: "VFE-2/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/kernel/Adam/Assign"
  op: "Assign"
  input: "VFE-2/kernel/Adam"
  input: "VFE-2/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/kernel/Adam/read"
  op: "Identity"
  input: "VFE-2/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
}
node {
  name: "VFE-2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "VFE-2/kernel/Adam_1"
  input: "VFE-2/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/kernel/Adam_1/read"
  op: "Identity"
  input: "VFE-2/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
}
node {
  name: "VFE-2/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/bias/Adam/Assign"
  op: "Assign"
  input: "VFE-2/bias/Adam"
  input: "VFE-2/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/bias/Adam/read"
  op: "Identity"
  input: "VFE-2/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
}
node {
  name: "VFE-2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/bias/Adam_1/Assign"
  op: "Assign"
  input: "VFE-2/bias/Adam_1"
  input: "VFE-2/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/bias/Adam_1/read"
  op: "Identity"
  input: "VFE-2/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
}
node {
  name: "VFE-2/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/gamma/Adam/Assign"
  op: "Assign"
  input: "VFE-2/gamma/Adam"
  input: "VFE-2/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/gamma/Adam/read"
  op: "Identity"
  input: "VFE-2/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
}
node {
  name: "VFE-2/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/gamma/Adam_1/Assign"
  op: "Assign"
  input: "VFE-2/gamma/Adam_1"
  input: "VFE-2/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/gamma/Adam_1/read"
  op: "Identity"
  input: "VFE-2/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
}
node {
  name: "VFE-2/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/beta/Adam/Assign"
  op: "Assign"
  input: "VFE-2/beta/Adam"
  input: "VFE-2/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/beta/Adam/read"
  op: "Identity"
  input: "VFE-2/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
}
node {
  name: "VFE-2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VFE-2/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VFE-2/beta/Adam_1/Assign"
  op: "Assign"
  input: "VFE-2/beta/Adam_1"
  input: "VFE-2/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VFE-2/beta/Adam_1/read"
  op: "Identity"
  input: "VFE-2/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/kernel/Adam"
  input: "MiddleAndRPN_/conv1/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/kernel/Adam_1"
  input: "MiddleAndRPN_/conv1/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/bias/Adam"
  input: "MiddleAndRPN_/conv1/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/bias/Adam_1"
  input: "MiddleAndRPN_/conv1/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/gamma/Adam"
  input: "MiddleAndRPN_/conv1/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/gamma/Adam_1"
  input: "MiddleAndRPN_/conv1/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/beta/Adam"
  input: "MiddleAndRPN_/conv1/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/beta/Adam_1"
  input: "MiddleAndRPN_/conv1/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv1/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/kernel/Adam"
  input: "MiddleAndRPN_/conv2/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/kernel/Adam_1"
  input: "MiddleAndRPN_/conv2/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/bias/Adam"
  input: "MiddleAndRPN_/conv2/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/bias/Adam_1"
  input: "MiddleAndRPN_/conv2/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/gamma/Adam"
  input: "MiddleAndRPN_/conv2/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/gamma/Adam_1"
  input: "MiddleAndRPN_/conv2/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/beta/Adam"
  input: "MiddleAndRPN_/conv2/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/beta/Adam_1"
  input: "MiddleAndRPN_/conv2/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv2/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/kernel/Adam"
  input: "MiddleAndRPN_/conv3/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/kernel/Adam_1"
  input: "MiddleAndRPN_/conv3/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/bias/Adam"
  input: "MiddleAndRPN_/conv3/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/bias/Adam_1"
  input: "MiddleAndRPN_/conv3/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/gamma/Adam"
  input: "MiddleAndRPN_/conv3/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/gamma/Adam_1"
  input: "MiddleAndRPN_/conv3/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/beta/Adam"
  input: "MiddleAndRPN_/conv3/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/beta/Adam_1"
  input: "MiddleAndRPN_/conv3/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv3/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/kernel/Adam"
  input: "MiddleAndRPN_/conv4/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/kernel/Adam_1"
  input: "MiddleAndRPN_/conv4/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/bias/Adam"
  input: "MiddleAndRPN_/conv4/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/bias/Adam_1"
  input: "MiddleAndRPN_/conv4/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/gamma/Adam"
  input: "MiddleAndRPN_/conv4/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/gamma/Adam_1"
  input: "MiddleAndRPN_/conv4/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/beta/Adam"
  input: "MiddleAndRPN_/conv4/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/beta/Adam_1"
  input: "MiddleAndRPN_/conv4/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv4/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/kernel/Adam"
  input: "MiddleAndRPN_/conv5/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/kernel/Adam_1"
  input: "MiddleAndRPN_/conv5/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/bias/Adam"
  input: "MiddleAndRPN_/conv5/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/bias/Adam_1"
  input: "MiddleAndRPN_/conv5/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/gamma/Adam"
  input: "MiddleAndRPN_/conv5/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/gamma/Adam_1"
  input: "MiddleAndRPN_/conv5/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/beta/Adam"
  input: "MiddleAndRPN_/conv5/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/beta/Adam_1"
  input: "MiddleAndRPN_/conv5/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv5/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/kernel/Adam"
  input: "MiddleAndRPN_/conv6/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/kernel/Adam_1"
  input: "MiddleAndRPN_/conv6/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/bias/Adam"
  input: "MiddleAndRPN_/conv6/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/bias/Adam_1"
  input: "MiddleAndRPN_/conv6/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/gamma/Adam"
  input: "MiddleAndRPN_/conv6/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/gamma/Adam_1"
  input: "MiddleAndRPN_/conv6/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/beta/Adam"
  input: "MiddleAndRPN_/conv6/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/beta/Adam_1"
  input: "MiddleAndRPN_/conv6/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv6/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/kernel/Adam"
  input: "MiddleAndRPN_/conv7/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/kernel/Adam_1"
  input: "MiddleAndRPN_/conv7/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/bias/Adam"
  input: "MiddleAndRPN_/conv7/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/bias/Adam_1"
  input: "MiddleAndRPN_/conv7/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/gamma/Adam"
  input: "MiddleAndRPN_/conv7/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/gamma/Adam_1"
  input: "MiddleAndRPN_/conv7/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/beta/Adam"
  input: "MiddleAndRPN_/conv7/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/beta/Adam_1"
  input: "MiddleAndRPN_/conv7/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv7/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/kernel/Adam"
  input: "MiddleAndRPN_/deconv1/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/kernel/Adam_1"
  input: "MiddleAndRPN_/deconv1/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/bias/Adam"
  input: "MiddleAndRPN_/deconv1/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/bias/Adam_1"
  input: "MiddleAndRPN_/deconv1/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/gamma/Adam"
  input: "MiddleAndRPN_/deconv1/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/gamma/Adam_1"
  input: "MiddleAndRPN_/deconv1/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/beta/Adam"
  input: "MiddleAndRPN_/deconv1/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/beta/Adam_1"
  input: "MiddleAndRPN_/deconv1/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv1/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/kernel/Adam"
  input: "MiddleAndRPN_/conv8/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/kernel/Adam_1"
  input: "MiddleAndRPN_/conv8/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/bias/Adam"
  input: "MiddleAndRPN_/conv8/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/bias/Adam_1"
  input: "MiddleAndRPN_/conv8/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/gamma/Adam"
  input: "MiddleAndRPN_/conv8/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/gamma/Adam_1"
  input: "MiddleAndRPN_/conv8/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/beta/Adam"
  input: "MiddleAndRPN_/conv8/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/beta/Adam_1"
  input: "MiddleAndRPN_/conv8/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv8/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/kernel/Adam"
  input: "MiddleAndRPN_/conv9/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/kernel/Adam_1"
  input: "MiddleAndRPN_/conv9/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/bias/Adam"
  input: "MiddleAndRPN_/conv9/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/bias/Adam_1"
  input: "MiddleAndRPN_/conv9/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/gamma/Adam"
  input: "MiddleAndRPN_/conv9/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/gamma/Adam_1"
  input: "MiddleAndRPN_/conv9/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/beta/Adam"
  input: "MiddleAndRPN_/conv9/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/beta/Adam_1"
  input: "MiddleAndRPN_/conv9/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv9/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/kernel/Adam"
  input: "MiddleAndRPN_/conv10/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/kernel/Adam_1"
  input: "MiddleAndRPN_/conv10/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/bias/Adam"
  input: "MiddleAndRPN_/conv10/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/bias/Adam_1"
  input: "MiddleAndRPN_/conv10/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/gamma/Adam"
  input: "MiddleAndRPN_/conv10/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/gamma/Adam_1"
  input: "MiddleAndRPN_/conv10/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/beta/Adam"
  input: "MiddleAndRPN_/conv10/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/beta/Adam_1"
  input: "MiddleAndRPN_/conv10/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv10/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/kernel/Adam"
  input: "MiddleAndRPN_/conv11/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/kernel/Adam_1"
  input: "MiddleAndRPN_/conv11/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/bias/Adam"
  input: "MiddleAndRPN_/conv11/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/bias/Adam_1"
  input: "MiddleAndRPN_/conv11/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/gamma/Adam"
  input: "MiddleAndRPN_/conv11/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/gamma/Adam_1"
  input: "MiddleAndRPN_/conv11/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/beta/Adam"
  input: "MiddleAndRPN_/conv11/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/beta/Adam_1"
  input: "MiddleAndRPN_/conv11/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv11/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/kernel/Adam"
  input: "MiddleAndRPN_/conv12/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/kernel/Adam_1"
  input: "MiddleAndRPN_/conv12/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/bias/Adam"
  input: "MiddleAndRPN_/conv12/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/bias/Adam_1"
  input: "MiddleAndRPN_/conv12/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/gamma/Adam"
  input: "MiddleAndRPN_/conv12/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/gamma/Adam_1"
  input: "MiddleAndRPN_/conv12/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/beta/Adam"
  input: "MiddleAndRPN_/conv12/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/beta/Adam_1"
  input: "MiddleAndRPN_/conv12/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv12/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/kernel/Adam"
  input: "MiddleAndRPN_/conv13/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/kernel/Adam_1"
  input: "MiddleAndRPN_/conv13/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/bias/Adam"
  input: "MiddleAndRPN_/conv13/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/bias/Adam_1"
  input: "MiddleAndRPN_/conv13/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/gamma/Adam"
  input: "MiddleAndRPN_/conv13/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/gamma/Adam_1"
  input: "MiddleAndRPN_/conv13/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/beta/Adam"
  input: "MiddleAndRPN_/conv13/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/beta/Adam_1"
  input: "MiddleAndRPN_/conv13/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv13/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/kernel/Adam"
  input: "MiddleAndRPN_/deconv2/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/kernel/Adam_1"
  input: "MiddleAndRPN_/deconv2/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/bias/Adam"
  input: "MiddleAndRPN_/deconv2/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/bias/Adam_1"
  input: "MiddleAndRPN_/deconv2/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/gamma/Adam"
  input: "MiddleAndRPN_/deconv2/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/gamma/Adam_1"
  input: "MiddleAndRPN_/deconv2/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/beta/Adam"
  input: "MiddleAndRPN_/deconv2/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/beta/Adam_1"
  input: "MiddleAndRPN_/deconv2/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv2/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/kernel/Adam"
  input: "MiddleAndRPN_/conv14/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/kernel/Adam_1"
  input: "MiddleAndRPN_/conv14/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/bias/Adam"
  input: "MiddleAndRPN_/conv14/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/bias/Adam_1"
  input: "MiddleAndRPN_/conv14/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/gamma/Adam"
  input: "MiddleAndRPN_/conv14/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/gamma/Adam_1"
  input: "MiddleAndRPN_/conv14/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/beta/Adam"
  input: "MiddleAndRPN_/conv14/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/beta/Adam_1"
  input: "MiddleAndRPN_/conv14/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv14/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/kernel/Adam"
  input: "MiddleAndRPN_/conv15/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/kernel/Adam_1"
  input: "MiddleAndRPN_/conv15/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/bias/Adam"
  input: "MiddleAndRPN_/conv15/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/bias/Adam_1"
  input: "MiddleAndRPN_/conv15/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/gamma/Adam"
  input: "MiddleAndRPN_/conv15/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/gamma/Adam_1"
  input: "MiddleAndRPN_/conv15/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/beta/Adam"
  input: "MiddleAndRPN_/conv15/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/beta/Adam_1"
  input: "MiddleAndRPN_/conv15/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv15/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/kernel/Adam"
  input: "MiddleAndRPN_/conv16/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/kernel/Adam_1"
  input: "MiddleAndRPN_/conv16/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/bias/Adam"
  input: "MiddleAndRPN_/conv16/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/bias/Adam_1"
  input: "MiddleAndRPN_/conv16/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/gamma/Adam"
  input: "MiddleAndRPN_/conv16/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/gamma/Adam_1"
  input: "MiddleAndRPN_/conv16/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/beta/Adam"
  input: "MiddleAndRPN_/conv16/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/beta/Adam_1"
  input: "MiddleAndRPN_/conv16/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv16/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/kernel/Adam"
  input: "MiddleAndRPN_/conv17/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/kernel/Adam_1"
  input: "MiddleAndRPN_/conv17/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/bias/Adam"
  input: "MiddleAndRPN_/conv17/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/bias/Adam_1"
  input: "MiddleAndRPN_/conv17/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/gamma/Adam"
  input: "MiddleAndRPN_/conv17/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/gamma/Adam_1"
  input: "MiddleAndRPN_/conv17/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/beta/Adam"
  input: "MiddleAndRPN_/conv17/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/beta/Adam_1"
  input: "MiddleAndRPN_/conv17/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv17/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/kernel/Adam"
  input: "MiddleAndRPN_/conv18/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/kernel/Adam_1"
  input: "MiddleAndRPN_/conv18/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/bias/Adam"
  input: "MiddleAndRPN_/conv18/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/bias/Adam_1"
  input: "MiddleAndRPN_/conv18/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/gamma/Adam"
  input: "MiddleAndRPN_/conv18/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/gamma/Adam_1"
  input: "MiddleAndRPN_/conv18/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/beta/Adam"
  input: "MiddleAndRPN_/conv18/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/beta/Adam_1"
  input: "MiddleAndRPN_/conv18/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv18/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/kernel/Adam"
  input: "MiddleAndRPN_/conv19/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/kernel/Adam_1"
  input: "MiddleAndRPN_/conv19/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/bias/Adam"
  input: "MiddleAndRPN_/conv19/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/bias/Adam_1"
  input: "MiddleAndRPN_/conv19/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/gamma/Adam"
  input: "MiddleAndRPN_/conv19/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/gamma/Adam_1"
  input: "MiddleAndRPN_/conv19/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/beta/Adam"
  input: "MiddleAndRPN_/conv19/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/beta/Adam_1"
  input: "MiddleAndRPN_/conv19/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv19/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/kernel/Adam"
  input: "MiddleAndRPN_/deconv3/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/kernel/Adam_1"
  input: "MiddleAndRPN_/deconv3/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/bias/Adam"
  input: "MiddleAndRPN_/deconv3/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/bias/Adam_1"
  input: "MiddleAndRPN_/deconv3/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/gamma/Adam"
  input: "MiddleAndRPN_/deconv3/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/gamma/Adam_1"
  input: "MiddleAndRPN_/deconv3/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/beta/Adam"
  input: "MiddleAndRPN_/deconv3/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/beta/Adam_1"
  input: "MiddleAndRPN_/deconv3/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/deconv3/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 768
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/kernel/Adam"
  input: "MiddleAndRPN_/conv20/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 768
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/kernel/Adam_1"
  input: "MiddleAndRPN_/conv20/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/bias/Adam"
  input: "MiddleAndRPN_/conv20/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/bias/Adam_1"
  input: "MiddleAndRPN_/conv20/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/gamma/Adam"
  input: "MiddleAndRPN_/conv20/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/gamma/Adam_1"
  input: "MiddleAndRPN_/conv20/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/beta/Adam"
  input: "MiddleAndRPN_/conv20/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/beta/Adam_1"
  input: "MiddleAndRPN_/conv20/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv20/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 768
        }
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/kernel/Adam"
  input: "MiddleAndRPN_/conv21/kernel/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/kernel/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 768
          }
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 768
        }
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/kernel/Adam_1"
  input: "MiddleAndRPN_/conv21/kernel/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/kernel/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/bias/Adam"
  input: "MiddleAndRPN_/conv21/bias/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/bias/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/bias/Adam_1"
  input: "MiddleAndRPN_/conv21/bias/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/bias/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/gamma/Adam"
  input: "MiddleAndRPN_/conv21/gamma/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/gamma/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/gamma/Adam_1"
  input: "MiddleAndRPN_/conv21/gamma/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/gamma/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Adam/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/beta/Adam"
  input: "MiddleAndRPN_/conv21/beta/Adam/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Adam/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/beta/Adam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Adam_1/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/beta/Adam_1"
  input: "MiddleAndRPN_/conv21/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta/Adam_1/read"
  op: "Identity"
  input: "MiddleAndRPN_/conv21/beta/Adam_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_VFE-1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "VFE-1/kernel"
  input: "VFE-1/kernel/Adam"
  input: "VFE-1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_VFE-1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "VFE-1/bias"
  input: "VFE-1/bias/Adam"
  input: "VFE-1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_VFE-1/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "VFE-1/gamma"
  input: "VFE-1/gamma/Adam"
  input: "VFE-1/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_VFE-1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "VFE-1/beta"
  input: "VFE-1/beta/Adam"
  input: "VFE-1/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_VFE-2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "VFE-2/kernel"
  input: "VFE-2/kernel/Adam"
  input: "VFE-2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_VFE-2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "VFE-2/bias"
  input: "VFE-2/bias/Adam"
  input: "VFE-2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_VFE-2/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "VFE-2/gamma"
  input: "VFE-2/gamma/Adam"
  input: "VFE-2/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_VFE-2/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "VFE-2/beta"
  input: "VFE-2/beta/Adam"
  input: "VFE-2/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv1/kernel"
  input: "MiddleAndRPN_/conv1/kernel/Adam"
  input: "MiddleAndRPN_/conv1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv1/bias"
  input: "MiddleAndRPN_/conv1/bias/Adam"
  input: "MiddleAndRPN_/conv1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv1/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv1/gamma"
  input: "MiddleAndRPN_/conv1/gamma/Adam"
  input: "MiddleAndRPN_/conv1/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv1/beta"
  input: "MiddleAndRPN_/conv1/beta/Adam"
  input: "MiddleAndRPN_/conv1/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv2/kernel"
  input: "MiddleAndRPN_/conv2/kernel/Adam"
  input: "MiddleAndRPN_/conv2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv2/bias"
  input: "MiddleAndRPN_/conv2/bias/Adam"
  input: "MiddleAndRPN_/conv2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv2/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv2/gamma"
  input: "MiddleAndRPN_/conv2/gamma/Adam"
  input: "MiddleAndRPN_/conv2/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv2/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv2/beta"
  input: "MiddleAndRPN_/conv2/beta/Adam"
  input: "MiddleAndRPN_/conv2/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv3/kernel"
  input: "MiddleAndRPN_/conv3/kernel/Adam"
  input: "MiddleAndRPN_/conv3/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv3/bias"
  input: "MiddleAndRPN_/conv3/bias/Adam"
  input: "MiddleAndRPN_/conv3/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv3/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv3/gamma"
  input: "MiddleAndRPN_/conv3/gamma/Adam"
  input: "MiddleAndRPN_/conv3/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv3/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv3/beta"
  input: "MiddleAndRPN_/conv3/beta/Adam"
  input: "MiddleAndRPN_/conv3/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv4/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv4/kernel"
  input: "MiddleAndRPN_/conv4/kernel/Adam"
  input: "MiddleAndRPN_/conv4/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv4/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv4/bias"
  input: "MiddleAndRPN_/conv4/bias/Adam"
  input: "MiddleAndRPN_/conv4/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv4/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv4/gamma"
  input: "MiddleAndRPN_/conv4/gamma/Adam"
  input: "MiddleAndRPN_/conv4/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv4/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv4/beta"
  input: "MiddleAndRPN_/conv4/beta/Adam"
  input: "MiddleAndRPN_/conv4/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv5/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv5/kernel"
  input: "MiddleAndRPN_/conv5/kernel/Adam"
  input: "MiddleAndRPN_/conv5/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_24"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv5/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv5/bias"
  input: "MiddleAndRPN_/conv5/bias/Adam"
  input: "MiddleAndRPN_/conv5/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_25"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv5/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv5/gamma"
  input: "MiddleAndRPN_/conv5/gamma/Adam"
  input: "MiddleAndRPN_/conv5/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_26"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv5/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv5/beta"
  input: "MiddleAndRPN_/conv5/beta/Adam"
  input: "MiddleAndRPN_/conv5/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_27"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv6/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv6/kernel"
  input: "MiddleAndRPN_/conv6/kernel/Adam"
  input: "MiddleAndRPN_/conv6/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_28"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv6/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv6/bias"
  input: "MiddleAndRPN_/conv6/bias/Adam"
  input: "MiddleAndRPN_/conv6/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv6/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv6/gamma"
  input: "MiddleAndRPN_/conv6/gamma/Adam"
  input: "MiddleAndRPN_/conv6/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_30"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv6/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv6/beta"
  input: "MiddleAndRPN_/conv6/beta/Adam"
  input: "MiddleAndRPN_/conv6/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_31"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv7/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv7/kernel"
  input: "MiddleAndRPN_/conv7/kernel/Adam"
  input: "MiddleAndRPN_/conv7/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_32"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv7/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv7/bias"
  input: "MiddleAndRPN_/conv7/bias/Adam"
  input: "MiddleAndRPN_/conv7/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_33"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv7/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv7/gamma"
  input: "MiddleAndRPN_/conv7/gamma/Adam"
  input: "MiddleAndRPN_/conv7/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_34"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv7/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv7/beta"
  input: "MiddleAndRPN_/conv7/beta/Adam"
  input: "MiddleAndRPN_/conv7/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_35"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv1/kernel"
  input: "MiddleAndRPN_/deconv1/kernel/Adam"
  input: "MiddleAndRPN_/deconv1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_36"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv1/bias"
  input: "MiddleAndRPN_/deconv1/bias/Adam"
  input: "MiddleAndRPN_/deconv1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_37"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv1/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv1/gamma"
  input: "MiddleAndRPN_/deconv1/gamma/Adam"
  input: "MiddleAndRPN_/deconv1/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_38"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv1/beta"
  input: "MiddleAndRPN_/deconv1/beta/Adam"
  input: "MiddleAndRPN_/deconv1/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_39"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv8/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv8/kernel"
  input: "MiddleAndRPN_/conv8/kernel/Adam"
  input: "MiddleAndRPN_/conv8/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_40"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv8/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv8/bias"
  input: "MiddleAndRPN_/conv8/bias/Adam"
  input: "MiddleAndRPN_/conv8/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_41"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv8/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv8/gamma"
  input: "MiddleAndRPN_/conv8/gamma/Adam"
  input: "MiddleAndRPN_/conv8/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_42"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv8/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv8/beta"
  input: "MiddleAndRPN_/conv8/beta/Adam"
  input: "MiddleAndRPN_/conv8/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_43"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv9/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv9/kernel"
  input: "MiddleAndRPN_/conv9/kernel/Adam"
  input: "MiddleAndRPN_/conv9/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_44"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv9/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv9/bias"
  input: "MiddleAndRPN_/conv9/bias/Adam"
  input: "MiddleAndRPN_/conv9/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_45"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv9/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv9/gamma"
  input: "MiddleAndRPN_/conv9/gamma/Adam"
  input: "MiddleAndRPN_/conv9/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_46"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv9/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv9/beta"
  input: "MiddleAndRPN_/conv9/beta/Adam"
  input: "MiddleAndRPN_/conv9/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_47"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv10/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv10/kernel"
  input: "MiddleAndRPN_/conv10/kernel/Adam"
  input: "MiddleAndRPN_/conv10/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_48"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv10/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv10/bias"
  input: "MiddleAndRPN_/conv10/bias/Adam"
  input: "MiddleAndRPN_/conv10/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_49"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv10/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv10/gamma"
  input: "MiddleAndRPN_/conv10/gamma/Adam"
  input: "MiddleAndRPN_/conv10/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_50"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv10/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv10/beta"
  input: "MiddleAndRPN_/conv10/beta/Adam"
  input: "MiddleAndRPN_/conv10/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_51"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv11/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv11/kernel"
  input: "MiddleAndRPN_/conv11/kernel/Adam"
  input: "MiddleAndRPN_/conv11/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_52"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv11/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv11/bias"
  input: "MiddleAndRPN_/conv11/bias/Adam"
  input: "MiddleAndRPN_/conv11/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_53"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv11/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv11/gamma"
  input: "MiddleAndRPN_/conv11/gamma/Adam"
  input: "MiddleAndRPN_/conv11/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_54"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv11/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv11/beta"
  input: "MiddleAndRPN_/conv11/beta/Adam"
  input: "MiddleAndRPN_/conv11/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_55"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv12/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv12/kernel"
  input: "MiddleAndRPN_/conv12/kernel/Adam"
  input: "MiddleAndRPN_/conv12/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_56"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv12/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv12/bias"
  input: "MiddleAndRPN_/conv12/bias/Adam"
  input: "MiddleAndRPN_/conv12/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_57"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv12/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv12/gamma"
  input: "MiddleAndRPN_/conv12/gamma/Adam"
  input: "MiddleAndRPN_/conv12/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_58"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv12/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv12/beta"
  input: "MiddleAndRPN_/conv12/beta/Adam"
  input: "MiddleAndRPN_/conv12/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_59"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv13/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv13/kernel"
  input: "MiddleAndRPN_/conv13/kernel/Adam"
  input: "MiddleAndRPN_/conv13/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_60"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv13/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv13/bias"
  input: "MiddleAndRPN_/conv13/bias/Adam"
  input: "MiddleAndRPN_/conv13/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_61"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv13/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv13/gamma"
  input: "MiddleAndRPN_/conv13/gamma/Adam"
  input: "MiddleAndRPN_/conv13/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_62"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv13/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv13/beta"
  input: "MiddleAndRPN_/conv13/beta/Adam"
  input: "MiddleAndRPN_/conv13/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_63"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv2/kernel"
  input: "MiddleAndRPN_/deconv2/kernel/Adam"
  input: "MiddleAndRPN_/deconv2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_64"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv2/bias"
  input: "MiddleAndRPN_/deconv2/bias/Adam"
  input: "MiddleAndRPN_/deconv2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_65"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv2/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv2/gamma"
  input: "MiddleAndRPN_/deconv2/gamma/Adam"
  input: "MiddleAndRPN_/deconv2/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_66"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv2/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv2/beta"
  input: "MiddleAndRPN_/deconv2/beta/Adam"
  input: "MiddleAndRPN_/deconv2/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_67"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv14/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv14/kernel"
  input: "MiddleAndRPN_/conv14/kernel/Adam"
  input: "MiddleAndRPN_/conv14/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_68"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv14/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv14/bias"
  input: "MiddleAndRPN_/conv14/bias/Adam"
  input: "MiddleAndRPN_/conv14/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_69"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv14/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv14/gamma"
  input: "MiddleAndRPN_/conv14/gamma/Adam"
  input: "MiddleAndRPN_/conv14/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_70"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv14/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv14/beta"
  input: "MiddleAndRPN_/conv14/beta/Adam"
  input: "MiddleAndRPN_/conv14/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_71"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv15/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv15/kernel"
  input: "MiddleAndRPN_/conv15/kernel/Adam"
  input: "MiddleAndRPN_/conv15/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_72"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv15/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv15/bias"
  input: "MiddleAndRPN_/conv15/bias/Adam"
  input: "MiddleAndRPN_/conv15/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_73"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv15/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv15/gamma"
  input: "MiddleAndRPN_/conv15/gamma/Adam"
  input: "MiddleAndRPN_/conv15/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_74"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv15/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv15/beta"
  input: "MiddleAndRPN_/conv15/beta/Adam"
  input: "MiddleAndRPN_/conv15/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_75"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv16/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv16/kernel"
  input: "MiddleAndRPN_/conv16/kernel/Adam"
  input: "MiddleAndRPN_/conv16/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_76"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv16/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv16/bias"
  input: "MiddleAndRPN_/conv16/bias/Adam"
  input: "MiddleAndRPN_/conv16/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_77"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv16/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv16/gamma"
  input: "MiddleAndRPN_/conv16/gamma/Adam"
  input: "MiddleAndRPN_/conv16/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_78"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv16/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv16/beta"
  input: "MiddleAndRPN_/conv16/beta/Adam"
  input: "MiddleAndRPN_/conv16/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_79"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv17/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv17/kernel"
  input: "MiddleAndRPN_/conv17/kernel/Adam"
  input: "MiddleAndRPN_/conv17/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_80"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv17/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv17/bias"
  input: "MiddleAndRPN_/conv17/bias/Adam"
  input: "MiddleAndRPN_/conv17/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_81"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv17/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv17/gamma"
  input: "MiddleAndRPN_/conv17/gamma/Adam"
  input: "MiddleAndRPN_/conv17/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_82"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv17/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv17/beta"
  input: "MiddleAndRPN_/conv17/beta/Adam"
  input: "MiddleAndRPN_/conv17/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_83"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv18/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv18/kernel"
  input: "MiddleAndRPN_/conv18/kernel/Adam"
  input: "MiddleAndRPN_/conv18/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_84"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv18/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv18/bias"
  input: "MiddleAndRPN_/conv18/bias/Adam"
  input: "MiddleAndRPN_/conv18/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_85"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv18/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv18/gamma"
  input: "MiddleAndRPN_/conv18/gamma/Adam"
  input: "MiddleAndRPN_/conv18/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_86"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv18/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv18/beta"
  input: "MiddleAndRPN_/conv18/beta/Adam"
  input: "MiddleAndRPN_/conv18/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_87"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv19/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv19/kernel"
  input: "MiddleAndRPN_/conv19/kernel/Adam"
  input: "MiddleAndRPN_/conv19/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_88"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv19/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv19/bias"
  input: "MiddleAndRPN_/conv19/bias/Adam"
  input: "MiddleAndRPN_/conv19/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_89"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv19/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv19/gamma"
  input: "MiddleAndRPN_/conv19/gamma/Adam"
  input: "MiddleAndRPN_/conv19/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_90"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv19/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv19/beta"
  input: "MiddleAndRPN_/conv19/beta/Adam"
  input: "MiddleAndRPN_/conv19/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_91"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv3/kernel"
  input: "MiddleAndRPN_/deconv3/kernel/Adam"
  input: "MiddleAndRPN_/deconv3/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_92"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv3/bias"
  input: "MiddleAndRPN_/deconv3/bias/Adam"
  input: "MiddleAndRPN_/deconv3/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_93"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv3/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv3/gamma"
  input: "MiddleAndRPN_/deconv3/gamma/Adam"
  input: "MiddleAndRPN_/deconv3/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_94"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/deconv3/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/deconv3/beta"
  input: "MiddleAndRPN_/deconv3/beta/Adam"
  input: "MiddleAndRPN_/deconv3/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_95"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv20/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv20/kernel"
  input: "MiddleAndRPN_/conv20/kernel/Adam"
  input: "MiddleAndRPN_/conv20/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_96"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv20/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv20/bias"
  input: "MiddleAndRPN_/conv20/bias/Adam"
  input: "MiddleAndRPN_/conv20/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_97"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv20/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv20/gamma"
  input: "MiddleAndRPN_/conv20/gamma/Adam"
  input: "MiddleAndRPN_/conv20/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_98"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv20/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv20/beta"
  input: "MiddleAndRPN_/conv20/beta/Adam"
  input: "MiddleAndRPN_/conv20/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_99"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv21/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv21/kernel"
  input: "MiddleAndRPN_/conv21/kernel/Adam"
  input: "MiddleAndRPN_/conv21/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_100"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv21/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv21/bias"
  input: "MiddleAndRPN_/conv21/bias/Adam"
  input: "MiddleAndRPN_/conv21/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_101"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv21/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv21/gamma"
  input: "MiddleAndRPN_/conv21/gamma/Adam"
  input: "MiddleAndRPN_/conv21/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_102"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_MiddleAndRPN_/conv21/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "MiddleAndRPN_/conv21/beta"
  input: "MiddleAndRPN_/conv21/beta/Adam"
  input: "MiddleAndRPN_/conv21/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "Mean_103"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_VFE-1/kernel/ApplyAdam"
  input: "^Adam/update_VFE-1/bias/ApplyAdam"
  input: "^Adam/update_VFE-1/gamma/ApplyAdam"
  input: "^Adam/update_VFE-1/beta/ApplyAdam"
  input: "^Adam/update_VFE-2/kernel/ApplyAdam"
  input: "^Adam/update_VFE-2/bias/ApplyAdam"
  input: "^Adam/update_VFE-2/gamma/ApplyAdam"
  input: "^Adam/update_VFE-2/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/beta/ApplyAdam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_VFE-1/kernel/ApplyAdam"
  input: "^Adam/update_VFE-1/bias/ApplyAdam"
  input: "^Adam/update_VFE-1/gamma/ApplyAdam"
  input: "^Adam/update_VFE-1/beta/ApplyAdam"
  input: "^Adam/update_VFE-2/kernel/ApplyAdam"
  input: "^Adam/update_VFE-2/bias/ApplyAdam"
  input: "^Adam/update_VFE-2/gamma/ApplyAdam"
  input: "^Adam/update_VFE-2/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/beta/ApplyAdam"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/update_VFE-1/kernel/ApplyAdam"
  input: "^Adam/update_VFE-1/bias/ApplyAdam"
  input: "^Adam/update_VFE-1/gamma/ApplyAdam"
  input: "^Adam/update_VFE-1/beta/ApplyAdam"
  input: "^Adam/update_VFE-2/kernel/ApplyAdam"
  input: "^Adam/update_VFE-2/bias/ApplyAdam"
  input: "^Adam/update_VFE-2/gamma/ApplyAdam"
  input: "^Adam/update_VFE-2/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv1/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv2/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv3/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv4/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv5/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv6/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv7/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv1/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv8/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv9/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv10/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv11/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv12/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv13/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv2/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv14/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv15/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv16/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv17/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv18/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv19/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/deconv3/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv20/beta/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/kernel/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/bias/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/gamma/ApplyAdam"
  input: "^Adam/update_MiddleAndRPN_/conv21/beta/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  device: "/device:GPU:0"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "Variable_1"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^gpu_0/global_norm/global_norm"
  device: "/device:GPU:0"
}
node {
  name: "concat_104/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_104"
  op: "Identity"
  input: "gpu_0/MiddleAndRPN_/conv21/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat_105/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_105"
  op: "Identity"
  input: "gpu_0/MiddleAndRPN_/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 375
        }
        dim {
          size: 1242
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1600
        }
        dim {
          size: 1408
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 800
        }
        dim {
          size: 704
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "non_max_suppression/iou_threshold"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "non_max_suppression/NonMaxSuppressionV2/max_output_size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "non_max_suppression/NonMaxSuppressionV2"
  op: "NonMaxSuppressionV2"
  input: "Placeholder_3"
  input: "Placeholder_4"
  input: "non_max_suppression/NonMaxSuppressionV2/max_output_size"
  input: "non_max_suppression/iou_threshold"
  device: "/device:GPU:0"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 369
          }
        }
        string_val: "MiddleAndRPN_/conv1/beta"
        string_val: "MiddleAndRPN_/conv1/beta/Adam"
        string_val: "MiddleAndRPN_/conv1/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv1/bias"
        string_val: "MiddleAndRPN_/conv1/bias/Adam"
        string_val: "MiddleAndRPN_/conv1/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv1/gamma"
        string_val: "MiddleAndRPN_/conv1/gamma/Adam"
        string_val: "MiddleAndRPN_/conv1/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv1/kernel"
        string_val: "MiddleAndRPN_/conv1/kernel/Adam"
        string_val: "MiddleAndRPN_/conv1/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv1/moving_mean"
        string_val: "MiddleAndRPN_/conv1/moving_variance"
        string_val: "MiddleAndRPN_/conv10/beta"
        string_val: "MiddleAndRPN_/conv10/beta/Adam"
        string_val: "MiddleAndRPN_/conv10/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv10/bias"
        string_val: "MiddleAndRPN_/conv10/bias/Adam"
        string_val: "MiddleAndRPN_/conv10/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv10/gamma"
        string_val: "MiddleAndRPN_/conv10/gamma/Adam"
        string_val: "MiddleAndRPN_/conv10/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv10/kernel"
        string_val: "MiddleAndRPN_/conv10/kernel/Adam"
        string_val: "MiddleAndRPN_/conv10/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv10/moving_mean"
        string_val: "MiddleAndRPN_/conv10/moving_variance"
        string_val: "MiddleAndRPN_/conv11/beta"
        string_val: "MiddleAndRPN_/conv11/beta/Adam"
        string_val: "MiddleAndRPN_/conv11/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv11/bias"
        string_val: "MiddleAndRPN_/conv11/bias/Adam"
        string_val: "MiddleAndRPN_/conv11/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv11/gamma"
        string_val: "MiddleAndRPN_/conv11/gamma/Adam"
        string_val: "MiddleAndRPN_/conv11/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv11/kernel"
        string_val: "MiddleAndRPN_/conv11/kernel/Adam"
        string_val: "MiddleAndRPN_/conv11/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv11/moving_mean"
        string_val: "MiddleAndRPN_/conv11/moving_variance"
        string_val: "MiddleAndRPN_/conv12/beta"
        string_val: "MiddleAndRPN_/conv12/beta/Adam"
        string_val: "MiddleAndRPN_/conv12/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv12/bias"
        string_val: "MiddleAndRPN_/conv12/bias/Adam"
        string_val: "MiddleAndRPN_/conv12/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv12/gamma"
        string_val: "MiddleAndRPN_/conv12/gamma/Adam"
        string_val: "MiddleAndRPN_/conv12/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv12/kernel"
        string_val: "MiddleAndRPN_/conv12/kernel/Adam"
        string_val: "MiddleAndRPN_/conv12/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv12/moving_mean"
        string_val: "MiddleAndRPN_/conv12/moving_variance"
        string_val: "MiddleAndRPN_/conv13/beta"
        string_val: "MiddleAndRPN_/conv13/beta/Adam"
        string_val: "MiddleAndRPN_/conv13/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv13/bias"
        string_val: "MiddleAndRPN_/conv13/bias/Adam"
        string_val: "MiddleAndRPN_/conv13/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv13/gamma"
        string_val: "MiddleAndRPN_/conv13/gamma/Adam"
        string_val: "MiddleAndRPN_/conv13/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv13/kernel"
        string_val: "MiddleAndRPN_/conv13/kernel/Adam"
        string_val: "MiddleAndRPN_/conv13/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv13/moving_mean"
        string_val: "MiddleAndRPN_/conv13/moving_variance"
        string_val: "MiddleAndRPN_/conv14/beta"
        string_val: "MiddleAndRPN_/conv14/beta/Adam"
        string_val: "MiddleAndRPN_/conv14/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv14/bias"
        string_val: "MiddleAndRPN_/conv14/bias/Adam"
        string_val: "MiddleAndRPN_/conv14/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv14/gamma"
        string_val: "MiddleAndRPN_/conv14/gamma/Adam"
        string_val: "MiddleAndRPN_/conv14/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv14/kernel"
        string_val: "MiddleAndRPN_/conv14/kernel/Adam"
        string_val: "MiddleAndRPN_/conv14/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv14/moving_mean"
        string_val: "MiddleAndRPN_/conv14/moving_variance"
        string_val: "MiddleAndRPN_/conv15/beta"
        string_val: "MiddleAndRPN_/conv15/beta/Adam"
        string_val: "MiddleAndRPN_/conv15/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv15/bias"
        string_val: "MiddleAndRPN_/conv15/bias/Adam"
        string_val: "MiddleAndRPN_/conv15/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv15/gamma"
        string_val: "MiddleAndRPN_/conv15/gamma/Adam"
        string_val: "MiddleAndRPN_/conv15/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv15/kernel"
        string_val: "MiddleAndRPN_/conv15/kernel/Adam"
        string_val: "MiddleAndRPN_/conv15/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv15/moving_mean"
        string_val: "MiddleAndRPN_/conv15/moving_variance"
        string_val: "MiddleAndRPN_/conv16/beta"
        string_val: "MiddleAndRPN_/conv16/beta/Adam"
        string_val: "MiddleAndRPN_/conv16/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv16/bias"
        string_val: "MiddleAndRPN_/conv16/bias/Adam"
        string_val: "MiddleAndRPN_/conv16/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv16/gamma"
        string_val: "MiddleAndRPN_/conv16/gamma/Adam"
        string_val: "MiddleAndRPN_/conv16/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv16/kernel"
        string_val: "MiddleAndRPN_/conv16/kernel/Adam"
        string_val: "MiddleAndRPN_/conv16/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv16/moving_mean"
        string_val: "MiddleAndRPN_/conv16/moving_variance"
        string_val: "MiddleAndRPN_/conv17/beta"
        string_val: "MiddleAndRPN_/conv17/beta/Adam"
        string_val: "MiddleAndRPN_/conv17/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv17/bias"
        string_val: "MiddleAndRPN_/conv17/bias/Adam"
        string_val: "MiddleAndRPN_/conv17/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv17/gamma"
        string_val: "MiddleAndRPN_/conv17/gamma/Adam"
        string_val: "MiddleAndRPN_/conv17/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv17/kernel"
        string_val: "MiddleAndRPN_/conv17/kernel/Adam"
        string_val: "MiddleAndRPN_/conv17/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv17/moving_mean"
        string_val: "MiddleAndRPN_/conv17/moving_variance"
        string_val: "MiddleAndRPN_/conv18/beta"
        string_val: "MiddleAndRPN_/conv18/beta/Adam"
        string_val: "MiddleAndRPN_/conv18/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv18/bias"
        string_val: "MiddleAndRPN_/conv18/bias/Adam"
        string_val: "MiddleAndRPN_/conv18/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv18/gamma"
        string_val: "MiddleAndRPN_/conv18/gamma/Adam"
        string_val: "MiddleAndRPN_/conv18/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv18/kernel"
        string_val: "MiddleAndRPN_/conv18/kernel/Adam"
        string_val: "MiddleAndRPN_/conv18/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv18/moving_mean"
        string_val: "MiddleAndRPN_/conv18/moving_variance"
        string_val: "MiddleAndRPN_/conv19/beta"
        string_val: "MiddleAndRPN_/conv19/beta/Adam"
        string_val: "MiddleAndRPN_/conv19/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv19/bias"
        string_val: "MiddleAndRPN_/conv19/bias/Adam"
        string_val: "MiddleAndRPN_/conv19/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv19/gamma"
        string_val: "MiddleAndRPN_/conv19/gamma/Adam"
        string_val: "MiddleAndRPN_/conv19/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv19/kernel"
        string_val: "MiddleAndRPN_/conv19/kernel/Adam"
        string_val: "MiddleAndRPN_/conv19/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv19/moving_mean"
        string_val: "MiddleAndRPN_/conv19/moving_variance"
        string_val: "MiddleAndRPN_/conv2/beta"
        string_val: "MiddleAndRPN_/conv2/beta/Adam"
        string_val: "MiddleAndRPN_/conv2/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv2/bias"
        string_val: "MiddleAndRPN_/conv2/bias/Adam"
        string_val: "MiddleAndRPN_/conv2/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv2/gamma"
        string_val: "MiddleAndRPN_/conv2/gamma/Adam"
        string_val: "MiddleAndRPN_/conv2/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv2/kernel"
        string_val: "MiddleAndRPN_/conv2/kernel/Adam"
        string_val: "MiddleAndRPN_/conv2/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv2/moving_mean"
        string_val: "MiddleAndRPN_/conv2/moving_variance"
        string_val: "MiddleAndRPN_/conv20/beta"
        string_val: "MiddleAndRPN_/conv20/beta/Adam"
        string_val: "MiddleAndRPN_/conv20/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv20/bias"
        string_val: "MiddleAndRPN_/conv20/bias/Adam"
        string_val: "MiddleAndRPN_/conv20/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv20/gamma"
        string_val: "MiddleAndRPN_/conv20/gamma/Adam"
        string_val: "MiddleAndRPN_/conv20/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv20/kernel"
        string_val: "MiddleAndRPN_/conv20/kernel/Adam"
        string_val: "MiddleAndRPN_/conv20/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv20/moving_mean"
        string_val: "MiddleAndRPN_/conv20/moving_variance"
        string_val: "MiddleAndRPN_/conv21/beta"
        string_val: "MiddleAndRPN_/conv21/beta/Adam"
        string_val: "MiddleAndRPN_/conv21/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv21/bias"
        string_val: "MiddleAndRPN_/conv21/bias/Adam"
        string_val: "MiddleAndRPN_/conv21/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv21/gamma"
        string_val: "MiddleAndRPN_/conv21/gamma/Adam"
        string_val: "MiddleAndRPN_/conv21/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv21/kernel"
        string_val: "MiddleAndRPN_/conv21/kernel/Adam"
        string_val: "MiddleAndRPN_/conv21/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv21/moving_mean"
        string_val: "MiddleAndRPN_/conv21/moving_variance"
        string_val: "MiddleAndRPN_/conv3/beta"
        string_val: "MiddleAndRPN_/conv3/beta/Adam"
        string_val: "MiddleAndRPN_/conv3/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv3/bias"
        string_val: "MiddleAndRPN_/conv3/bias/Adam"
        string_val: "MiddleAndRPN_/conv3/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv3/gamma"
        string_val: "MiddleAndRPN_/conv3/gamma/Adam"
        string_val: "MiddleAndRPN_/conv3/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv3/kernel"
        string_val: "MiddleAndRPN_/conv3/kernel/Adam"
        string_val: "MiddleAndRPN_/conv3/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv3/moving_mean"
        string_val: "MiddleAndRPN_/conv3/moving_variance"
        string_val: "MiddleAndRPN_/conv4/beta"
        string_val: "MiddleAndRPN_/conv4/beta/Adam"
        string_val: "MiddleAndRPN_/conv4/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv4/bias"
        string_val: "MiddleAndRPN_/conv4/bias/Adam"
        string_val: "MiddleAndRPN_/conv4/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv4/gamma"
        string_val: "MiddleAndRPN_/conv4/gamma/Adam"
        string_val: "MiddleAndRPN_/conv4/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv4/kernel"
        string_val: "MiddleAndRPN_/conv4/kernel/Adam"
        string_val: "MiddleAndRPN_/conv4/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv4/moving_mean"
        string_val: "MiddleAndRPN_/conv4/moving_variance"
        string_val: "MiddleAndRPN_/conv5/beta"
        string_val: "MiddleAndRPN_/conv5/beta/Adam"
        string_val: "MiddleAndRPN_/conv5/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv5/bias"
        string_val: "MiddleAndRPN_/conv5/bias/Adam"
        string_val: "MiddleAndRPN_/conv5/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv5/gamma"
        string_val: "MiddleAndRPN_/conv5/gamma/Adam"
        string_val: "MiddleAndRPN_/conv5/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv5/kernel"
        string_val: "MiddleAndRPN_/conv5/kernel/Adam"
        string_val: "MiddleAndRPN_/conv5/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv5/moving_mean"
        string_val: "MiddleAndRPN_/conv5/moving_variance"
        string_val: "MiddleAndRPN_/conv6/beta"
        string_val: "MiddleAndRPN_/conv6/beta/Adam"
        string_val: "MiddleAndRPN_/conv6/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv6/bias"
        string_val: "MiddleAndRPN_/conv6/bias/Adam"
        string_val: "MiddleAndRPN_/conv6/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv6/gamma"
        string_val: "MiddleAndRPN_/conv6/gamma/Adam"
        string_val: "MiddleAndRPN_/conv6/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv6/kernel"
        string_val: "MiddleAndRPN_/conv6/kernel/Adam"
        string_val: "MiddleAndRPN_/conv6/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv6/moving_mean"
        string_val: "MiddleAndRPN_/conv6/moving_variance"
        string_val: "MiddleAndRPN_/conv7/beta"
        string_val: "MiddleAndRPN_/conv7/beta/Adam"
        string_val: "MiddleAndRPN_/conv7/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv7/bias"
        string_val: "MiddleAndRPN_/conv7/bias/Adam"
        string_val: "MiddleAndRPN_/conv7/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv7/gamma"
        string_val: "MiddleAndRPN_/conv7/gamma/Adam"
        string_val: "MiddleAndRPN_/conv7/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv7/kernel"
        string_val: "MiddleAndRPN_/conv7/kernel/Adam"
        string_val: "MiddleAndRPN_/conv7/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv7/moving_mean"
        string_val: "MiddleAndRPN_/conv7/moving_variance"
        string_val: "MiddleAndRPN_/conv8/beta"
        string_val: "MiddleAndRPN_/conv8/beta/Adam"
        string_val: "MiddleAndRPN_/conv8/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv8/bias"
        string_val: "MiddleAndRPN_/conv8/bias/Adam"
        string_val: "MiddleAndRPN_/conv8/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv8/gamma"
        string_val: "MiddleAndRPN_/conv8/gamma/Adam"
        string_val: "MiddleAndRPN_/conv8/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv8/kernel"
        string_val: "MiddleAndRPN_/conv8/kernel/Adam"
        string_val: "MiddleAndRPN_/conv8/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv8/moving_mean"
        string_val: "MiddleAndRPN_/conv8/moving_variance"
        string_val: "MiddleAndRPN_/conv9/beta"
        string_val: "MiddleAndRPN_/conv9/beta/Adam"
        string_val: "MiddleAndRPN_/conv9/beta/Adam_1"
        string_val: "MiddleAndRPN_/conv9/bias"
        string_val: "MiddleAndRPN_/conv9/bias/Adam"
        string_val: "MiddleAndRPN_/conv9/bias/Adam_1"
        string_val: "MiddleAndRPN_/conv9/gamma"
        string_val: "MiddleAndRPN_/conv9/gamma/Adam"
        string_val: "MiddleAndRPN_/conv9/gamma/Adam_1"
        string_val: "MiddleAndRPN_/conv9/kernel"
        string_val: "MiddleAndRPN_/conv9/kernel/Adam"
        string_val: "MiddleAndRPN_/conv9/kernel/Adam_1"
        string_val: "MiddleAndRPN_/conv9/moving_mean"
        string_val: "MiddleAndRPN_/conv9/moving_variance"
        string_val: "MiddleAndRPN_/deconv1/beta"
        string_val: "MiddleAndRPN_/deconv1/beta/Adam"
        string_val: "MiddleAndRPN_/deconv1/beta/Adam_1"
        string_val: "MiddleAndRPN_/deconv1/bias"
        string_val: "MiddleAndRPN_/deconv1/bias/Adam"
        string_val: "MiddleAndRPN_/deconv1/bias/Adam_1"
        string_val: "MiddleAndRPN_/deconv1/gamma"
        string_val: "MiddleAndRPN_/deconv1/gamma/Adam"
        string_val: "MiddleAndRPN_/deconv1/gamma/Adam_1"
        string_val: "MiddleAndRPN_/deconv1/kernel"
        string_val: "MiddleAndRPN_/deconv1/kernel/Adam"
        string_val: "MiddleAndRPN_/deconv1/kernel/Adam_1"
        string_val: "MiddleAndRPN_/deconv1/moving_mean"
        string_val: "MiddleAndRPN_/deconv1/moving_variance"
        string_val: "MiddleAndRPN_/deconv2/beta"
        string_val: "MiddleAndRPN_/deconv2/beta/Adam"
        string_val: "MiddleAndRPN_/deconv2/beta/Adam_1"
        string_val: "MiddleAndRPN_/deconv2/bias"
        string_val: "MiddleAndRPN_/deconv2/bias/Adam"
        string_val: "MiddleAndRPN_/deconv2/bias/Adam_1"
        string_val: "MiddleAndRPN_/deconv2/gamma"
        string_val: "MiddleAndRPN_/deconv2/gamma/Adam"
        string_val: "MiddleAndRPN_/deconv2/gamma/Adam_1"
        string_val: "MiddleAndRPN_/deconv2/kernel"
        string_val: "MiddleAndRPN_/deconv2/kernel/Adam"
        string_val: "MiddleAndRPN_/deconv2/kernel/Adam_1"
        string_val: "MiddleAndRPN_/deconv2/moving_mean"
        string_val: "MiddleAndRPN_/deconv2/moving_variance"
        string_val: "MiddleAndRPN_/deconv3/beta"
        string_val: "MiddleAndRPN_/deconv3/beta/Adam"
        string_val: "MiddleAndRPN_/deconv3/beta/Adam_1"
        string_val: "MiddleAndRPN_/deconv3/bias"
        string_val: "MiddleAndRPN_/deconv3/bias/Adam"
        string_val: "MiddleAndRPN_/deconv3/bias/Adam_1"
        string_val: "MiddleAndRPN_/deconv3/gamma"
        string_val: "MiddleAndRPN_/deconv3/gamma/Adam"
        string_val: "MiddleAndRPN_/deconv3/gamma/Adam_1"
        string_val: "MiddleAndRPN_/deconv3/kernel"
        string_val: "MiddleAndRPN_/deconv3/kernel/Adam"
        string_val: "MiddleAndRPN_/deconv3/kernel/Adam_1"
        string_val: "MiddleAndRPN_/deconv3/moving_mean"
        string_val: "MiddleAndRPN_/deconv3/moving_variance"
        string_val: "VFE-1/beta"
        string_val: "VFE-1/beta/Adam"
        string_val: "VFE-1/beta/Adam_1"
        string_val: "VFE-1/bias"
        string_val: "VFE-1/bias/Adam"
        string_val: "VFE-1/bias/Adam_1"
        string_val: "VFE-1/gamma"
        string_val: "VFE-1/gamma/Adam"
        string_val: "VFE-1/gamma/Adam_1"
        string_val: "VFE-1/kernel"
        string_val: "VFE-1/kernel/Adam"
        string_val: "VFE-1/kernel/Adam_1"
        string_val: "VFE-1/moving_mean"
        string_val: "VFE-1/moving_variance"
        string_val: "VFE-2/beta"
        string_val: "VFE-2/beta/Adam"
        string_val: "VFE-2/beta/Adam_1"
        string_val: "VFE-2/bias"
        string_val: "VFE-2/bias/Adam"
        string_val: "VFE-2/bias/Adam_1"
        string_val: "VFE-2/gamma"
        string_val: "VFE-2/gamma/Adam"
        string_val: "VFE-2/gamma/Adam_1"
        string_val: "VFE-2/kernel"
        string_val: "VFE-2/kernel/Adam"
        string_val: "VFE-2/kernel/Adam_1"
        string_val: "VFE-2/moving_mean"
        string_val: "VFE-2/moving_variance"
        string_val: "Variable"
        string_val: "Variable_1"
        string_val: "Variable_2"
        string_val: "beta1_power"
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 369
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "MiddleAndRPN_/conv1/beta"
  input: "MiddleAndRPN_/conv1/beta/Adam"
  input: "MiddleAndRPN_/conv1/beta/Adam_1"
  input: "MiddleAndRPN_/conv1/bias"
  input: "MiddleAndRPN_/conv1/bias/Adam"
  input: "MiddleAndRPN_/conv1/bias/Adam_1"
  input: "MiddleAndRPN_/conv1/gamma"
  input: "MiddleAndRPN_/conv1/gamma/Adam"
  input: "MiddleAndRPN_/conv1/gamma/Adam_1"
  input: "MiddleAndRPN_/conv1/kernel"
  input: "MiddleAndRPN_/conv1/kernel/Adam"
  input: "MiddleAndRPN_/conv1/kernel/Adam_1"
  input: "MiddleAndRPN_/conv1/moving_mean"
  input: "MiddleAndRPN_/conv1/moving_variance"
  input: "MiddleAndRPN_/conv10/beta"
  input: "MiddleAndRPN_/conv10/beta/Adam"
  input: "MiddleAndRPN_/conv10/beta/Adam_1"
  input: "MiddleAndRPN_/conv10/bias"
  input: "MiddleAndRPN_/conv10/bias/Adam"
  input: "MiddleAndRPN_/conv10/bias/Adam_1"
  input: "MiddleAndRPN_/conv10/gamma"
  input: "MiddleAndRPN_/conv10/gamma/Adam"
  input: "MiddleAndRPN_/conv10/gamma/Adam_1"
  input: "MiddleAndRPN_/conv10/kernel"
  input: "MiddleAndRPN_/conv10/kernel/Adam"
  input: "MiddleAndRPN_/conv10/kernel/Adam_1"
  input: "MiddleAndRPN_/conv10/moving_mean"
  input: "MiddleAndRPN_/conv10/moving_variance"
  input: "MiddleAndRPN_/conv11/beta"
  input: "MiddleAndRPN_/conv11/beta/Adam"
  input: "MiddleAndRPN_/conv11/beta/Adam_1"
  input: "MiddleAndRPN_/conv11/bias"
  input: "MiddleAndRPN_/conv11/bias/Adam"
  input: "MiddleAndRPN_/conv11/bias/Adam_1"
  input: "MiddleAndRPN_/conv11/gamma"
  input: "MiddleAndRPN_/conv11/gamma/Adam"
  input: "MiddleAndRPN_/conv11/gamma/Adam_1"
  input: "MiddleAndRPN_/conv11/kernel"
  input: "MiddleAndRPN_/conv11/kernel/Adam"
  input: "MiddleAndRPN_/conv11/kernel/Adam_1"
  input: "MiddleAndRPN_/conv11/moving_mean"
  input: "MiddleAndRPN_/conv11/moving_variance"
  input: "MiddleAndRPN_/conv12/beta"
  input: "MiddleAndRPN_/conv12/beta/Adam"
  input: "MiddleAndRPN_/conv12/beta/Adam_1"
  input: "MiddleAndRPN_/conv12/bias"
  input: "MiddleAndRPN_/conv12/bias/Adam"
  input: "MiddleAndRPN_/conv12/bias/Adam_1"
  input: "MiddleAndRPN_/conv12/gamma"
  input: "MiddleAndRPN_/conv12/gamma/Adam"
  input: "MiddleAndRPN_/conv12/gamma/Adam_1"
  input: "MiddleAndRPN_/conv12/kernel"
  input: "MiddleAndRPN_/conv12/kernel/Adam"
  input: "MiddleAndRPN_/conv12/kernel/Adam_1"
  input: "MiddleAndRPN_/conv12/moving_mean"
  input: "MiddleAndRPN_/conv12/moving_variance"
  input: "MiddleAndRPN_/conv13/beta"
  input: "MiddleAndRPN_/conv13/beta/Adam"
  input: "MiddleAndRPN_/conv13/beta/Adam_1"
  input: "MiddleAndRPN_/conv13/bias"
  input: "MiddleAndRPN_/conv13/bias/Adam"
  input: "MiddleAndRPN_/conv13/bias/Adam_1"
  input: "MiddleAndRPN_/conv13/gamma"
  input: "MiddleAndRPN_/conv13/gamma/Adam"
  input: "MiddleAndRPN_/conv13/gamma/Adam_1"
  input: "MiddleAndRPN_/conv13/kernel"
  input: "MiddleAndRPN_/conv13/kernel/Adam"
  input: "MiddleAndRPN_/conv13/kernel/Adam_1"
  input: "MiddleAndRPN_/conv13/moving_mean"
  input: "MiddleAndRPN_/conv13/moving_variance"
  input: "MiddleAndRPN_/conv14/beta"
  input: "MiddleAndRPN_/conv14/beta/Adam"
  input: "MiddleAndRPN_/conv14/beta/Adam_1"
  input: "MiddleAndRPN_/conv14/bias"
  input: "MiddleAndRPN_/conv14/bias/Adam"
  input: "MiddleAndRPN_/conv14/bias/Adam_1"
  input: "MiddleAndRPN_/conv14/gamma"
  input: "MiddleAndRPN_/conv14/gamma/Adam"
  input: "MiddleAndRPN_/conv14/gamma/Adam_1"
  input: "MiddleAndRPN_/conv14/kernel"
  input: "MiddleAndRPN_/conv14/kernel/Adam"
  input: "MiddleAndRPN_/conv14/kernel/Adam_1"
  input: "MiddleAndRPN_/conv14/moving_mean"
  input: "MiddleAndRPN_/conv14/moving_variance"
  input: "MiddleAndRPN_/conv15/beta"
  input: "MiddleAndRPN_/conv15/beta/Adam"
  input: "MiddleAndRPN_/conv15/beta/Adam_1"
  input: "MiddleAndRPN_/conv15/bias"
  input: "MiddleAndRPN_/conv15/bias/Adam"
  input: "MiddleAndRPN_/conv15/bias/Adam_1"
  input: "MiddleAndRPN_/conv15/gamma"
  input: "MiddleAndRPN_/conv15/gamma/Adam"
  input: "MiddleAndRPN_/conv15/gamma/Adam_1"
  input: "MiddleAndRPN_/conv15/kernel"
  input: "MiddleAndRPN_/conv15/kernel/Adam"
  input: "MiddleAndRPN_/conv15/kernel/Adam_1"
  input: "MiddleAndRPN_/conv15/moving_mean"
  input: "MiddleAndRPN_/conv15/moving_variance"
  input: "MiddleAndRPN_/conv16/beta"
  input: "MiddleAndRPN_/conv16/beta/Adam"
  input: "MiddleAndRPN_/conv16/beta/Adam_1"
  input: "MiddleAndRPN_/conv16/bias"
  input: "MiddleAndRPN_/conv16/bias/Adam"
  input: "MiddleAndRPN_/conv16/bias/Adam_1"
  input: "MiddleAndRPN_/conv16/gamma"
  input: "MiddleAndRPN_/conv16/gamma/Adam"
  input: "MiddleAndRPN_/conv16/gamma/Adam_1"
  input: "MiddleAndRPN_/conv16/kernel"
  input: "MiddleAndRPN_/conv16/kernel/Adam"
  input: "MiddleAndRPN_/conv16/kernel/Adam_1"
  input: "MiddleAndRPN_/conv16/moving_mean"
  input: "MiddleAndRPN_/conv16/moving_variance"
  input: "MiddleAndRPN_/conv17/beta"
  input: "MiddleAndRPN_/conv17/beta/Adam"
  input: "MiddleAndRPN_/conv17/beta/Adam_1"
  input: "MiddleAndRPN_/conv17/bias"
  input: "MiddleAndRPN_/conv17/bias/Adam"
  input: "MiddleAndRPN_/conv17/bias/Adam_1"
  input: "MiddleAndRPN_/conv17/gamma"
  input: "MiddleAndRPN_/conv17/gamma/Adam"
  input: "MiddleAndRPN_/conv17/gamma/Adam_1"
  input: "MiddleAndRPN_/conv17/kernel"
  input: "MiddleAndRPN_/conv17/kernel/Adam"
  input: "MiddleAndRPN_/conv17/kernel/Adam_1"
  input: "MiddleAndRPN_/conv17/moving_mean"
  input: "MiddleAndRPN_/conv17/moving_variance"
  input: "MiddleAndRPN_/conv18/beta"
  input: "MiddleAndRPN_/conv18/beta/Adam"
  input: "MiddleAndRPN_/conv18/beta/Adam_1"
  input: "MiddleAndRPN_/conv18/bias"
  input: "MiddleAndRPN_/conv18/bias/Adam"
  input: "MiddleAndRPN_/conv18/bias/Adam_1"
  input: "MiddleAndRPN_/conv18/gamma"
  input: "MiddleAndRPN_/conv18/gamma/Adam"
  input: "MiddleAndRPN_/conv18/gamma/Adam_1"
  input: "MiddleAndRPN_/conv18/kernel"
  input: "MiddleAndRPN_/conv18/kernel/Adam"
  input: "MiddleAndRPN_/conv18/kernel/Adam_1"
  input: "MiddleAndRPN_/conv18/moving_mean"
  input: "MiddleAndRPN_/conv18/moving_variance"
  input: "MiddleAndRPN_/conv19/beta"
  input: "MiddleAndRPN_/conv19/beta/Adam"
  input: "MiddleAndRPN_/conv19/beta/Adam_1"
  input: "MiddleAndRPN_/conv19/bias"
  input: "MiddleAndRPN_/conv19/bias/Adam"
  input: "MiddleAndRPN_/conv19/bias/Adam_1"
  input: "MiddleAndRPN_/conv19/gamma"
  input: "MiddleAndRPN_/conv19/gamma/Adam"
  input: "MiddleAndRPN_/conv19/gamma/Adam_1"
  input: "MiddleAndRPN_/conv19/kernel"
  input: "MiddleAndRPN_/conv19/kernel/Adam"
  input: "MiddleAndRPN_/conv19/kernel/Adam_1"
  input: "MiddleAndRPN_/conv19/moving_mean"
  input: "MiddleAndRPN_/conv19/moving_variance"
  input: "MiddleAndRPN_/conv2/beta"
  input: "MiddleAndRPN_/conv2/beta/Adam"
  input: "MiddleAndRPN_/conv2/beta/Adam_1"
  input: "MiddleAndRPN_/conv2/bias"
  input: "MiddleAndRPN_/conv2/bias/Adam"
  input: "MiddleAndRPN_/conv2/bias/Adam_1"
  input: "MiddleAndRPN_/conv2/gamma"
  input: "MiddleAndRPN_/conv2/gamma/Adam"
  input: "MiddleAndRPN_/conv2/gamma/Adam_1"
  input: "MiddleAndRPN_/conv2/kernel"
  input: "MiddleAndRPN_/conv2/kernel/Adam"
  input: "MiddleAndRPN_/conv2/kernel/Adam_1"
  input: "MiddleAndRPN_/conv2/moving_mean"
  input: "MiddleAndRPN_/conv2/moving_variance"
  input: "MiddleAndRPN_/conv20/beta"
  input: "MiddleAndRPN_/conv20/beta/Adam"
  input: "MiddleAndRPN_/conv20/beta/Adam_1"
  input: "MiddleAndRPN_/conv20/bias"
  input: "MiddleAndRPN_/conv20/bias/Adam"
  input: "MiddleAndRPN_/conv20/bias/Adam_1"
  input: "MiddleAndRPN_/conv20/gamma"
  input: "MiddleAndRPN_/conv20/gamma/Adam"
  input: "MiddleAndRPN_/conv20/gamma/Adam_1"
  input: "MiddleAndRPN_/conv20/kernel"
  input: "MiddleAndRPN_/conv20/kernel/Adam"
  input: "MiddleAndRPN_/conv20/kernel/Adam_1"
  input: "MiddleAndRPN_/conv20/moving_mean"
  input: "MiddleAndRPN_/conv20/moving_variance"
  input: "MiddleAndRPN_/conv21/beta"
  input: "MiddleAndRPN_/conv21/beta/Adam"
  input: "MiddleAndRPN_/conv21/beta/Adam_1"
  input: "MiddleAndRPN_/conv21/bias"
  input: "MiddleAndRPN_/conv21/bias/Adam"
  input: "MiddleAndRPN_/conv21/bias/Adam_1"
  input: "MiddleAndRPN_/conv21/gamma"
  input: "MiddleAndRPN_/conv21/gamma/Adam"
  input: "MiddleAndRPN_/conv21/gamma/Adam_1"
  input: "MiddleAndRPN_/conv21/kernel"
  input: "MiddleAndRPN_/conv21/kernel/Adam"
  input: "MiddleAndRPN_/conv21/kernel/Adam_1"
  input: "MiddleAndRPN_/conv21/moving_mean"
  input: "MiddleAndRPN_/conv21/moving_variance"
  input: "MiddleAndRPN_/conv3/beta"
  input: "MiddleAndRPN_/conv3/beta/Adam"
  input: "MiddleAndRPN_/conv3/beta/Adam_1"
  input: "MiddleAndRPN_/conv3/bias"
  input: "MiddleAndRPN_/conv3/bias/Adam"
  input: "MiddleAndRPN_/conv3/bias/Adam_1"
  input: "MiddleAndRPN_/conv3/gamma"
  input: "MiddleAndRPN_/conv3/gamma/Adam"
  input: "MiddleAndRPN_/conv3/gamma/Adam_1"
  input: "MiddleAndRPN_/conv3/kernel"
  input: "MiddleAndRPN_/conv3/kernel/Adam"
  input: "MiddleAndRPN_/conv3/kernel/Adam_1"
  input: "MiddleAndRPN_/conv3/moving_mean"
  input: "MiddleAndRPN_/conv3/moving_variance"
  input: "MiddleAndRPN_/conv4/beta"
  input: "MiddleAndRPN_/conv4/beta/Adam"
  input: "MiddleAndRPN_/conv4/beta/Adam_1"
  input: "MiddleAndRPN_/conv4/bias"
  input: "MiddleAndRPN_/conv4/bias/Adam"
  input: "MiddleAndRPN_/conv4/bias/Adam_1"
  input: "MiddleAndRPN_/conv4/gamma"
  input: "MiddleAndRPN_/conv4/gamma/Adam"
  input: "MiddleAndRPN_/conv4/gamma/Adam_1"
  input: "MiddleAndRPN_/conv4/kernel"
  input: "MiddleAndRPN_/conv4/kernel/Adam"
  input: "MiddleAndRPN_/conv4/kernel/Adam_1"
  input: "MiddleAndRPN_/conv4/moving_mean"
  input: "MiddleAndRPN_/conv4/moving_variance"
  input: "MiddleAndRPN_/conv5/beta"
  input: "MiddleAndRPN_/conv5/beta/Adam"
  input: "MiddleAndRPN_/conv5/beta/Adam_1"
  input: "MiddleAndRPN_/conv5/bias"
  input: "MiddleAndRPN_/conv5/bias/Adam"
  input: "MiddleAndRPN_/conv5/bias/Adam_1"
  input: "MiddleAndRPN_/conv5/gamma"
  input: "MiddleAndRPN_/conv5/gamma/Adam"
  input: "MiddleAndRPN_/conv5/gamma/Adam_1"
  input: "MiddleAndRPN_/conv5/kernel"
  input: "MiddleAndRPN_/conv5/kernel/Adam"
  input: "MiddleAndRPN_/conv5/kernel/Adam_1"
  input: "MiddleAndRPN_/conv5/moving_mean"
  input: "MiddleAndRPN_/conv5/moving_variance"
  input: "MiddleAndRPN_/conv6/beta"
  input: "MiddleAndRPN_/conv6/beta/Adam"
  input: "MiddleAndRPN_/conv6/beta/Adam_1"
  input: "MiddleAndRPN_/conv6/bias"
  input: "MiddleAndRPN_/conv6/bias/Adam"
  input: "MiddleAndRPN_/conv6/bias/Adam_1"
  input: "MiddleAndRPN_/conv6/gamma"
  input: "MiddleAndRPN_/conv6/gamma/Adam"
  input: "MiddleAndRPN_/conv6/gamma/Adam_1"
  input: "MiddleAndRPN_/conv6/kernel"
  input: "MiddleAndRPN_/conv6/kernel/Adam"
  input: "MiddleAndRPN_/conv6/kernel/Adam_1"
  input: "MiddleAndRPN_/conv6/moving_mean"
  input: "MiddleAndRPN_/conv6/moving_variance"
  input: "MiddleAndRPN_/conv7/beta"
  input: "MiddleAndRPN_/conv7/beta/Adam"
  input: "MiddleAndRPN_/conv7/beta/Adam_1"
  input: "MiddleAndRPN_/conv7/bias"
  input: "MiddleAndRPN_/conv7/bias/Adam"
  input: "MiddleAndRPN_/conv7/bias/Adam_1"
  input: "MiddleAndRPN_/conv7/gamma"
  input: "MiddleAndRPN_/conv7/gamma/Adam"
  input: "MiddleAndRPN_/conv7/gamma/Adam_1"
  input: "MiddleAndRPN_/conv7/kernel"
  input: "MiddleAndRPN_/conv7/kernel/Adam"
  input: "MiddleAndRPN_/conv7/kernel/Adam_1"
  input: "MiddleAndRPN_/conv7/moving_mean"
  input: "MiddleAndRPN_/conv7/moving_variance"
  input: "MiddleAndRPN_/conv8/beta"
  input: "MiddleAndRPN_/conv8/beta/Adam"
  input: "MiddleAndRPN_/conv8/beta/Adam_1"
  input: "MiddleAndRPN_/conv8/bias"
  input: "MiddleAndRPN_/conv8/bias/Adam"
  input: "MiddleAndRPN_/conv8/bias/Adam_1"
  input: "MiddleAndRPN_/conv8/gamma"
  input: "MiddleAndRPN_/conv8/gamma/Adam"
  input: "MiddleAndRPN_/conv8/gamma/Adam_1"
  input: "MiddleAndRPN_/conv8/kernel"
  input: "MiddleAndRPN_/conv8/kernel/Adam"
  input: "MiddleAndRPN_/conv8/kernel/Adam_1"
  input: "MiddleAndRPN_/conv8/moving_mean"
  input: "MiddleAndRPN_/conv8/moving_variance"
  input: "MiddleAndRPN_/conv9/beta"
  input: "MiddleAndRPN_/conv9/beta/Adam"
  input: "MiddleAndRPN_/conv9/beta/Adam_1"
  input: "MiddleAndRPN_/conv9/bias"
  input: "MiddleAndRPN_/conv9/bias/Adam"
  input: "MiddleAndRPN_/conv9/bias/Adam_1"
  input: "MiddleAndRPN_/conv9/gamma"
  input: "MiddleAndRPN_/conv9/gamma/Adam"
  input: "MiddleAndRPN_/conv9/gamma/Adam_1"
  input: "MiddleAndRPN_/conv9/kernel"
  input: "MiddleAndRPN_/conv9/kernel/Adam"
  input: "MiddleAndRPN_/conv9/kernel/Adam_1"
  input: "MiddleAndRPN_/conv9/moving_mean"
  input: "MiddleAndRPN_/conv9/moving_variance"
  input: "MiddleAndRPN_/deconv1/beta"
  input: "MiddleAndRPN_/deconv1/beta/Adam"
  input: "MiddleAndRPN_/deconv1/beta/Adam_1"
  input: "MiddleAndRPN_/deconv1/bias"
  input: "MiddleAndRPN_/deconv1/bias/Adam"
  input: "MiddleAndRPN_/deconv1/bias/Adam_1"
  input: "MiddleAndRPN_/deconv1/gamma"
  input: "MiddleAndRPN_/deconv1/gamma/Adam"
  input: "MiddleAndRPN_/deconv1/gamma/Adam_1"
  input: "MiddleAndRPN_/deconv1/kernel"
  input: "MiddleAndRPN_/deconv1/kernel/Adam"
  input: "MiddleAndRPN_/deconv1/kernel/Adam_1"
  input: "MiddleAndRPN_/deconv1/moving_mean"
  input: "MiddleAndRPN_/deconv1/moving_variance"
  input: "MiddleAndRPN_/deconv2/beta"
  input: "MiddleAndRPN_/deconv2/beta/Adam"
  input: "MiddleAndRPN_/deconv2/beta/Adam_1"
  input: "MiddleAndRPN_/deconv2/bias"
  input: "MiddleAndRPN_/deconv2/bias/Adam"
  input: "MiddleAndRPN_/deconv2/bias/Adam_1"
  input: "MiddleAndRPN_/deconv2/gamma"
  input: "MiddleAndRPN_/deconv2/gamma/Adam"
  input: "MiddleAndRPN_/deconv2/gamma/Adam_1"
  input: "MiddleAndRPN_/deconv2/kernel"
  input: "MiddleAndRPN_/deconv2/kernel/Adam"
  input: "MiddleAndRPN_/deconv2/kernel/Adam_1"
  input: "MiddleAndRPN_/deconv2/moving_mean"
  input: "MiddleAndRPN_/deconv2/moving_variance"
  input: "MiddleAndRPN_/deconv3/beta"
  input: "MiddleAndRPN_/deconv3/beta/Adam"
  input: "MiddleAndRPN_/deconv3/beta/Adam_1"
  input: "MiddleAndRPN_/deconv3/bias"
  input: "MiddleAndRPN_/deconv3/bias/Adam"
  input: "MiddleAndRPN_/deconv3/bias/Adam_1"
  input: "MiddleAndRPN_/deconv3/gamma"
  input: "MiddleAndRPN_/deconv3/gamma/Adam"
  input: "MiddleAndRPN_/deconv3/gamma/Adam_1"
  input: "MiddleAndRPN_/deconv3/kernel"
  input: "MiddleAndRPN_/deconv3/kernel/Adam"
  input: "MiddleAndRPN_/deconv3/kernel/Adam_1"
  input: "MiddleAndRPN_/deconv3/moving_mean"
  input: "MiddleAndRPN_/deconv3/moving_variance"
  input: "VFE-1/beta"
  input: "VFE-1/beta/Adam"
  input: "VFE-1/beta/Adam_1"
  input: "VFE-1/bias"
  input: "VFE-1/bias/Adam"
  input: "VFE-1/bias/Adam_1"
  input: "VFE-1/gamma"
  input: "VFE-1/gamma/Adam"
  input: "VFE-1/gamma/Adam_1"
  input: "VFE-1/kernel"
  input: "VFE-1/kernel/Adam"
  input: "VFE-1/kernel/Adam_1"
  input: "VFE-1/moving_mean"
  input: "VFE-1/moving_variance"
  input: "VFE-2/beta"
  input: "VFE-2/beta/Adam"
  input: "VFE-2/beta/Adam_1"
  input: "VFE-2/bias"
  input: "VFE-2/bias/Adam"
  input: "VFE-2/bias/Adam_1"
  input: "VFE-2/gamma"
  input: "VFE-2/gamma/Adam"
  input: "VFE-2/gamma/Adam_1"
  input: "VFE-2/kernel"
  input: "VFE-2/kernel/Adam"
  input: "VFE-2/kernel/Adam_1"
  input: "VFE-2/moving_mean"
  input: "VFE-2/moving_variance"
  input: "Variable"
  input: "Variable_1"
  input: "Variable_2"
  input: "beta1_power"
  input: "beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/beta"
  input: "save/RestoreV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/beta/Adam"
  input: "save/RestoreV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/beta/Adam_1"
  input: "save/RestoreV2_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/bias"
  input: "save/RestoreV2_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/bias/Adam"
  input: "save/RestoreV2_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/bias/Adam_1"
  input: "save/RestoreV2_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/gamma"
  input: "save/RestoreV2_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/gamma/Adam"
  input: "save/RestoreV2_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/gamma/Adam_1"
  input: "save/RestoreV2_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/kernel"
  input: "save/RestoreV2_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/kernel/Adam"
  input: "save/RestoreV2_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/kernel/Adam_1"
  input: "save/RestoreV2_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/moving_mean"
  input: "save/RestoreV2_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "MiddleAndRPN_/conv1/moving_variance"
  input: "save/RestoreV2_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/beta"
  input: "save/RestoreV2_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/beta/Adam"
  input: "save/RestoreV2_15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/beta/Adam_1"
  input: "save/RestoreV2_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/bias"
  input: "save/RestoreV2_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/bias/Adam"
  input: "save/RestoreV2_18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/bias/Adam_1"
  input: "save/RestoreV2_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/gamma"
  input: "save/RestoreV2_20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/gamma/Adam"
  input: "save/RestoreV2_21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/gamma/Adam_1"
  input: "save/RestoreV2_22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/kernel"
  input: "save/RestoreV2_23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/kernel/Adam"
  input: "save/RestoreV2_24"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/kernel/Adam_1"
  input: "save/RestoreV2_25"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/moving_mean"
  input: "save/RestoreV2_26"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "MiddleAndRPN_/conv10/moving_variance"
  input: "save/RestoreV2_27"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv10/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/beta"
  input: "save/RestoreV2_28"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/beta/Adam"
  input: "save/RestoreV2_29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/beta/Adam_1"
  input: "save/RestoreV2_30"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/bias"
  input: "save/RestoreV2_31"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/bias/Adam"
  input: "save/RestoreV2_32"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/bias/Adam_1"
  input: "save/RestoreV2_33"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/gamma"
  input: "save/RestoreV2_34"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/gamma/Adam"
  input: "save/RestoreV2_35"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/gamma/Adam_1"
  input: "save/RestoreV2_36"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/kernel"
  input: "save/RestoreV2_37"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/kernel/Adam"
  input: "save/RestoreV2_38"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/kernel/Adam_1"
  input: "save/RestoreV2_39"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/moving_mean"
  input: "save/RestoreV2_40"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "MiddleAndRPN_/conv11/moving_variance"
  input: "save/RestoreV2_41"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv11/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/beta"
  input: "save/RestoreV2_42"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/beta/Adam"
  input: "save/RestoreV2_43"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/beta/Adam_1"
  input: "save/RestoreV2_44"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/bias"
  input: "save/RestoreV2_45"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/bias/Adam"
  input: "save/RestoreV2_46"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/bias/Adam_1"
  input: "save/RestoreV2_47"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/gamma"
  input: "save/RestoreV2_48"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/gamma/Adam"
  input: "save/RestoreV2_49"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/gamma/Adam_1"
  input: "save/RestoreV2_50"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/kernel"
  input: "save/RestoreV2_51"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/kernel/Adam"
  input: "save/RestoreV2_52"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/kernel/Adam_1"
  input: "save/RestoreV2_53"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/moving_mean"
  input: "save/RestoreV2_54"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "MiddleAndRPN_/conv12/moving_variance"
  input: "save/RestoreV2_55"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv12/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/beta"
  input: "save/RestoreV2_56"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/beta/Adam"
  input: "save/RestoreV2_57"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/beta/Adam_1"
  input: "save/RestoreV2_58"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/bias"
  input: "save/RestoreV2_59"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/bias/Adam"
  input: "save/RestoreV2_60"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/bias/Adam_1"
  input: "save/RestoreV2_61"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/gamma"
  input: "save/RestoreV2_62"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/gamma/Adam"
  input: "save/RestoreV2_63"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/gamma/Adam_1"
  input: "save/RestoreV2_64"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/kernel"
  input: "save/RestoreV2_65"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/kernel/Adam"
  input: "save/RestoreV2_66"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/kernel/Adam_1"
  input: "save/RestoreV2_67"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/moving_mean"
  input: "save/RestoreV2_68"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "MiddleAndRPN_/conv13/moving_variance"
  input: "save/RestoreV2_69"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv13/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/beta"
  input: "save/RestoreV2_70"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/beta/Adam"
  input: "save/RestoreV2_71"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/beta/Adam_1"
  input: "save/RestoreV2_72"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/bias"
  input: "save/RestoreV2_73"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/bias/Adam"
  input: "save/RestoreV2_74"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/bias/Adam_1"
  input: "save/RestoreV2_75"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/gamma"
  input: "save/RestoreV2_76"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/gamma/Adam"
  input: "save/RestoreV2_77"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/gamma/Adam_1"
  input: "save/RestoreV2_78"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/kernel"
  input: "save/RestoreV2_79"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/kernel/Adam"
  input: "save/RestoreV2_80"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/kernel/Adam_1"
  input: "save/RestoreV2_81"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/moving_mean"
  input: "save/RestoreV2_82"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "MiddleAndRPN_/conv14/moving_variance"
  input: "save/RestoreV2_83"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv14/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/beta"
  input: "save/RestoreV2_84"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/beta/Adam"
  input: "save/RestoreV2_85"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/beta/Adam_1"
  input: "save/RestoreV2_86"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/bias"
  input: "save/RestoreV2_87"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/bias/Adam"
  input: "save/RestoreV2_88"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/bias/Adam_1"
  input: "save/RestoreV2_89"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/gamma"
  input: "save/RestoreV2_90"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/gamma/Adam"
  input: "save/RestoreV2_91"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/gamma/Adam_1"
  input: "save/RestoreV2_92"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/kernel"
  input: "save/RestoreV2_93"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/kernel/Adam"
  input: "save/RestoreV2_94"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/kernel/Adam_1"
  input: "save/RestoreV2_95"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/moving_mean"
  input: "save/RestoreV2_96"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "MiddleAndRPN_/conv15/moving_variance"
  input: "save/RestoreV2_97"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv15/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/beta"
  input: "save/RestoreV2_98"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/beta/Adam"
  input: "save/RestoreV2_99"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/beta/Adam_1"
  input: "save/RestoreV2_100"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/bias"
  input: "save/RestoreV2_101"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/bias/Adam"
  input: "save/RestoreV2_102"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/bias/Adam_1"
  input: "save/RestoreV2_103"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/gamma"
  input: "save/RestoreV2_104"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/gamma/Adam"
  input: "save/RestoreV2_105"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/gamma/Adam_1"
  input: "save/RestoreV2_106"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/kernel"
  input: "save/RestoreV2_107"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/kernel/Adam"
  input: "save/RestoreV2_108"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/kernel/Adam_1"
  input: "save/RestoreV2_109"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/moving_mean"
  input: "save/RestoreV2_110"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "MiddleAndRPN_/conv16/moving_variance"
  input: "save/RestoreV2_111"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv16/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/beta"
  input: "save/RestoreV2_112"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/beta/Adam"
  input: "save/RestoreV2_113"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_114/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_114/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_114"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_114/tensor_names"
  input: "save/RestoreV2_114/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/beta/Adam_1"
  input: "save/RestoreV2_114"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_115/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_115/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_115"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_115/tensor_names"
  input: "save/RestoreV2_115/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/bias"
  input: "save/RestoreV2_115"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_116/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_116/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_116"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_116/tensor_names"
  input: "save/RestoreV2_116/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/bias/Adam"
  input: "save/RestoreV2_116"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_117/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_117/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_117"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_117/tensor_names"
  input: "save/RestoreV2_117/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/bias/Adam_1"
  input: "save/RestoreV2_117"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_118/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_118/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_118"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_118/tensor_names"
  input: "save/RestoreV2_118/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/gamma"
  input: "save/RestoreV2_118"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_119/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_119/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_119"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_119/tensor_names"
  input: "save/RestoreV2_119/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/gamma/Adam"
  input: "save/RestoreV2_119"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_120/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_120/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_120"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_120/tensor_names"
  input: "save/RestoreV2_120/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/gamma/Adam_1"
  input: "save/RestoreV2_120"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_121/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_121/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_121"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_121/tensor_names"
  input: "save/RestoreV2_121/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/kernel"
  input: "save/RestoreV2_121"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_122/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_122/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_122"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_122/tensor_names"
  input: "save/RestoreV2_122/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/kernel/Adam"
  input: "save/RestoreV2_122"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_123/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_123/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_123"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_123/tensor_names"
  input: "save/RestoreV2_123/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/kernel/Adam_1"
  input: "save/RestoreV2_123"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_124/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_124/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_124"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_124/tensor_names"
  input: "save/RestoreV2_124/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/moving_mean"
  input: "save/RestoreV2_124"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_125/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_125/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_125"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_125/tensor_names"
  input: "save/RestoreV2_125/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "MiddleAndRPN_/conv17/moving_variance"
  input: "save/RestoreV2_125"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv17/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_126/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_126/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_126"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_126/tensor_names"
  input: "save/RestoreV2_126/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/beta"
  input: "save/RestoreV2_126"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_127/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_127/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_127"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_127/tensor_names"
  input: "save/RestoreV2_127/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/beta/Adam"
  input: "save/RestoreV2_127"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_128/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_128/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_128"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_128/tensor_names"
  input: "save/RestoreV2_128/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/beta/Adam_1"
  input: "save/RestoreV2_128"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_129/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_129/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_129"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_129/tensor_names"
  input: "save/RestoreV2_129/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/bias"
  input: "save/RestoreV2_129"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_130/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_130/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_130"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_130/tensor_names"
  input: "save/RestoreV2_130/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/bias/Adam"
  input: "save/RestoreV2_130"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_131/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_131/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_131"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_131/tensor_names"
  input: "save/RestoreV2_131/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/bias/Adam_1"
  input: "save/RestoreV2_131"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_132/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_132/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_132"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_132/tensor_names"
  input: "save/RestoreV2_132/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/gamma"
  input: "save/RestoreV2_132"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_133/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_133/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_133"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_133/tensor_names"
  input: "save/RestoreV2_133/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/gamma/Adam"
  input: "save/RestoreV2_133"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_134/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_134/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_134"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_134/tensor_names"
  input: "save/RestoreV2_134/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/gamma/Adam_1"
  input: "save/RestoreV2_134"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_135/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_135/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_135"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_135/tensor_names"
  input: "save/RestoreV2_135/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/kernel"
  input: "save/RestoreV2_135"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_136/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_136/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_136"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_136/tensor_names"
  input: "save/RestoreV2_136/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/kernel/Adam"
  input: "save/RestoreV2_136"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_137/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_137/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_137"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_137/tensor_names"
  input: "save/RestoreV2_137/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/kernel/Adam_1"
  input: "save/RestoreV2_137"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_138/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_138/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_138"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_138/tensor_names"
  input: "save/RestoreV2_138/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/moving_mean"
  input: "save/RestoreV2_138"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_139/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_139/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_139"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_139/tensor_names"
  input: "save/RestoreV2_139/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "MiddleAndRPN_/conv18/moving_variance"
  input: "save/RestoreV2_139"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv18/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_140/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_140/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_140"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_140/tensor_names"
  input: "save/RestoreV2_140/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/beta"
  input: "save/RestoreV2_140"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_141/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_141/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_141"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_141/tensor_names"
  input: "save/RestoreV2_141/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/beta/Adam"
  input: "save/RestoreV2_141"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_142/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_142/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_142"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_142/tensor_names"
  input: "save/RestoreV2_142/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/beta/Adam_1"
  input: "save/RestoreV2_142"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_143/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_143/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_143"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_143/tensor_names"
  input: "save/RestoreV2_143/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/bias"
  input: "save/RestoreV2_143"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_144/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_144/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_144"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_144/tensor_names"
  input: "save/RestoreV2_144/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/bias/Adam"
  input: "save/RestoreV2_144"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_145/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_145/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_145"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_145/tensor_names"
  input: "save/RestoreV2_145/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/bias/Adam_1"
  input: "save/RestoreV2_145"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_146/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_146/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_146"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_146/tensor_names"
  input: "save/RestoreV2_146/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/gamma"
  input: "save/RestoreV2_146"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_147/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_147/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_147"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_147/tensor_names"
  input: "save/RestoreV2_147/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/gamma/Adam"
  input: "save/RestoreV2_147"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_148/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_148/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_148"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_148/tensor_names"
  input: "save/RestoreV2_148/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/gamma/Adam_1"
  input: "save/RestoreV2_148"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_149/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_149/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_149"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_149/tensor_names"
  input: "save/RestoreV2_149/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/kernel"
  input: "save/RestoreV2_149"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_150/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_150/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_150"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_150/tensor_names"
  input: "save/RestoreV2_150/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/kernel/Adam"
  input: "save/RestoreV2_150"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_151/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_151/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_151"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_151/tensor_names"
  input: "save/RestoreV2_151/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/kernel/Adam_1"
  input: "save/RestoreV2_151"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_152/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_152/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_152"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_152/tensor_names"
  input: "save/RestoreV2_152/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/moving_mean"
  input: "save/RestoreV2_152"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_153/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_153/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_153"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_153/tensor_names"
  input: "save/RestoreV2_153/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "MiddleAndRPN_/conv19/moving_variance"
  input: "save/RestoreV2_153"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv19/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_154/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_154/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_154"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_154/tensor_names"
  input: "save/RestoreV2_154/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/beta"
  input: "save/RestoreV2_154"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_155/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_155/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_155"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_155/tensor_names"
  input: "save/RestoreV2_155/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/beta/Adam"
  input: "save/RestoreV2_155"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_156/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_156/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_156"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_156/tensor_names"
  input: "save/RestoreV2_156/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/beta/Adam_1"
  input: "save/RestoreV2_156"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_157/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_157/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_157"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_157/tensor_names"
  input: "save/RestoreV2_157/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/bias"
  input: "save/RestoreV2_157"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_158/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_158/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_158"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_158/tensor_names"
  input: "save/RestoreV2_158/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/bias/Adam"
  input: "save/RestoreV2_158"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_159/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_159/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_159"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_159/tensor_names"
  input: "save/RestoreV2_159/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/bias/Adam_1"
  input: "save/RestoreV2_159"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_160/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_160/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_160"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_160/tensor_names"
  input: "save/RestoreV2_160/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/gamma"
  input: "save/RestoreV2_160"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_161/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_161/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_161"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_161/tensor_names"
  input: "save/RestoreV2_161/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/gamma/Adam"
  input: "save/RestoreV2_161"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_162/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_162/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_162"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_162/tensor_names"
  input: "save/RestoreV2_162/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/gamma/Adam_1"
  input: "save/RestoreV2_162"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_163/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_163/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_163"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_163/tensor_names"
  input: "save/RestoreV2_163/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/kernel"
  input: "save/RestoreV2_163"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_164/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_164/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_164"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_164/tensor_names"
  input: "save/RestoreV2_164/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/kernel/Adam"
  input: "save/RestoreV2_164"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_165/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_165/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_165"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_165/tensor_names"
  input: "save/RestoreV2_165/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/kernel/Adam_1"
  input: "save/RestoreV2_165"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_166/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_166/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_166"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_166/tensor_names"
  input: "save/RestoreV2_166/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/moving_mean"
  input: "save/RestoreV2_166"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_167/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_167/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_167"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_167/tensor_names"
  input: "save/RestoreV2_167/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "MiddleAndRPN_/conv2/moving_variance"
  input: "save/RestoreV2_167"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_168/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_168/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_168"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_168/tensor_names"
  input: "save/RestoreV2_168/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/beta"
  input: "save/RestoreV2_168"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_169/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_169/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_169"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_169/tensor_names"
  input: "save/RestoreV2_169/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/beta/Adam"
  input: "save/RestoreV2_169"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_170/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_170/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_170"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_170/tensor_names"
  input: "save/RestoreV2_170/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/beta/Adam_1"
  input: "save/RestoreV2_170"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_171/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_171/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_171"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_171/tensor_names"
  input: "save/RestoreV2_171/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/bias"
  input: "save/RestoreV2_171"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_172/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_172/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_172"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_172/tensor_names"
  input: "save/RestoreV2_172/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/bias/Adam"
  input: "save/RestoreV2_172"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_173/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_173/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_173"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_173/tensor_names"
  input: "save/RestoreV2_173/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/bias/Adam_1"
  input: "save/RestoreV2_173"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_174/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_174/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_174"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_174/tensor_names"
  input: "save/RestoreV2_174/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/gamma"
  input: "save/RestoreV2_174"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_175/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_175/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_175"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_175/tensor_names"
  input: "save/RestoreV2_175/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/gamma/Adam"
  input: "save/RestoreV2_175"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_176/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_176/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_176"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_176/tensor_names"
  input: "save/RestoreV2_176/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/gamma/Adam_1"
  input: "save/RestoreV2_176"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_177/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_177/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_177"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_177/tensor_names"
  input: "save/RestoreV2_177/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/kernel"
  input: "save/RestoreV2_177"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_178/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_178/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_178"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_178/tensor_names"
  input: "save/RestoreV2_178/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/kernel/Adam"
  input: "save/RestoreV2_178"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_179/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_179/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_179"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_179/tensor_names"
  input: "save/RestoreV2_179/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/kernel/Adam_1"
  input: "save/RestoreV2_179"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_180/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_180/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_180"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_180/tensor_names"
  input: "save/RestoreV2_180/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/moving_mean"
  input: "save/RestoreV2_180"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_181/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_181/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_181"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_181/tensor_names"
  input: "save/RestoreV2_181/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "MiddleAndRPN_/conv20/moving_variance"
  input: "save/RestoreV2_181"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv20/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_182/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_182/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_182"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_182/tensor_names"
  input: "save/RestoreV2_182/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/beta"
  input: "save/RestoreV2_182"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_183/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_183/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_183"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_183/tensor_names"
  input: "save/RestoreV2_183/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/beta/Adam"
  input: "save/RestoreV2_183"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_184/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_184/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_184"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_184/tensor_names"
  input: "save/RestoreV2_184/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/beta/Adam_1"
  input: "save/RestoreV2_184"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_185/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_185/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_185"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_185/tensor_names"
  input: "save/RestoreV2_185/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/bias"
  input: "save/RestoreV2_185"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_186/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_186/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_186"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_186/tensor_names"
  input: "save/RestoreV2_186/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/bias/Adam"
  input: "save/RestoreV2_186"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_187/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_187/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_187"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_187/tensor_names"
  input: "save/RestoreV2_187/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/bias/Adam_1"
  input: "save/RestoreV2_187"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_188/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_188/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_188"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_188/tensor_names"
  input: "save/RestoreV2_188/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/gamma"
  input: "save/RestoreV2_188"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_189/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_189/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_189"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_189/tensor_names"
  input: "save/RestoreV2_189/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/gamma/Adam"
  input: "save/RestoreV2_189"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_190/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_190/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_190"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_190/tensor_names"
  input: "save/RestoreV2_190/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/gamma/Adam_1"
  input: "save/RestoreV2_190"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_191/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_191/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_191"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_191/tensor_names"
  input: "save/RestoreV2_191/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/kernel"
  input: "save/RestoreV2_191"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_192/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_192/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_192"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_192/tensor_names"
  input: "save/RestoreV2_192/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/kernel/Adam"
  input: "save/RestoreV2_192"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_193/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_193/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_193"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_193/tensor_names"
  input: "save/RestoreV2_193/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/kernel/Adam_1"
  input: "save/RestoreV2_193"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_194/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_194/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_194"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_194/tensor_names"
  input: "save/RestoreV2_194/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/moving_mean"
  input: "save/RestoreV2_194"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_195/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_195/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_195"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_195/tensor_names"
  input: "save/RestoreV2_195/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "MiddleAndRPN_/conv21/moving_variance"
  input: "save/RestoreV2_195"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv21/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_196/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_196/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_196"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_196/tensor_names"
  input: "save/RestoreV2_196/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/beta"
  input: "save/RestoreV2_196"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_197/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_197/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_197"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_197/tensor_names"
  input: "save/RestoreV2_197/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/beta/Adam"
  input: "save/RestoreV2_197"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_198/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_198/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_198"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_198/tensor_names"
  input: "save/RestoreV2_198/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/beta/Adam_1"
  input: "save/RestoreV2_198"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_199/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_199/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_199"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_199/tensor_names"
  input: "save/RestoreV2_199/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/bias"
  input: "save/RestoreV2_199"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_200/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_200/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_200"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_200/tensor_names"
  input: "save/RestoreV2_200/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/bias/Adam"
  input: "save/RestoreV2_200"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_201/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_201/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_201"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_201/tensor_names"
  input: "save/RestoreV2_201/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/bias/Adam_1"
  input: "save/RestoreV2_201"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_202/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_202/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_202"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_202/tensor_names"
  input: "save/RestoreV2_202/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/gamma"
  input: "save/RestoreV2_202"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_203/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_203/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_203"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_203/tensor_names"
  input: "save/RestoreV2_203/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/gamma/Adam"
  input: "save/RestoreV2_203"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_204/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_204/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_204"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_204/tensor_names"
  input: "save/RestoreV2_204/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/gamma/Adam_1"
  input: "save/RestoreV2_204"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_205/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_205/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_205"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_205/tensor_names"
  input: "save/RestoreV2_205/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/kernel"
  input: "save/RestoreV2_205"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_206/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_206/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_206"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_206/tensor_names"
  input: "save/RestoreV2_206/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/kernel/Adam"
  input: "save/RestoreV2_206"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_207/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_207/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_207"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_207/tensor_names"
  input: "save/RestoreV2_207/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/kernel/Adam_1"
  input: "save/RestoreV2_207"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_208/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_208/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_208"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_208/tensor_names"
  input: "save/RestoreV2_208/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/moving_mean"
  input: "save/RestoreV2_208"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_209/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_209/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_209"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_209/tensor_names"
  input: "save/RestoreV2_209/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "MiddleAndRPN_/conv3/moving_variance"
  input: "save/RestoreV2_209"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_210/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_210/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_210"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_210/tensor_names"
  input: "save/RestoreV2_210/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/beta"
  input: "save/RestoreV2_210"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_211/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_211/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_211"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_211/tensor_names"
  input: "save/RestoreV2_211/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/beta/Adam"
  input: "save/RestoreV2_211"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_212/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_212/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_212"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_212/tensor_names"
  input: "save/RestoreV2_212/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/beta/Adam_1"
  input: "save/RestoreV2_212"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_213/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_213/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_213"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_213/tensor_names"
  input: "save/RestoreV2_213/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/bias"
  input: "save/RestoreV2_213"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_214/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_214/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_214"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_214/tensor_names"
  input: "save/RestoreV2_214/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/bias/Adam"
  input: "save/RestoreV2_214"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_215/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_215/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_215"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_215/tensor_names"
  input: "save/RestoreV2_215/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/bias/Adam_1"
  input: "save/RestoreV2_215"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_216/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_216/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_216"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_216/tensor_names"
  input: "save/RestoreV2_216/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/gamma"
  input: "save/RestoreV2_216"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_217/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_217/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_217"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_217/tensor_names"
  input: "save/RestoreV2_217/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/gamma/Adam"
  input: "save/RestoreV2_217"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_218/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_218/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_218"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_218/tensor_names"
  input: "save/RestoreV2_218/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/gamma/Adam_1"
  input: "save/RestoreV2_218"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_219/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_219/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_219"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_219/tensor_names"
  input: "save/RestoreV2_219/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/kernel"
  input: "save/RestoreV2_219"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_220/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_220/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_220"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_220/tensor_names"
  input: "save/RestoreV2_220/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/kernel/Adam"
  input: "save/RestoreV2_220"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_221/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_221/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_221"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_221/tensor_names"
  input: "save/RestoreV2_221/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/kernel/Adam_1"
  input: "save/RestoreV2_221"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_222/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_222/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_222"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_222/tensor_names"
  input: "save/RestoreV2_222/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/moving_mean"
  input: "save/RestoreV2_222"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_223/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_223/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_223"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_223/tensor_names"
  input: "save/RestoreV2_223/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "MiddleAndRPN_/conv4/moving_variance"
  input: "save/RestoreV2_223"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_224/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_224/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_224"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_224/tensor_names"
  input: "save/RestoreV2_224/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/beta"
  input: "save/RestoreV2_224"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_225/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_225/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_225"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_225/tensor_names"
  input: "save/RestoreV2_225/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/beta/Adam"
  input: "save/RestoreV2_225"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_226/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_226/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_226"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_226/tensor_names"
  input: "save/RestoreV2_226/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/beta/Adam_1"
  input: "save/RestoreV2_226"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_227/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_227/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_227"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_227/tensor_names"
  input: "save/RestoreV2_227/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/bias"
  input: "save/RestoreV2_227"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_228/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_228/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_228"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_228/tensor_names"
  input: "save/RestoreV2_228/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/bias/Adam"
  input: "save/RestoreV2_228"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_229/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_229/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_229"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_229/tensor_names"
  input: "save/RestoreV2_229/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/bias/Adam_1"
  input: "save/RestoreV2_229"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_230/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_230/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_230"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_230/tensor_names"
  input: "save/RestoreV2_230/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/gamma"
  input: "save/RestoreV2_230"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_231/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_231/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_231"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_231/tensor_names"
  input: "save/RestoreV2_231/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/gamma/Adam"
  input: "save/RestoreV2_231"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_232/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_232/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_232"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_232/tensor_names"
  input: "save/RestoreV2_232/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/gamma/Adam_1"
  input: "save/RestoreV2_232"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_233/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_233/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_233"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_233/tensor_names"
  input: "save/RestoreV2_233/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/kernel"
  input: "save/RestoreV2_233"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_234/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_234/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_234"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_234/tensor_names"
  input: "save/RestoreV2_234/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/kernel/Adam"
  input: "save/RestoreV2_234"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_235/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_235/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_235"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_235/tensor_names"
  input: "save/RestoreV2_235/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/kernel/Adam_1"
  input: "save/RestoreV2_235"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_236/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_236/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_236"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_236/tensor_names"
  input: "save/RestoreV2_236/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/moving_mean"
  input: "save/RestoreV2_236"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_237/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_237/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_237"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_237/tensor_names"
  input: "save/RestoreV2_237/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "MiddleAndRPN_/conv5/moving_variance"
  input: "save/RestoreV2_237"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv5/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_238/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_238/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_238"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_238/tensor_names"
  input: "save/RestoreV2_238/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/beta"
  input: "save/RestoreV2_238"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_239/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_239/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_239"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_239/tensor_names"
  input: "save/RestoreV2_239/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/beta/Adam"
  input: "save/RestoreV2_239"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_240/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_240/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_240"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_240/tensor_names"
  input: "save/RestoreV2_240/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/beta/Adam_1"
  input: "save/RestoreV2_240"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_241/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_241/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_241"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_241/tensor_names"
  input: "save/RestoreV2_241/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/bias"
  input: "save/RestoreV2_241"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_242/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_242/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_242"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_242/tensor_names"
  input: "save/RestoreV2_242/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/bias/Adam"
  input: "save/RestoreV2_242"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_243/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_243/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_243"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_243/tensor_names"
  input: "save/RestoreV2_243/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/bias/Adam_1"
  input: "save/RestoreV2_243"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_244/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_244/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_244"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_244/tensor_names"
  input: "save/RestoreV2_244/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/gamma"
  input: "save/RestoreV2_244"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_245/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_245/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_245"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_245/tensor_names"
  input: "save/RestoreV2_245/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/gamma/Adam"
  input: "save/RestoreV2_245"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_246/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_246/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_246"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_246/tensor_names"
  input: "save/RestoreV2_246/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/gamma/Adam_1"
  input: "save/RestoreV2_246"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_247/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_247/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_247"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_247/tensor_names"
  input: "save/RestoreV2_247/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/kernel"
  input: "save/RestoreV2_247"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_248/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_248/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_248"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_248/tensor_names"
  input: "save/RestoreV2_248/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/kernel/Adam"
  input: "save/RestoreV2_248"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_249/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_249/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_249"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_249/tensor_names"
  input: "save/RestoreV2_249/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/kernel/Adam_1"
  input: "save/RestoreV2_249"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_250/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_250/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_250"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_250/tensor_names"
  input: "save/RestoreV2_250/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/moving_mean"
  input: "save/RestoreV2_250"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_251/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_251/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_251"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_251/tensor_names"
  input: "save/RestoreV2_251/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "MiddleAndRPN_/conv6/moving_variance"
  input: "save/RestoreV2_251"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv6/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_252/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_252/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_252"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_252/tensor_names"
  input: "save/RestoreV2_252/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/beta"
  input: "save/RestoreV2_252"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_253/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_253/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_253"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_253/tensor_names"
  input: "save/RestoreV2_253/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/beta/Adam"
  input: "save/RestoreV2_253"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_254/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_254/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_254"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_254/tensor_names"
  input: "save/RestoreV2_254/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/beta/Adam_1"
  input: "save/RestoreV2_254"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_255/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_255/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_255"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_255/tensor_names"
  input: "save/RestoreV2_255/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/bias"
  input: "save/RestoreV2_255"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_256/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_256/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_256"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_256/tensor_names"
  input: "save/RestoreV2_256/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/bias/Adam"
  input: "save/RestoreV2_256"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_257/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_257/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_257"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_257/tensor_names"
  input: "save/RestoreV2_257/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/bias/Adam_1"
  input: "save/RestoreV2_257"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_258/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_258/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_258"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_258/tensor_names"
  input: "save/RestoreV2_258/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/gamma"
  input: "save/RestoreV2_258"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_259/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_259/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_259"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_259/tensor_names"
  input: "save/RestoreV2_259/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/gamma/Adam"
  input: "save/RestoreV2_259"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_260/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_260/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_260"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_260/tensor_names"
  input: "save/RestoreV2_260/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/gamma/Adam_1"
  input: "save/RestoreV2_260"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_261/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_261/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_261"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_261/tensor_names"
  input: "save/RestoreV2_261/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/kernel"
  input: "save/RestoreV2_261"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_262/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_262/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_262"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_262/tensor_names"
  input: "save/RestoreV2_262/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/kernel/Adam"
  input: "save/RestoreV2_262"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_263/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_263/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_263"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_263/tensor_names"
  input: "save/RestoreV2_263/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/kernel/Adam_1"
  input: "save/RestoreV2_263"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_264/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_264/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_264"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_264/tensor_names"
  input: "save/RestoreV2_264/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/moving_mean"
  input: "save/RestoreV2_264"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_265/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_265/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_265"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_265/tensor_names"
  input: "save/RestoreV2_265/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_265"
  op: "Assign"
  input: "MiddleAndRPN_/conv7/moving_variance"
  input: "save/RestoreV2_265"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv7/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_266/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_266/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_266"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_266/tensor_names"
  input: "save/RestoreV2_266/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_266"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/beta"
  input: "save/RestoreV2_266"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_267/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_267/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_267"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_267/tensor_names"
  input: "save/RestoreV2_267/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_267"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/beta/Adam"
  input: "save/RestoreV2_267"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_268/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_268/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_268"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_268/tensor_names"
  input: "save/RestoreV2_268/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_268"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/beta/Adam_1"
  input: "save/RestoreV2_268"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_269/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_269/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_269"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_269/tensor_names"
  input: "save/RestoreV2_269/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_269"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/bias"
  input: "save/RestoreV2_269"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_270/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_270/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_270"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_270/tensor_names"
  input: "save/RestoreV2_270/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_270"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/bias/Adam"
  input: "save/RestoreV2_270"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_271/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_271/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_271"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_271/tensor_names"
  input: "save/RestoreV2_271/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_271"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/bias/Adam_1"
  input: "save/RestoreV2_271"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_272/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_272/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_272"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_272/tensor_names"
  input: "save/RestoreV2_272/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_272"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/gamma"
  input: "save/RestoreV2_272"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_273/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_273/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_273"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_273/tensor_names"
  input: "save/RestoreV2_273/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_273"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/gamma/Adam"
  input: "save/RestoreV2_273"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_274/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_274/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_274"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_274/tensor_names"
  input: "save/RestoreV2_274/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_274"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/gamma/Adam_1"
  input: "save/RestoreV2_274"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_275/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_275/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_275"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_275/tensor_names"
  input: "save/RestoreV2_275/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_275"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/kernel"
  input: "save/RestoreV2_275"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_276/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_276/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_276"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_276/tensor_names"
  input: "save/RestoreV2_276/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_276"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/kernel/Adam"
  input: "save/RestoreV2_276"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_277/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_277/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_277"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_277/tensor_names"
  input: "save/RestoreV2_277/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_277"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/kernel/Adam_1"
  input: "save/RestoreV2_277"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_278/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_278/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_278"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_278/tensor_names"
  input: "save/RestoreV2_278/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_278"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/moving_mean"
  input: "save/RestoreV2_278"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_279/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_279/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_279"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_279/tensor_names"
  input: "save/RestoreV2_279/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_279"
  op: "Assign"
  input: "MiddleAndRPN_/conv8/moving_variance"
  input: "save/RestoreV2_279"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv8/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_280/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_280/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_280"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_280/tensor_names"
  input: "save/RestoreV2_280/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_280"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/beta"
  input: "save/RestoreV2_280"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_281/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_281/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_281"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_281/tensor_names"
  input: "save/RestoreV2_281/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_281"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/beta/Adam"
  input: "save/RestoreV2_281"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_282/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_282/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_282"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_282/tensor_names"
  input: "save/RestoreV2_282/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_282"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/beta/Adam_1"
  input: "save/RestoreV2_282"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_283/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_283/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_283"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_283/tensor_names"
  input: "save/RestoreV2_283/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_283"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/bias"
  input: "save/RestoreV2_283"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_284/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_284/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_284"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_284/tensor_names"
  input: "save/RestoreV2_284/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_284"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/bias/Adam"
  input: "save/RestoreV2_284"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_285/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_285/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_285"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_285/tensor_names"
  input: "save/RestoreV2_285/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_285"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/bias/Adam_1"
  input: "save/RestoreV2_285"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_286/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_286/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_286"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_286/tensor_names"
  input: "save/RestoreV2_286/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_286"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/gamma"
  input: "save/RestoreV2_286"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_287/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_287/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_287"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_287/tensor_names"
  input: "save/RestoreV2_287/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_287"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/gamma/Adam"
  input: "save/RestoreV2_287"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_288/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_288/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_288"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_288/tensor_names"
  input: "save/RestoreV2_288/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_288"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/gamma/Adam_1"
  input: "save/RestoreV2_288"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_289/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_289/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_289"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_289/tensor_names"
  input: "save/RestoreV2_289/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_289"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/kernel"
  input: "save/RestoreV2_289"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_290/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_290/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_290"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_290/tensor_names"
  input: "save/RestoreV2_290/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_290"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/kernel/Adam"
  input: "save/RestoreV2_290"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_291/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_291/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_291"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_291/tensor_names"
  input: "save/RestoreV2_291/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_291"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/kernel/Adam_1"
  input: "save/RestoreV2_291"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_292/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_292/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_292"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_292/tensor_names"
  input: "save/RestoreV2_292/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_292"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/moving_mean"
  input: "save/RestoreV2_292"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_293/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_293/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_293"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_293/tensor_names"
  input: "save/RestoreV2_293/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_293"
  op: "Assign"
  input: "MiddleAndRPN_/conv9/moving_variance"
  input: "save/RestoreV2_293"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv9/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_294/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_294/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_294"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_294/tensor_names"
  input: "save/RestoreV2_294/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_294"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/beta"
  input: "save/RestoreV2_294"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_295/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_295/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_295"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_295/tensor_names"
  input: "save/RestoreV2_295/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_295"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/beta/Adam"
  input: "save/RestoreV2_295"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_296/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_296/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_296"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_296/tensor_names"
  input: "save/RestoreV2_296/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_296"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/beta/Adam_1"
  input: "save/RestoreV2_296"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_297/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_297/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_297"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_297/tensor_names"
  input: "save/RestoreV2_297/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_297"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/bias"
  input: "save/RestoreV2_297"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_298/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_298/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_298"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_298/tensor_names"
  input: "save/RestoreV2_298/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_298"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/bias/Adam"
  input: "save/RestoreV2_298"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_299/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_299/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_299"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_299/tensor_names"
  input: "save/RestoreV2_299/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_299"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/bias/Adam_1"
  input: "save/RestoreV2_299"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_300/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_300/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_300"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_300/tensor_names"
  input: "save/RestoreV2_300/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_300"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/gamma"
  input: "save/RestoreV2_300"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_301/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_301/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_301"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_301/tensor_names"
  input: "save/RestoreV2_301/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_301"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/gamma/Adam"
  input: "save/RestoreV2_301"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_302/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_302/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_302"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_302/tensor_names"
  input: "save/RestoreV2_302/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_302"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/gamma/Adam_1"
  input: "save/RestoreV2_302"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_303/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_303/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_303"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_303/tensor_names"
  input: "save/RestoreV2_303/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_303"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/kernel"
  input: "save/RestoreV2_303"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_304/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_304/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_304"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_304/tensor_names"
  input: "save/RestoreV2_304/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_304"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/kernel/Adam"
  input: "save/RestoreV2_304"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_305/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_305/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_305"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_305/tensor_names"
  input: "save/RestoreV2_305/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_305"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/kernel/Adam_1"
  input: "save/RestoreV2_305"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_306/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_306/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_306"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_306/tensor_names"
  input: "save/RestoreV2_306/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_306"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/moving_mean"
  input: "save/RestoreV2_306"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_307/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_307/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_307"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_307/tensor_names"
  input: "save/RestoreV2_307/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_307"
  op: "Assign"
  input: "MiddleAndRPN_/deconv1/moving_variance"
  input: "save/RestoreV2_307"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_308/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_308/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_308"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_308/tensor_names"
  input: "save/RestoreV2_308/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_308"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/beta"
  input: "save/RestoreV2_308"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_309/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_309/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_309"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_309/tensor_names"
  input: "save/RestoreV2_309/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_309"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/beta/Adam"
  input: "save/RestoreV2_309"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_310/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_310/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_310"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_310/tensor_names"
  input: "save/RestoreV2_310/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_310"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/beta/Adam_1"
  input: "save/RestoreV2_310"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_311/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_311/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_311"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_311/tensor_names"
  input: "save/RestoreV2_311/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_311"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/bias"
  input: "save/RestoreV2_311"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_312/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_312/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_312"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_312/tensor_names"
  input: "save/RestoreV2_312/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_312"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/bias/Adam"
  input: "save/RestoreV2_312"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_313/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_313/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_313"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_313/tensor_names"
  input: "save/RestoreV2_313/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_313"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/bias/Adam_1"
  input: "save/RestoreV2_313"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_314/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_314/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_314"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_314/tensor_names"
  input: "save/RestoreV2_314/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_314"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/gamma"
  input: "save/RestoreV2_314"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_315/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_315/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_315"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_315/tensor_names"
  input: "save/RestoreV2_315/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_315"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/gamma/Adam"
  input: "save/RestoreV2_315"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_316/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_316/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_316"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_316/tensor_names"
  input: "save/RestoreV2_316/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_316"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/gamma/Adam_1"
  input: "save/RestoreV2_316"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_317/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_317/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_317"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_317/tensor_names"
  input: "save/RestoreV2_317/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_317"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/kernel"
  input: "save/RestoreV2_317"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_318/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_318/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_318"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_318/tensor_names"
  input: "save/RestoreV2_318/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_318"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/kernel/Adam"
  input: "save/RestoreV2_318"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_319/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_319/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_319"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_319/tensor_names"
  input: "save/RestoreV2_319/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_319"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/kernel/Adam_1"
  input: "save/RestoreV2_319"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_320/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_320/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_320"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_320/tensor_names"
  input: "save/RestoreV2_320/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_320"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/moving_mean"
  input: "save/RestoreV2_320"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_321/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_321/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_321"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_321/tensor_names"
  input: "save/RestoreV2_321/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_321"
  op: "Assign"
  input: "MiddleAndRPN_/deconv2/moving_variance"
  input: "save/RestoreV2_321"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_322/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_322/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_322"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_322/tensor_names"
  input: "save/RestoreV2_322/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_322"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/beta"
  input: "save/RestoreV2_322"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_323/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_323/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_323"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_323/tensor_names"
  input: "save/RestoreV2_323/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_323"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/beta/Adam"
  input: "save/RestoreV2_323"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_324/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_324/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_324"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_324/tensor_names"
  input: "save/RestoreV2_324/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_324"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/beta/Adam_1"
  input: "save/RestoreV2_324"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_325/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_325/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_325"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_325/tensor_names"
  input: "save/RestoreV2_325/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_325"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/bias"
  input: "save/RestoreV2_325"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_326/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_326/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_326"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_326/tensor_names"
  input: "save/RestoreV2_326/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_326"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/bias/Adam"
  input: "save/RestoreV2_326"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_327/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_327/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_327"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_327/tensor_names"
  input: "save/RestoreV2_327/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_327"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/bias/Adam_1"
  input: "save/RestoreV2_327"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_328/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_328/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_328"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_328/tensor_names"
  input: "save/RestoreV2_328/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_328"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/gamma"
  input: "save/RestoreV2_328"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_329/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_329/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_329"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_329/tensor_names"
  input: "save/RestoreV2_329/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_329"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/gamma/Adam"
  input: "save/RestoreV2_329"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_330/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_330/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_330"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_330/tensor_names"
  input: "save/RestoreV2_330/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_330"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/gamma/Adam_1"
  input: "save/RestoreV2_330"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_331/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_331/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_331"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_331/tensor_names"
  input: "save/RestoreV2_331/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_331"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/kernel"
  input: "save/RestoreV2_331"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_332/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_332/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_332"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_332/tensor_names"
  input: "save/RestoreV2_332/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_332"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/kernel/Adam"
  input: "save/RestoreV2_332"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_333/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_333/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_333"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_333/tensor_names"
  input: "save/RestoreV2_333/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_333"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/kernel/Adam_1"
  input: "save/RestoreV2_333"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_334/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_334/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_334"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_334/tensor_names"
  input: "save/RestoreV2_334/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_334"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/moving_mean"
  input: "save/RestoreV2_334"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_335/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_335/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_335"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_335/tensor_names"
  input: "save/RestoreV2_335/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_335"
  op: "Assign"
  input: "MiddleAndRPN_/deconv3/moving_variance"
  input: "save/RestoreV2_335"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/deconv3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_336/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_336/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_336"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_336/tensor_names"
  input: "save/RestoreV2_336/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_336"
  op: "Assign"
  input: "VFE-1/beta"
  input: "save/RestoreV2_336"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_337/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_337/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_337"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_337/tensor_names"
  input: "save/RestoreV2_337/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_337"
  op: "Assign"
  input: "VFE-1/beta/Adam"
  input: "save/RestoreV2_337"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_338/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_338/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_338"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_338/tensor_names"
  input: "save/RestoreV2_338/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_338"
  op: "Assign"
  input: "VFE-1/beta/Adam_1"
  input: "save/RestoreV2_338"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_339/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_339/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_339"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_339/tensor_names"
  input: "save/RestoreV2_339/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_339"
  op: "Assign"
  input: "VFE-1/bias"
  input: "save/RestoreV2_339"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_340/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_340/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_340"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_340/tensor_names"
  input: "save/RestoreV2_340/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_340"
  op: "Assign"
  input: "VFE-1/bias/Adam"
  input: "save/RestoreV2_340"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_341/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_341/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_341"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_341/tensor_names"
  input: "save/RestoreV2_341/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_341"
  op: "Assign"
  input: "VFE-1/bias/Adam_1"
  input: "save/RestoreV2_341"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_342/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_342/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_342"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_342/tensor_names"
  input: "save/RestoreV2_342/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_342"
  op: "Assign"
  input: "VFE-1/gamma"
  input: "save/RestoreV2_342"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_343/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_343/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_343"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_343/tensor_names"
  input: "save/RestoreV2_343/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_343"
  op: "Assign"
  input: "VFE-1/gamma/Adam"
  input: "save/RestoreV2_343"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_344/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_344/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_344"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_344/tensor_names"
  input: "save/RestoreV2_344/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_344"
  op: "Assign"
  input: "VFE-1/gamma/Adam_1"
  input: "save/RestoreV2_344"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_345/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_345/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_345"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_345/tensor_names"
  input: "save/RestoreV2_345/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_345"
  op: "Assign"
  input: "VFE-1/kernel"
  input: "save/RestoreV2_345"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_346/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_346/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_346"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_346/tensor_names"
  input: "save/RestoreV2_346/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_346"
  op: "Assign"
  input: "VFE-1/kernel/Adam"
  input: "save/RestoreV2_346"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_347/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_347/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_347"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_347/tensor_names"
  input: "save/RestoreV2_347/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_347"
  op: "Assign"
  input: "VFE-1/kernel/Adam_1"
  input: "save/RestoreV2_347"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_348/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_348/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_348"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_348/tensor_names"
  input: "save/RestoreV2_348/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_348"
  op: "Assign"
  input: "VFE-1/moving_mean"
  input: "save/RestoreV2_348"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_349/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-1/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_349/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_349"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_349/tensor_names"
  input: "save/RestoreV2_349/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_349"
  op: "Assign"
  input: "VFE-1/moving_variance"
  input: "save/RestoreV2_349"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_350/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_350/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_350"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_350/tensor_names"
  input: "save/RestoreV2_350/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_350"
  op: "Assign"
  input: "VFE-2/beta"
  input: "save/RestoreV2_350"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_351/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_351/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_351"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_351/tensor_names"
  input: "save/RestoreV2_351/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_351"
  op: "Assign"
  input: "VFE-2/beta/Adam"
  input: "save/RestoreV2_351"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_352/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_352/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_352"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_352/tensor_names"
  input: "save/RestoreV2_352/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_352"
  op: "Assign"
  input: "VFE-2/beta/Adam_1"
  input: "save/RestoreV2_352"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_353/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_353/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_353"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_353/tensor_names"
  input: "save/RestoreV2_353/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_353"
  op: "Assign"
  input: "VFE-2/bias"
  input: "save/RestoreV2_353"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_354/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_354/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_354"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_354/tensor_names"
  input: "save/RestoreV2_354/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_354"
  op: "Assign"
  input: "VFE-2/bias/Adam"
  input: "save/RestoreV2_354"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_355/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_355/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_355"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_355/tensor_names"
  input: "save/RestoreV2_355/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_355"
  op: "Assign"
  input: "VFE-2/bias/Adam_1"
  input: "save/RestoreV2_355"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_356/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_356/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_356"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_356/tensor_names"
  input: "save/RestoreV2_356/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_356"
  op: "Assign"
  input: "VFE-2/gamma"
  input: "save/RestoreV2_356"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_357/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_357/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_357"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_357/tensor_names"
  input: "save/RestoreV2_357/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_357"
  op: "Assign"
  input: "VFE-2/gamma/Adam"
  input: "save/RestoreV2_357"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_358/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_358/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_358"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_358/tensor_names"
  input: "save/RestoreV2_358/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_358"
  op: "Assign"
  input: "VFE-2/gamma/Adam_1"
  input: "save/RestoreV2_358"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_359/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_359/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_359"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_359/tensor_names"
  input: "save/RestoreV2_359/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_359"
  op: "Assign"
  input: "VFE-2/kernel"
  input: "save/RestoreV2_359"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_360/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_360/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_360"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_360/tensor_names"
  input: "save/RestoreV2_360/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_360"
  op: "Assign"
  input: "VFE-2/kernel/Adam"
  input: "save/RestoreV2_360"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_361/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_361/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_361"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_361/tensor_names"
  input: "save/RestoreV2_361/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_361"
  op: "Assign"
  input: "VFE-2/kernel/Adam_1"
  input: "save/RestoreV2_361"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_362/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_362/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_362"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_362/tensor_names"
  input: "save/RestoreV2_362/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_362"
  op: "Assign"
  input: "VFE-2/moving_mean"
  input: "save/RestoreV2_362"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_363/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "VFE-2/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_363/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_363"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_363/tensor_names"
  input: "save/RestoreV2_363/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_363"
  op: "Assign"
  input: "VFE-2/moving_variance"
  input: "save/RestoreV2_363"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VFE-2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_364/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable"
      }
    }
  }
}
node {
  name: "save/RestoreV2_364/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_364"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_364/tensor_names"
  input: "save/RestoreV2_364/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_364"
  op: "Assign"
  input: "Variable"
  input: "save/RestoreV2_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_365/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_365/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_365"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_365/tensor_names"
  input: "save/RestoreV2_365/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_365"
  op: "Assign"
  input: "Variable_1"
  input: "save/RestoreV2_365"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_366/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_2"
      }
    }
  }
}
node {
  name: "save/RestoreV2_366/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_366"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_366/tensor_names"
  input: "save/RestoreV2_366/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_366"
  op: "Assign"
  input: "Variable_2"
  input: "save/RestoreV2_366"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_367/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_367/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_367"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_367/tensor_names"
  input: "save/RestoreV2_367/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_367"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2_367"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_368/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_368/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_368"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_368/tensor_names"
  input: "save/RestoreV2_368/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_368"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_368"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MiddleAndRPN_/conv1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign_364"
  input: "^save/Assign_365"
  input: "^save/Assign_366"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_265"
  input: "^save/Assign_266"
  input: "^save/Assign_267"
  input: "^save/Assign_268"
  input: "^save/Assign_269"
  input: "^save/Assign_270"
  input: "^save/Assign_271"
  input: "^save/Assign_272"
  input: "^save/Assign_273"
  input: "^save/Assign_274"
  input: "^save/Assign_275"
  input: "^save/Assign_276"
  input: "^save/Assign_277"
  input: "^save/Assign_278"
  input: "^save/Assign_279"
  input: "^save/Assign_280"
  input: "^save/Assign_281"
  input: "^save/Assign_282"
  input: "^save/Assign_283"
  input: "^save/Assign_284"
  input: "^save/Assign_285"
  input: "^save/Assign_286"
  input: "^save/Assign_287"
  input: "^save/Assign_288"
  input: "^save/Assign_289"
  input: "^save/Assign_290"
  input: "^save/Assign_291"
  input: "^save/Assign_292"
  input: "^save/Assign_293"
  input: "^save/Assign_294"
  input: "^save/Assign_295"
  input: "^save/Assign_296"
  input: "^save/Assign_297"
  input: "^save/Assign_298"
  input: "^save/Assign_299"
  input: "^save/Assign_300"
  input: "^save/Assign_301"
  input: "^save/Assign_302"
  input: "^save/Assign_303"
  input: "^save/Assign_304"
  input: "^save/Assign_305"
  input: "^save/Assign_306"
  input: "^save/Assign_307"
  input: "^save/Assign_308"
  input: "^save/Assign_309"
  input: "^save/Assign_310"
  input: "^save/Assign_311"
  input: "^save/Assign_312"
  input: "^save/Assign_313"
  input: "^save/Assign_314"
  input: "^save/Assign_315"
  input: "^save/Assign_316"
  input: "^save/Assign_317"
  input: "^save/Assign_318"
  input: "^save/Assign_319"
  input: "^save/Assign_320"
  input: "^save/Assign_321"
  input: "^save/Assign_322"
  input: "^save/Assign_323"
  input: "^save/Assign_324"
  input: "^save/Assign_325"
  input: "^save/Assign_326"
  input: "^save/Assign_327"
  input: "^save/Assign_328"
  input: "^save/Assign_329"
  input: "^save/Assign_330"
  input: "^save/Assign_331"
  input: "^save/Assign_332"
  input: "^save/Assign_333"
  input: "^save/Assign_334"
  input: "^save/Assign_335"
  input: "^save/Assign_336"
  input: "^save/Assign_337"
  input: "^save/Assign_338"
  input: "^save/Assign_339"
  input: "^save/Assign_340"
  input: "^save/Assign_341"
  input: "^save/Assign_342"
  input: "^save/Assign_343"
  input: "^save/Assign_344"
  input: "^save/Assign_345"
  input: "^save/Assign_346"
  input: "^save/Assign_347"
  input: "^save/Assign_348"
  input: "^save/Assign_349"
  input: "^save/Assign_350"
  input: "^save/Assign_351"
  input: "^save/Assign_352"
  input: "^save/Assign_353"
  input: "^save/Assign_354"
  input: "^save/Assign_355"
  input: "^save/Assign_356"
  input: "^save/Assign_357"
  input: "^save/Assign_358"
  input: "^save/Assign_359"
  input: "^save/Assign_360"
  input: "^save/Assign_361"
  input: "^save/Assign_362"
  input: "^save/Assign_363"
  input: "^save/Assign_367"
  input: "^save/Assign_368"
  device: "/device:GPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
node {
  name: "train/loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train/loss"
      }
    }
  }
}
node {
  name: "train/loss"
  op: "ScalarSummary"
  input: "train/loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/reg_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train/reg_loss"
      }
    }
  }
}
node {
  name: "train/reg_loss"
  op: "ScalarSummary"
  input: "train/reg_loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/cls_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train/cls_loss"
      }
    }
  }
}
node {
  name: "train/cls_loss"
  op: "ScalarSummary"
  input: "train/cls_loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/cls_pos_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train/cls_pos_loss"
      }
    }
  }
}
node {
  name: "train/cls_pos_loss"
  op: "ScalarSummary"
  input: "train/cls_pos_loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/cls_neg_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train/cls_neg_loss"
      }
    }
  }
}
node {
  name: "train/cls_neg_loss"
  op: "ScalarSummary"
  input: "train/cls_neg_loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-1/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "VFE-1/kernel_0"
      }
    }
  }
}
node {
  name: "VFE-1/kernel_0"
  op: "HistogramSummary"
  input: "VFE-1/kernel_0/tag"
  input: "VFE-1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-1/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "VFE-1/bias_0"
      }
    }
  }
}
node {
  name: "VFE-1/bias_0"
  op: "HistogramSummary"
  input: "VFE-1/bias_0/tag"
  input: "VFE-1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-1/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "VFE-1/gamma_0"
      }
    }
  }
}
node {
  name: "VFE-1/gamma_0"
  op: "HistogramSummary"
  input: "VFE-1/gamma_0/tag"
  input: "VFE-1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-1/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "VFE-1/beta_0"
      }
    }
  }
}
node {
  name: "VFE-1/beta_0"
  op: "HistogramSummary"
  input: "VFE-1/beta_0/tag"
  input: "VFE-1/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-2/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "VFE-2/kernel_0"
      }
    }
  }
}
node {
  name: "VFE-2/kernel_0"
  op: "HistogramSummary"
  input: "VFE-2/kernel_0/tag"
  input: "VFE-2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-2/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "VFE-2/bias_0"
      }
    }
  }
}
node {
  name: "VFE-2/bias_0"
  op: "HistogramSummary"
  input: "VFE-2/bias_0/tag"
  input: "VFE-2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-2/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "VFE-2/gamma_0"
      }
    }
  }
}
node {
  name: "VFE-2/gamma_0"
  op: "HistogramSummary"
  input: "VFE-2/gamma_0/tag"
  input: "VFE-2/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VFE-2/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "VFE-2/beta_0"
      }
    }
  }
}
node {
  name: "VFE-2/beta_0"
  op: "HistogramSummary"
  input: "VFE-2/beta_0/tag"
  input: "VFE-2/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv1/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv1/kernel_0/tag"
  input: "MiddleAndRPN_/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv1/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv1/bias_0/tag"
  input: "MiddleAndRPN_/conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv1/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv1/gamma_0/tag"
  input: "MiddleAndRPN_/conv1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv1/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv1/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv1/beta_0/tag"
  input: "MiddleAndRPN_/conv1/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv2/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv2/kernel_0/tag"
  input: "MiddleAndRPN_/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv2/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv2/bias_0/tag"
  input: "MiddleAndRPN_/conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv2/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv2/gamma_0/tag"
  input: "MiddleAndRPN_/conv2/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv2/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv2/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv2/beta_0/tag"
  input: "MiddleAndRPN_/conv2/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv3/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv3/kernel_0/tag"
  input: "MiddleAndRPN_/conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv3/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv3/bias_0/tag"
  input: "MiddleAndRPN_/conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv3/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv3/gamma_0/tag"
  input: "MiddleAndRPN_/conv3/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv3/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv3/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv3/beta_0/tag"
  input: "MiddleAndRPN_/conv3/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv4/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv4/kernel_0/tag"
  input: "MiddleAndRPN_/conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv4/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv4/bias_0/tag"
  input: "MiddleAndRPN_/conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv4/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv4/gamma_0/tag"
  input: "MiddleAndRPN_/conv4/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv4/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv4/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv4/beta_0/tag"
  input: "MiddleAndRPN_/conv4/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv5/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv5/kernel_0/tag"
  input: "MiddleAndRPN_/conv5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv5/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv5/bias_0/tag"
  input: "MiddleAndRPN_/conv5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv5/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv5/gamma_0/tag"
  input: "MiddleAndRPN_/conv5/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv5/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv5/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv5/beta_0/tag"
  input: "MiddleAndRPN_/conv5/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv6/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv6/kernel_0/tag"
  input: "MiddleAndRPN_/conv6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv6/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv6/bias_0/tag"
  input: "MiddleAndRPN_/conv6/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv6/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv6/gamma_0/tag"
  input: "MiddleAndRPN_/conv6/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv6/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv6/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv6/beta_0/tag"
  input: "MiddleAndRPN_/conv6/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv7/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv7/kernel_0/tag"
  input: "MiddleAndRPN_/conv7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv7/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv7/bias_0/tag"
  input: "MiddleAndRPN_/conv7/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv7/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv7/gamma_0/tag"
  input: "MiddleAndRPN_/conv7/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv7/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv7/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv7/beta_0/tag"
  input: "MiddleAndRPN_/conv7/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv1/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv1/kernel_0/tag"
  input: "MiddleAndRPN_/deconv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv1/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv1/bias_0/tag"
  input: "MiddleAndRPN_/deconv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv1/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv1/gamma_0/tag"
  input: "MiddleAndRPN_/deconv1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv1/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv1/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv1/beta_0/tag"
  input: "MiddleAndRPN_/deconv1/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv8/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv8/kernel_0/tag"
  input: "MiddleAndRPN_/conv8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv8/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv8/bias_0/tag"
  input: "MiddleAndRPN_/conv8/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv8/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv8/gamma_0/tag"
  input: "MiddleAndRPN_/conv8/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv8/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv8/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv8/beta_0/tag"
  input: "MiddleAndRPN_/conv8/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv9/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv9/kernel_0/tag"
  input: "MiddleAndRPN_/conv9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv9/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv9/bias_0/tag"
  input: "MiddleAndRPN_/conv9/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv9/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv9/gamma_0/tag"
  input: "MiddleAndRPN_/conv9/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv9/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv9/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv9/beta_0/tag"
  input: "MiddleAndRPN_/conv9/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv10/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv10/kernel_0/tag"
  input: "MiddleAndRPN_/conv10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv10/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv10/bias_0/tag"
  input: "MiddleAndRPN_/conv10/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv10/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv10/gamma_0/tag"
  input: "MiddleAndRPN_/conv10/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv10/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv10/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv10/beta_0/tag"
  input: "MiddleAndRPN_/conv10/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv11/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv11/kernel_0/tag"
  input: "MiddleAndRPN_/conv11/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv11/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv11/bias_0/tag"
  input: "MiddleAndRPN_/conv11/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv11/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv11/gamma_0/tag"
  input: "MiddleAndRPN_/conv11/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv11/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv11/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv11/beta_0/tag"
  input: "MiddleAndRPN_/conv11/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv12/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv12/kernel_0/tag"
  input: "MiddleAndRPN_/conv12/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv12/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv12/bias_0/tag"
  input: "MiddleAndRPN_/conv12/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv12/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv12/gamma_0/tag"
  input: "MiddleAndRPN_/conv12/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv12/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv12/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv12/beta_0/tag"
  input: "MiddleAndRPN_/conv12/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv13/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv13/kernel_0/tag"
  input: "MiddleAndRPN_/conv13/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv13/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv13/bias_0/tag"
  input: "MiddleAndRPN_/conv13/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv13/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv13/gamma_0/tag"
  input: "MiddleAndRPN_/conv13/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv13/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv13/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv13/beta_0/tag"
  input: "MiddleAndRPN_/conv13/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv2/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv2/kernel_0/tag"
  input: "MiddleAndRPN_/deconv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv2/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv2/bias_0/tag"
  input: "MiddleAndRPN_/deconv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv2/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv2/gamma_0/tag"
  input: "MiddleAndRPN_/deconv2/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv2/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv2/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv2/beta_0/tag"
  input: "MiddleAndRPN_/deconv2/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv14/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv14/kernel_0/tag"
  input: "MiddleAndRPN_/conv14/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv14/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv14/bias_0/tag"
  input: "MiddleAndRPN_/conv14/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv14/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv14/gamma_0/tag"
  input: "MiddleAndRPN_/conv14/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv14/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv14/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv14/beta_0/tag"
  input: "MiddleAndRPN_/conv14/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv15/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv15/kernel_0/tag"
  input: "MiddleAndRPN_/conv15/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv15/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv15/bias_0/tag"
  input: "MiddleAndRPN_/conv15/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv15/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv15/gamma_0/tag"
  input: "MiddleAndRPN_/conv15/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv15/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv15/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv15/beta_0/tag"
  input: "MiddleAndRPN_/conv15/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv16/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv16/kernel_0/tag"
  input: "MiddleAndRPN_/conv16/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv16/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv16/bias_0/tag"
  input: "MiddleAndRPN_/conv16/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv16/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv16/gamma_0/tag"
  input: "MiddleAndRPN_/conv16/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv16/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv16/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv16/beta_0/tag"
  input: "MiddleAndRPN_/conv16/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv17/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv17/kernel_0/tag"
  input: "MiddleAndRPN_/conv17/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv17/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv17/bias_0/tag"
  input: "MiddleAndRPN_/conv17/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv17/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv17/gamma_0/tag"
  input: "MiddleAndRPN_/conv17/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv17/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv17/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv17/beta_0/tag"
  input: "MiddleAndRPN_/conv17/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv18/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv18/kernel_0/tag"
  input: "MiddleAndRPN_/conv18/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv18/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv18/bias_0/tag"
  input: "MiddleAndRPN_/conv18/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv18/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv18/gamma_0/tag"
  input: "MiddleAndRPN_/conv18/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv18/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv18/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv18/beta_0/tag"
  input: "MiddleAndRPN_/conv18/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv19/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv19/kernel_0/tag"
  input: "MiddleAndRPN_/conv19/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv19/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv19/bias_0/tag"
  input: "MiddleAndRPN_/conv19/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv19/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv19/gamma_0/tag"
  input: "MiddleAndRPN_/conv19/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv19/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv19/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv19/beta_0/tag"
  input: "MiddleAndRPN_/conv19/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv3/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv3/kernel_0/tag"
  input: "MiddleAndRPN_/deconv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv3/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv3/bias_0/tag"
  input: "MiddleAndRPN_/deconv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv3/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv3/gamma_0/tag"
  input: "MiddleAndRPN_/deconv3/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/deconv3/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/deconv3/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/deconv3/beta_0/tag"
  input: "MiddleAndRPN_/deconv3/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv20/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv20/kernel_0/tag"
  input: "MiddleAndRPN_/conv20/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv20/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv20/bias_0/tag"
  input: "MiddleAndRPN_/conv20/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv20/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv20/gamma_0/tag"
  input: "MiddleAndRPN_/conv20/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv20/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv20/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv20/beta_0/tag"
  input: "MiddleAndRPN_/conv20/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv21/kernel_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/kernel_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv21/kernel_0/tag"
  input: "MiddleAndRPN_/conv21/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv21/bias_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/bias_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv21/bias_0/tag"
  input: "MiddleAndRPN_/conv21/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv21/gamma_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/gamma_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv21/gamma_0/tag"
  input: "MiddleAndRPN_/conv21/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta_0/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "MiddleAndRPN_/conv21/beta_0"
      }
    }
  }
}
node {
  name: "MiddleAndRPN_/conv21/beta_0"
  op: "HistogramSummary"
  input: "MiddleAndRPN_/conv21/beta_0/tag"
  input: "MiddleAndRPN_/conv21/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "train/loss"
  input: "train/reg_loss"
  input: "train/cls_loss"
  input: "train/cls_pos_loss"
  input: "train/cls_neg_loss"
  input: "VFE-1/kernel_0"
  input: "VFE-1/bias_0"
  input: "VFE-1/gamma_0"
  input: "VFE-1/beta_0"
  input: "VFE-2/kernel_0"
  input: "VFE-2/bias_0"
  input: "VFE-2/gamma_0"
  input: "VFE-2/beta_0"
  input: "MiddleAndRPN_/conv1/kernel_0"
  input: "MiddleAndRPN_/conv1/bias_0"
  input: "MiddleAndRPN_/conv1/gamma_0"
  input: "MiddleAndRPN_/conv1/beta_0"
  input: "MiddleAndRPN_/conv2/kernel_0"
  input: "MiddleAndRPN_/conv2/bias_0"
  input: "MiddleAndRPN_/conv2/gamma_0"
  input: "MiddleAndRPN_/conv2/beta_0"
  input: "MiddleAndRPN_/conv3/kernel_0"
  input: "MiddleAndRPN_/conv3/bias_0"
  input: "MiddleAndRPN_/conv3/gamma_0"
  input: "MiddleAndRPN_/conv3/beta_0"
  input: "MiddleAndRPN_/conv4/kernel_0"
  input: "MiddleAndRPN_/conv4/bias_0"
  input: "MiddleAndRPN_/conv4/gamma_0"
  input: "MiddleAndRPN_/conv4/beta_0"
  input: "MiddleAndRPN_/conv5/kernel_0"
  input: "MiddleAndRPN_/conv5/bias_0"
  input: "MiddleAndRPN_/conv5/gamma_0"
  input: "MiddleAndRPN_/conv5/beta_0"
  input: "MiddleAndRPN_/conv6/kernel_0"
  input: "MiddleAndRPN_/conv6/bias_0"
  input: "MiddleAndRPN_/conv6/gamma_0"
  input: "MiddleAndRPN_/conv6/beta_0"
  input: "MiddleAndRPN_/conv7/kernel_0"
  input: "MiddleAndRPN_/conv7/bias_0"
  input: "MiddleAndRPN_/conv7/gamma_0"
  input: "MiddleAndRPN_/conv7/beta_0"
  input: "MiddleAndRPN_/deconv1/kernel_0"
  input: "MiddleAndRPN_/deconv1/bias_0"
  input: "MiddleAndRPN_/deconv1/gamma_0"
  input: "MiddleAndRPN_/deconv1/beta_0"
  input: "MiddleAndRPN_/conv8/kernel_0"
  input: "MiddleAndRPN_/conv8/bias_0"
  input: "MiddleAndRPN_/conv8/gamma_0"
  input: "MiddleAndRPN_/conv8/beta_0"
  input: "MiddleAndRPN_/conv9/kernel_0"
  input: "MiddleAndRPN_/conv9/bias_0"
  input: "MiddleAndRPN_/conv9/gamma_0"
  input: "MiddleAndRPN_/conv9/beta_0"
  input: "MiddleAndRPN_/conv10/kernel_0"
  input: "MiddleAndRPN_/conv10/bias_0"
  input: "MiddleAndRPN_/conv10/gamma_0"
  input: "MiddleAndRPN_/conv10/beta_0"
  input: "MiddleAndRPN_/conv11/kernel_0"
  input: "MiddleAndRPN_/conv11/bias_0"
  input: "MiddleAndRPN_/conv11/gamma_0"
  input: "MiddleAndRPN_/conv11/beta_0"
  input: "MiddleAndRPN_/conv12/kernel_0"
  input: "MiddleAndRPN_/conv12/bias_0"
  input: "MiddleAndRPN_/conv12/gamma_0"
  input: "MiddleAndRPN_/conv12/beta_0"
  input: "MiddleAndRPN_/conv13/kernel_0"
  input: "MiddleAndRPN_/conv13/bias_0"
  input: "MiddleAndRPN_/conv13/gamma_0"
  input: "MiddleAndRPN_/conv13/beta_0"
  input: "MiddleAndRPN_/deconv2/kernel_0"
  input: "MiddleAndRPN_/deconv2/bias_0"
  input: "MiddleAndRPN_/deconv2/gamma_0"
  input: "MiddleAndRPN_/deconv2/beta_0"
  input: "MiddleAndRPN_/conv14/kernel_0"
  input: "MiddleAndRPN_/conv14/bias_0"
  input: "MiddleAndRPN_/conv14/gamma_0"
  input: "MiddleAndRPN_/conv14/beta_0"
  input: "MiddleAndRPN_/conv15/kernel_0"
  input: "MiddleAndRPN_/conv15/bias_0"
  input: "MiddleAndRPN_/conv15/gamma_0"
  input: "MiddleAndRPN_/conv15/beta_0"
  input: "MiddleAndRPN_/conv16/kernel_0"
  input: "MiddleAndRPN_/conv16/bias_0"
  input: "MiddleAndRPN_/conv16/gamma_0"
  input: "MiddleAndRPN_/conv16/beta_0"
  input: "MiddleAndRPN_/conv17/kernel_0"
  input: "MiddleAndRPN_/conv17/bias_0"
  input: "MiddleAndRPN_/conv17/gamma_0"
  input: "MiddleAndRPN_/conv17/beta_0"
  input: "MiddleAndRPN_/conv18/kernel_0"
  input: "MiddleAndRPN_/conv18/bias_0"
  input: "MiddleAndRPN_/conv18/gamma_0"
  input: "MiddleAndRPN_/conv18/beta_0"
  input: "MiddleAndRPN_/conv19/kernel_0"
  input: "MiddleAndRPN_/conv19/bias_0"
  input: "MiddleAndRPN_/conv19/gamma_0"
  input: "MiddleAndRPN_/conv19/beta_0"
  input: "MiddleAndRPN_/deconv3/kernel_0"
  input: "MiddleAndRPN_/deconv3/bias_0"
  input: "MiddleAndRPN_/deconv3/gamma_0"
  input: "MiddleAndRPN_/deconv3/beta_0"
  input: "MiddleAndRPN_/conv20/kernel_0"
  input: "MiddleAndRPN_/conv20/bias_0"
  input: "MiddleAndRPN_/conv20/gamma_0"
  input: "MiddleAndRPN_/conv20/beta_0"
  input: "MiddleAndRPN_/conv21/kernel_0"
  input: "MiddleAndRPN_/conv21/bias_0"
  input: "MiddleAndRPN_/conv21/gamma_0"
  input: "MiddleAndRPN_/conv21/beta_0"
  attr {
    key: "N"
    value {
      i: 109
    }
  }
}
node {
  name: "validate/loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "validate/loss"
      }
    }
  }
}
node {
  name: "validate/loss"
  op: "ScalarSummary"
  input: "validate/loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "validate/reg_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "validate/reg_loss"
      }
    }
  }
}
node {
  name: "validate/reg_loss"
  op: "ScalarSummary"
  input: "validate/reg_loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "validate/cls_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "validate/cls_loss"
      }
    }
  }
}
node {
  name: "validate/cls_loss"
  op: "ScalarSummary"
  input: "validate/cls_loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "validate/cls_pos_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "validate/cls_pos_loss"
      }
    }
  }
}
node {
  name: "validate/cls_pos_loss"
  op: "ScalarSummary"
  input: "validate/cls_pos_loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "validate/cls_neg_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "validate/cls_neg_loss"
      }
    }
  }
}
node {
  name: "validate/cls_neg_loss"
  op: "ScalarSummary"
  input: "validate/cls_neg_loss/tags"
  input: "gpu_0/MiddleAndRPN_/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "validate/loss"
  input: "validate/reg_loss"
  input: "validate/cls_loss"
  input: "validate/cls_pos_loss"
  input: "validate/cls_neg_loss"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
}
node {
  name: "predict/bird_view_lidar/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "predict/bird_view_lidar"
      }
    }
  }
}
node {
  name: "predict/bird_view_lidar"
  op: "ImageSummary"
  input: "predict/bird_view_lidar/tag"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "predict/bird_view_heatmap/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "predict/bird_view_heatmap"
      }
    }
  }
}
node {
  name: "predict/bird_view_heatmap"
  op: "ImageSummary"
  input: "predict/bird_view_heatmap/tag"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "predict/front_view_rgb/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "predict/front_view_rgb"
      }
    }
  }
}
node {
  name: "predict/front_view_rgb"
  op: "ImageSummary"
  input: "predict/front_view_rgb/tag"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "Merge_2/MergeSummary"
  op: "MergeSummary"
  input: "predict/bird_view_lidar"
  input: "predict/bird_view_heatmap"
  input: "predict/front_view_rgb"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
}
versions {
  producer: 24
}
